{"version":3,"sources":["components/sidebar/display/textSize.tsx","components/sidebar/display/themeOption.tsx","components/theme.tsx","components/sidebar/display/themeDropdown.tsx","components/sidebar/display/displayMenu.tsx","components/sidebar/STT/listening.tsx","components/sidebar/STT/speechLanguage.tsx","components/sidebar/STT/textLanguage.tsx","components/sidebar/STT/STTMenu.tsx","components/sidebar/phrase/phraseList.tsx","components/sidebar/phrase/phraseListAdd.tsx","components/sidebar/phrase/phraseMenu.tsx","components/sidebar/sidebar.tsx","components/topbar/fullScreen.tsx","components/topbar/menuHider.tsx","components/api/azure/AzureDropdown.tsx","components/api/pickApi.tsx","components/api/azure/azureRecognition.tsx","components/topbar/ApiDropdown.tsx","components/topbar/topbar.tsx","components/api/webspeech/recognition.tsx","components/api/recogComponent.tsx","mode/desktop/Desktop.tsx","App.tsx","redux/reducers/displayReducers.tsx","redux/reducers/apiReducers.tsx","redux/reducers/controlReducers.tsx","store.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","slider","width","marginLeft","textBox","PlusMinus","props","dispatch","useDispatch","textS","useSelector","state","DisplayReducer","styles","styled","Slider","theme","color","height","padding","transition","backgroundColor","border","boxShadow","marginRight","palette","mode","opacity","undefined","className","Typography","gutterBottom","Grid","container","spacing","alignItems","item","xs","sx","components","Thumb","children","other","textSize","style","secondaryColor","value","onChange","e","val","event","copyStatus","Object","assign","type","payload","handleInputChangeSlider","marks","label","step","min","max","Theme","colors","hex","rgb","text","changeTheme","copy","JSON","parse","target","display","flexWrap","marginBottom","Array","from","map","_","xIndex","yIndex","transform","tabIndex","stringify","onClick","background","cursor","borderStyle","position","borderColor","borderRadius","borderWidth","outline","displayStatus","myTheme","createTheme","primary","main","secondary","primaryColor","AccountMenu","React","anchorEl","setAnchorEl","open","Boolean","Box","textAlign","ThemeProvider","Button","id","variant","disableElevation","currentTarget","Menu","onClose","PaperProps","elevation","filter","boxSizing","mr","transformOrigin","horizontal","vertical","anchorOrigin","DisplayMenu","setState","ListItem","ListItemIcon","icon","ListItemText","IconButton","Collapse","in","timeout","unmountOnExit","List","component","disablePadding","pl","pt","CustomizedMenus","controlStatus","ControlReducer","listening","languages","StyledMenu","marginTop","grey","fontSize","innerHeight","outerHeight","alpha","action","selectedOpacity","control","language","speechLanguage","handleClickItem","aria-controls","aria-haspopup","aria-expanded","MenuListProps","index","MenuItem","disableRipple","textLanguages","textLanguage","STTMenu","mb","isRecording","PhrasePopUp","phraseList","currentPhraseList","currentPhrase","shouldCollapse","clickAddList","phrases","push","availableSpace","currentList","name","ml","mt","TextField","console","log","p","Paper","InputBase","flex","placeholder","onKeyDown","key","preventDefault","bgcolor","overflow","overflowWrap","aria-labelledby","phrase","head","listPhrases","splice","phraseListStatus","PhraseListReducer","phraseListMap","entries","entry","initialPhraseList","Swal","fire","customClass","input","returnFocus","showCancelButton","then","result","Divider","get","PhraseMenu","STT","stt","visualization","phraseRecognition","paddingLeft","MessageIcon","ArchitectureIcon","DetailsIcon","currTheme","Fullscreen","isFullScreen","elem","document","documentElement","exitFullscreen","requestFullscreen","MenuHider","menuVisible","STATUS","AzureDropdown","pog","test","useCallback","azureStatus","a","Promise","resolve","reject","azureSpeech","speechSDK","fromSubscription","azureKey","azureRegion","speechRecognitionLanguage","addTargetLanguage","azureAudioConfig","fromDefaultMicrophoneInput","reco","canceled","sessionStarted","recognizeOnceAsync","error","useMemo","GetAzureRecognition","openAzure","AzureReducer","apiStatus","handleChangeKey","handleEnter","toggleEnter","response","localStorage","setItem","swal","title","timer","buttons","no","currentAPI","pr","noValidate","autoComplete","success","warning","IconStatus","NULL","AVAILABLE","UNAVAILABLE","streamTextStatus","webspeechStatus","APIStatusReducer","toggleDrawer","apiStat","api","isArrow","apiName","ListItemButton","Tooltip","size","content","top","right","zIndex","TemporaryDrawer","isOpen","AppBar","onMouseOut","topbarID","getElementById","onMouseOver","Toolbar","maxHeight","Drawer","disableEnforceFocus","getSpeechRecognition","window","webkitSpeechRecognition","Error","speechRecognition","continuous","interimResults","transcriptsFull","desiredAPI","WebRecognitionExample","webspeechHandler","azureHandler","addEventListener","allowOutsideClick","showDenyButton","confirmButtonText","isConfirmed","textSizeA","transcript","azureTranscripts","setTranscripts","azureListen","lastStartedAt","Date","getTime","current","setProfanity","fromRecognizer","i","length","addPhrase","lastRecognized","startContinuousRecognitionAsync","recognizing","s","stopContinuousRecognitionAsync","translations","recognized","sessionStopped","timeSinceStart","AzureRecognition","finalTranscript","transcripts","listen","onresult","stop","finalResult","results","join","onend","start","useRecognition","stateRefControl","stateRefAzure","stateCurrentAPI","fullTranscripts","capts","scrollHeight","clientHeight","scrollTop","left","paddingRight","overflowY","textColor","Desktop","App","COLOR","APIS","initialState","saveLocally","varName","getLocalState","checkNull","getItem","initialAPIStatusState","WEBSPEECH","streamtextStatus","initialPhraseListState","Map","initialAzureState","initialStreamtextState","initialControlState","rootReducer","combineReducers","StreamtextReducer","newListName","iterator","has","newPhraseList","set","delete","store","createStore","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.764dc518.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider, { SliderThumb } from '@mui/material/Slider';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { styled } from '@mui/material/styles';\r\n\r\nimport Input from '@material-ui/core/Input';\r\nimport { RootState, DisplayStatus } from '../../../redux/types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nconst useStyles = makeStyles({\r\n  slider: {\r\n    width: '16vw',\r\n    marginLeft: '2vw',\r\n  },\r\n  textBox: {\r\n    width: '2.5vw',\r\n    marginLeft: '1vw'\r\n  }\r\n});\r\nfunction valuetext(value) {\r\n  return `${value}`;\r\n}\r\nexport default function PlusMinus(props) {\r\n  const dispatch = useDispatch()\r\n  const textS = useSelector((state: RootState) => {\r\n    return state.DisplayReducer as DisplayStatus;\r\n  });\r\n  \r\n  const handleInputChangeInput = (event) => {\r\n    let copyStatus = Object.assign({}, textS);\r\n    copyStatus.textSize = Number(event.target.value)\r\n    if (event.nativeEvent.inputType) {\r\n      \r\n    } else {\r\n      dispatch({ type: 'SET_TEXT', payload: copyStatus })\r\n    }\r\n  }\r\n  const handleInputChangeSlider = (event) => {\r\n    let copyStatus = Object.assign({}, textS);\r\n    copyStatus.textSize = event\r\n    dispatch({ type: 'SET_TEXT', payload: copyStatus })\r\n  }\r\n  const styles = useStyles()\r\n  const handleBlur = () => {\r\n    let copyStatus = Object.assign({}, textS);\r\n    if (textS.textSize < 1) {\r\n      copyStatus.textSize = 1\r\n    } else if (textS.textSize > 15) {\r\n      copyStatus.textSize = 1\r\n    }\r\n    dispatch({ type: 'SET_TEXT', payload: copyStatus })\r\n  };\r\n\r\n  interface AirbnbThumbComponentProps extends React.HTMLAttributes<unknown> {}\r\n\r\nfunction AirbnbThumbComponent(props: AirbnbThumbComponentProps) {\r\n  const { children, ...other } = props;\r\n  return (\r\n    <SliderThumb {...other}>\r\n      {children}      \r\n      {textS.textSize}\r\n    </SliderThumb>\r\n  );\r\n}\r\n\r\nconst TextSizeSlider = styled(Slider)(({ theme }) => ({\r\n  color: '#3a8589',\r\n  height: 3,\r\n  padding: '13px 0',\r\n  '& .MuiSlider-thumb': {\r\n    transition: '.2s',\r\n    height: 27,\r\n    width: 27,\r\n    backgroundColor: '#fff',\r\n    border: '1px solid currentColor',\r\n    '&:hover': {\r\n      transition: '.2s',\r\n      boxShadow: '0 0 0 8px rgba(58, 133, 137, 0.16)',\r\n      height: 18,\r\n      width: 18,\r\n      backgroundColor: 'currentColor',\r\n    },\r\n    '& .airbnb-bar': {\r\n      height: 9,\r\n      width: 1,\r\n      backgroundColor: 'currentColor',\r\n      marginLeft: 1,\r\n      marginRight: 1,\r\n    },\r\n  },\r\n  '& .MuiSlider-track': {\r\n    height: 3,\r\n  },\r\n  '& .MuiSlider-rail': {\r\n    color: theme.palette.mode === 'dark' ? '#bfbfbf' : '#d8d8d8',\r\n    opacity: theme.palette.mode === 'dark' ? undefined : 1,\r\n    height: 3,\r\n  },\r\n}));\r\nconst marks = [\r\n  {\r\n    value: 1,\r\n    label: \"1\",\r\n  },\r\n  {\r\n    value: 5,\r\n    label: \"5\",\r\n  },\r\n  {\r\n    value: 10,\r\n    label: \"10\",\r\n  },\r\n  {\r\n    value: 15,\r\n    label: \"15\",\r\n  },\r\n];\r\n  return (\r\n    <div className={styles.slider}>\r\n        <Typography gutterBottom>\r\n        </Typography>\r\n        <Grid container spacing={2} alignItems=\"center\">\r\n          <Grid item xs>\r\n          <Slider\r\n                  sx={{\r\n                    '& .MuiSlider-thumb': {\r\n                      transition: '.2s',\r\n\r\n                      height: 27,\r\n                      width: 27,\r\n                      backgroundColor: '#fff',\r\n                      border: '1px solid currentColor',\r\n                      '&:hover': {\r\n                        boxShadow: '0 0 0 8px rgba(58, 133, 137, 0.16)',\r\n                        height: 18,\r\n                        width: 18,\r\n                        backgroundColor: 'currentColor',\r\n                      },\r\n                      \r\n                    }\r\n                  }}\r\n        components={{ Thumb: AirbnbThumbComponent }}\r\n        style={{ color: textS.secondaryColor }}\r\n        value={textS.textSize}\r\n        onChange={(e, val) => { handleInputChangeSlider(val) }}\r\n        marks={marks}\r\n        step={1}\r\n        min={1}\r\n        max={15}\r\n\r\n      />\r\n            \r\n          </Grid>\r\n          \r\n        </Grid>\r\n    </div>\r\n  )\r\n}","import { useDispatch } from 'react-redux';\r\nexport default function Theme(props) {\r\n    const dispatch = useDispatch()\r\n    type color = {\r\n        hex: string\r\n        rgb: string\r\n        text: number\r\n    }\r\n    \r\n    let colors: color[][] = [\r\n        [\r\n            {hex: '#000000', rgb: '#466636', text: 1},\r\n            {hex: '#000000', rgb: '#995262', text: 1},\r\n            {hex: '#000000', rgb: '#527399', text: 1},\r\n            {hex: '#000000', rgb: '#705299', text: 1},\r\n        ],\r\n        [    \r\n            {hex: '#0f0f0f', rgb:  '#292929', text: 1},\r\n            {hex: '#5c5c5c', rgb: '#1f1f1f', text: 0},\r\n            {hex: '#c2c2c2', rgb: '#5c5c5c', text: 0},\r\n            {hex: '#ebebeb', rgb: '#858585', text: 0},\r\n        ],\r\n        //Dark\r\n        [\r\n            {hex: '#23331b', rgb: '#466636', text: 1},\r\n            {hex: '#331b21', rgb: '#995262', text: 1},\r\n            {hex: '#1b2633', rgb: '#527399', text: 1},\r\n            {hex: '#251b33', rgb: '#705299', text: 1},\r\n        ],\r\n        //Light\r\n        [\r\n            {hex: '#d7ffc4', rgb: '#689952', text: 0},\r\n            {hex: '#ffc4d1', rgb: '#b35f72', text: 0},\r\n            {hex: '#c4dfff', rgb: '#5f86b3', text: 0},\r\n            {hex: '#ddc4ff', rgb: '#835fb3', text: 0},\r\n        ],\r\n        //Light\r\n        [   \r\n            {hex: '#f7fff3', rgb: '#8bcc6d', text: 0},\r\n            {hex: '#fff3f6', rgb: '#ff88a3', text: 0},\r\n            {hex: '#f3f9ff', rgb: '#88bfff', text: 0},\r\n            {hex: '#f8f3ff', rgb: '#bb88ff', text: 0},\r\n        ],\r\n        \r\n    ]\r\n    const changeTheme = (event) =>\r\n    {\r\n        let copy = JSON.parse(event.target.value)\r\n        if (copy.text == 0) {\r\n            copy.text = '#000000'\r\n        } else {\r\n            copy.text = '#FFFFFF'\r\n        }\r\n        dispatch({type: 'CHANGE_PRIMARY_THEME', payload: copy.hex})\r\n        dispatch({type: 'CHANGE_SECONDARY_THEME', payload: copy.rgb})\r\n        dispatch({type: 'CHANGE_TEXT_COLOR', payload: copy.text})\r\n    }\r\n    return (\r\n        <div className=\"circle-picker \" style={{display: 'flex', flexWrap: 'wrap', marginBottom: '-2vw', marginLeft: '.8vw' }}>\r\n                <table>\r\n                {Array.from(Array(5)).map((_, xIndex) => (\r\n                    <tr>\r\n                        {colors[xIndex].map((colors: color, yIndex) =>\r\n                            <th>\r\n                                <div style={{ width: '1.5vw', height: '1.5vw', marginRight: '.8vw', marginBottom: '.8vw', transform: 'scale(1)', transition: 'transform 100ms ease 0s' }}>\r\n                                    <span>\r\n                                        <button tabIndex={0} value = {JSON.stringify(colors)} onClick={changeTheme} style={{\r\n                                            background: 'transparent',\r\n                                            height: '100%',\r\n                                            width: '100%',\r\n                                            cursor: 'pointer',\r\n                                            borderStyle: 'solid',\r\n                                            position: 'relative',\r\n                                            borderColor: colors.rgb,\r\n                                            borderRadius: '30%',\r\n                                            borderWidth: 'thick',\r\n                                            outline: 'none',\r\n                                            boxShadow: colors.hex + ' 0px 0px 0px 15px inset',\r\n                                            transition: 'box-shadow 100ms ease 0s'\r\n                                        }} />\r\n                                    </span>\r\n                                </div>\r\n                            </th>\r\n                        )}\r\n                    </tr>\r\n                     ))}\r\n                </table>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\n            ","import { createTheme } from '@mui/material/styles';\r\nimport { RootState, DisplayStatus } from '../redux/types';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport default function Theme() {\r\nconst displayStatus = useSelector((state: RootState) => {\r\n    return state.DisplayReducer as DisplayStatus;\r\n})\r\nconst myTheme = createTheme\r\n    ({\r\n        palette: {\r\n            primary: {\r\n                main: displayStatus.secondaryColor\r\n            },\r\n            secondary: {\r\n                main: displayStatus.primaryColor\r\n            }\r\n            \r\n        },\r\n    });\r\n    return{myTheme}\r\n}","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Menu from '@mui/material/Menu';\r\nimport Button from '@mui/material/Button';\r\nimport PaletteIcon from '@mui/icons-material/Palette';\r\nimport ThemeOption from './themeOption'\r\nimport { ThemeProvider } from '@mui/material/styles';\r\nimport Theme from './../../theme'\r\n\r\nexport default function AccountMenu() {\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const open = Boolean(anchorEl);\r\n  const { myTheme } = Theme()\r\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Box sx={{ display: 'flex', alignItems: 'center', textAlign: 'center' }}>\r\n        <ThemeProvider theme={myTheme}>\r\n\r\n          <Button\r\n            id=\"demo-customized-button\"\r\n            variant=\"contained\"\r\n            disableElevation\r\n            onClick={handleClick}\r\n            sx={{ width: 50, height: 30 }}\r\n          >\r\n            {<PaletteIcon />}\r\n\r\n          </Button>\r\n        </ThemeProvider>\r\n      </Box>\r\n      <Menu\r\n        anchorEl={anchorEl}\r\n        open={open}\r\n        onClose={handleClose}\r\n        PaperProps={{\r\n          elevation: 0,\r\n          sx: {\r\n            height: '14vw',\r\n            filter: 'drop-shadow(0px 2px 8px rgba(0,0,0,0.32))',\r\n            '& .MuiAvatar-root': {\r\n              boxSizing: \"border-box\",\r\n              mr: 1,\r\n            },\r\n\r\n          },\r\n        }}\r\n        transformOrigin={{ horizontal: 'left', vertical: 'center' }}\r\n        anchorOrigin={{ horizontal: 'center', vertical: 'center' }}\r\n      >\r\n        <ThemeOption />\r\n      </Menu>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport List from '@mui/material/List';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport ExpandLess from '@mui/icons-material/ExpandLess';\r\nimport ExpandMore from '@mui/icons-material/ExpandMore';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport TextSize from './textSize'\r\nimport ThemeDropdown from './themeDropdown'\r\n\r\nexport default function DisplayMenu(props) {\r\n  const [state, setState] = React.useState({\r\n    open: false,\r\n  });\r\n  const toggleDrawer =\r\n    (head: string) =>\r\n      (event: React.KeyboardEvent | React.MouseEvent) => {\r\n        setState({ ...state, open: !state.open })\r\n      }\r\n  return (\r\n    <div>\r\n      <ListItem>\r\n        <ListItemIcon>\r\n          <props.icon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Display\" />\r\n        <IconButton onClick={toggleDrawer(\"display\")} >\r\n          {state.open ? <ExpandLess /> : <ExpandMore />}\r\n        </IconButton>\r\n      </ListItem>\r\n      <Collapse in={state.open} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n          <ListItem sx={{ pl: 4 }}>\r\n            <ListItemText primary=\"Textsize\" />\r\n          </ListItem>\r\n          <TextSize />\r\n          <ListItem sx={{ pl: 4, pt: 5 }}>\r\n            <ListItemText primary=\"Theme\" />\r\n            <ThemeDropdown />\r\n          </ListItem>\r\n        </List>\r\n      </Collapse>\r\n    </div>\r\n  );\r\n}","import PlayArrowIcon from '@mui/icons-material/PlayArrow';\r\nimport { RootState } from '../../../store';\r\nimport PauseIcon from '@mui/icons-material/Pause';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { ControlStatus } from '../../../redux/types';\r\nimport Theme from '../../theme'\r\nimport * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\n\r\n   export default function CustomizedMenus(props) {\r\n     const dispatch = useDispatch()\r\n     let controlStatus = useSelector((state: RootState) => {\r\n          return state.ControlReducer as ControlStatus;\r\n     });\r\n\r\n     const toggleDrawer = (event: React.KeyboardEvent | React.MouseEvent) => {\r\n          controlStatus.listening = !controlStatus.listening\r\n          dispatch({type: 'FLIP_RECORDING', payload: controlStatus})\r\n     }\r\n     const {myTheme} = Theme()\r\n\r\n     return (\r\n       <div>\r\n        <ThemeProvider theme={myTheme}>\r\n         <Button\r\n           id=\"demo-customized-button\"\r\n           variant=\"contained\"\r\n           disableElevation\r\n           onClick={toggleDrawer}\r\n           sx={{ width: 50, height:30}}\r\n         >\r\n          {controlStatus.listening === false ? <PlayArrowIcon /> : <PauseIcon />}\r\n         </Button>\r\n         </ThemeProvider>\r\n\r\n       </div>\r\n     );\r\n   }\r\n","import * as React from 'react';\r\nimport { styled, alpha } from '@mui/material/styles';\r\nimport Button from '@mui/material/Button';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport Theme from '../../theme'\r\nimport { RootState, ControlStatus } from '../../../redux/types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Menu, { MenuProps } from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\n/* todo:\r\n  1   Make language bar a fixed height so that it can only display ~8 languages \r\n      and not take up the whole screen\r\n  2   Change language lists to a 2d array that so we can display the countries name\r\n      and save the shortened title in RootState\r\n*/\r\nconst languages = [\r\n  \"ar-EG\",\r\n  \"ca-ES\",\r\n  \"da-DK\",\r\n  \"da-DK\",\r\n  \"de-DE\",\r\n  \"en-AU\",\r\n  \"en-CA\",\r\n  \"en-GB\",\r\n  \"en-IN\",\r\n  \"en-NZ\",\r\n  \"en-US\",\r\n  \"es-ES\",\r\n  \"es-MX\",\r\n  \"fi-FI\",\r\n  \"fr-CA\",\r\n  \"fr-FR\",\r\n  \"hi-IN\",\r\n  \"it-IT\",\r\n  \"ja-JP\",\r\n  \"ko-KR\",\r\n  \"nb-NO\",\r\n  \"nl-NL\",\r\n  \"pl-PL\",\r\n  \"pt-BR\",\r\n  \"pt-PT\",\r\n  \"ru-RU\",\r\n  \"sv-SE\",\r\n  \"zh-CN\",\r\n  \"zh-HK\",\r\n  \"zh-TW\",]\r\n\r\nconst StyledMenu = styled((props: MenuProps) => (\r\n  <Menu\r\n    elevation={0}\r\n    anchorOrigin={{\r\n      vertical: 'bottom',\r\n      horizontal: 'right',\r\n    }}\r\n    transformOrigin={{\r\n      vertical: 'top',\r\n      horizontal: 'right',\r\n    }}\r\n    {...props}\r\n  />\r\n))(({ theme }) => ({\r\n  '& .MuiPaper-root': {\r\n    borderRadius: 6,\r\n    marginTop: theme.spacing(1),\r\n    color:\r\n      theme.palette.mode === 'light' ? 'rgb(55, 65, 81)' : theme.palette.grey[300],\r\n\r\n    '& .MuiMenuItem-root': {\r\n      '& .MuiSvgIcon-root': {\r\n        fontSize: 10,\r\n        color: theme.palette.text.secondary,\r\n        marginRight: theme.spacing(1.5),\r\n        innerHeight: 40,\r\n        outerHeight: 40,\r\n      },\r\n      '&:active': {\r\n        backgroundColor: alpha(\r\n          theme.palette.primary.main,\r\n          theme.palette.action.selectedOpacity,\r\n        ),\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function CustomizedMenus() {\r\n  const dispatch = useDispatch();\r\n  const control = useSelector((state: RootState) => {\r\n    return state.ControlReducer as ControlStatus;\r\n  });\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const [state, setState] = React.useState({\r\n    language: control.speechLanguage,\r\n  });\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n\r\n  };\r\n  const handleClickItem = (event) => {\r\n    setState({ ...state, language: event.target.id })\r\n    dispatch({ type: 'SET_SPEECH_LANGUAGE', payload: event.target.id })\r\n    setAnchorEl(null);\r\n  }\r\n\r\n  const { myTheme } = Theme()\r\n\r\n\r\n  return (\r\n    <div>\r\n      <ThemeProvider theme={myTheme}>\r\n\r\n        <Button\r\n          id=\"demo-customized-button\"\r\n          aria-controls=\"demo-customized-menu\"\r\n          aria-haspopup=\"true\"\r\n          aria-expanded={open ? 'true' : undefined}\r\n          variant=\"contained\"\r\n          disableElevation\r\n          onClick={handleClick}\r\n          sx={{ width: '2vw', height: 30, padding: 0 }}\r\n        >\r\n\r\n          <h2 className=\"tryout\" style={{ fontSize: '12px' }}>{state.language}</h2>\r\n        </Button>\r\n        <StyledMenu\r\n          id=\"demo-customized-menu\"\r\n          MenuListProps={{\r\n            'aria-labelledby': 'demo-customized-button',\r\n          }}\r\n          anchorEl={anchorEl}\r\n          open={open}\r\n          onClose={handleClose}\r\n        >\r\n          {languages.map((language: string, index) =>\r\n            <MenuItem id={language} onClick={handleClickItem} disableRipple>\r\n              {language}\r\n            </MenuItem>\r\n          )}\r\n        </StyledMenu>\r\n      </ThemeProvider>\r\n\r\n    </div>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport { styled, alpha } from '@mui/material/styles';\r\nimport Button from '@mui/material/Button';\r\nimport { RootState, ControlStatus } from '../../../redux/types';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport Theme from '../../theme'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Menu, { MenuProps } from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\n/* todo:\r\n  1   Make language bar a fixed height so that it can only display ~8 languages \r\n      and not take up the whole screen\r\n  2   Change language lists to a 2d array that so we can display the countries name\r\n      and save the shortened title in RootState\r\n*/\r\n\r\n  const textLanguages = [\r\n    \"ar\",\r\n    \"da\",\r\n    \"de\",\r\n    \"en\",\r\n    \"es\",\r\n    \"fi\",\r\n    \"fr\",\r\n    \"hi\",\r\n    \"it\",\r\n    \"ja\",\r\n    \"ko\",\r\n    \"nb\",\r\n    \"nl\",\r\n    \"pl\",\r\n    \"pt\",\r\n    \"ru\",\r\n    \"sv\",\r\n    \"zh\",]\r\n\r\nconst StyledMenu = styled((props: MenuProps) => (\r\n  <Menu\r\n    elevation={0}\r\n    anchorOrigin={{\r\n      vertical: 'bottom',\r\n      horizontal: 'right',\r\n    }}\r\n    transformOrigin={{\r\n      vertical: 'top',\r\n      horizontal: 'right',\r\n    }}\r\n    {...props}\r\n  />\r\n))(({ theme }) => ({\r\n  '& .MuiPaper-root': {\r\n    borderRadius: 6,\r\n    marginTop: theme.spacing(1),\r\n    color:\r\n      theme.palette.mode === 'light' ? 'rgb(55, 65, 81)' : theme.palette.grey[300],\r\n\r\n    '& .MuiMenuItem-root': {\r\n      '& .MuiSvgIcon-root': {\r\n        fontSize: 10,\r\n        color: theme.palette.text.secondary,\r\n        marginRight: theme.spacing(1.5),\r\n        innerHeight: 40,\r\n        outerHeight: 40,\r\n      },\r\n      '&:active': {\r\n        backgroundColor: alpha(\r\n          theme.palette.primary.main,\r\n          theme.palette.action.selectedOpacity,\r\n        ),\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function CustomizedMenus() {\r\n  const {myTheme} = Theme()\r\n\r\n  const dispatch = useDispatch();\r\n  const control = useSelector((state: RootState) => {\r\n    return state.ControlReducer as ControlStatus;\r\n  });\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const [state, setState] = React.useState({\r\n    language: control.textLanguage,\r\n  });\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n\r\n  };\r\n  const handleClickItem = (event) => {\r\n    setState({ ...state, language: event.target.id })\r\n    dispatch({type: 'SET_TEXT_LANGUAGE', payload: event.target.id})\r\n    setAnchorEl(null);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n        <ThemeProvider theme={myTheme}>\r\n\r\n      <Button\r\n        id=\"demo-customized-button\"\r\n        aria-controls=\"demo-customized-menu\"\r\n        aria-haspopup=\"true\"\r\n        aria-expanded={open ? 'true' : undefined}\r\n        variant=\"contained\"\r\n        disableElevation\r\n        onClick={handleClick}  \r\n        sx={{ width: '2vw', height:30, padding: 0}}\r\n      >\r\n          \r\n        <h2 className=\"tryout\" style={{fontSize: '12px'}}>{state.language}</h2> \r\n        </Button>\r\n      <StyledMenu\r\n        id=\"demo-customized-menu\"\r\n        MenuListProps={{\r\n          'aria-labelledby': 'demo-customized-button',\r\n        }}\r\n        anchorEl={anchorEl}\r\n        open={open}\r\n        onClose={handleClose}\r\n      >\r\n          {textLanguages.map((language : string, index) =>\r\n            <MenuItem id = {language} onClick={handleClickItem} disableRipple>\r\n                {language}\r\n            </MenuItem>\r\n          )}          \r\n      </StyledMenu>\r\n      </ThemeProvider>\r\n\r\n    </div>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport List from '@mui/material/List';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport ExpandLess from '@mui/icons-material/ExpandLess';\r\nimport Listening from './listening'\r\nimport ExpandMore from '@mui/icons-material/ExpandMore';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport SpeechLanguage from './speechLanguage'\r\nimport TextLanguage from './textLanguage'\r\n\r\n\r\nexport default function STTMenu(props) {\r\n  const [state, setState] = React.useState({\r\n    open: true,\r\n  });\r\n  const toggleDrawer =\r\n    (head: string) =>\r\n      (event: React.KeyboardEvent | React.MouseEvent) => {\r\n        setState({ ...state, open: !state.open })\r\n      }\r\n  return (\r\n    <div>\r\n      <ListItem>\r\n        <ListItemIcon>\r\n          <props.icon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Speech To Text\" />\r\n        <IconButton onClick={toggleDrawer(\"stt\")} >\r\n          {state.open ? <ExpandLess /> : <ExpandMore />}\r\n        </IconButton>\r\n      </ListItem>\r\n      <Collapse in={state.open} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n          <ListItem sx={{ pl: 4, mb: 1 }}>\r\n            <ListItemText primary=\"Listening\" />\r\n            <Listening isRecording={props.isRecording} />\r\n          </ListItem>\r\n          <ListItem sx={{ pl: 4, mb: 1 }}>\r\n            <ListItemText primary=\"Speech Language\" />\r\n            <SpeechLanguage />\r\n          </ListItem>\r\n          <ListItem sx={{ pl: 4, mb: 2 }}>\r\n            <ListItemText primary=\"Text Language\" />\r\n            <TextLanguage />\r\n          </ListItem>\r\n        </List>\r\n      </Collapse>\r\n    </div>\r\n  );\r\n}","import * as React from 'react';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport TextField from '@mui/material/TextField';\r\nimport Paper from '@mui/material/Paper';\r\nimport InputBase from '@mui/material/InputBase';\r\nimport Menu from '@mui/material/Menu';\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport './phrase.css'\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport { PhraseList } from '../../../redux/types';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n/* todo:\r\n  1   Make language bar a fixed height so that it can only display ~8 languages \r\n      and not take up the whole screen\r\n  2   Change language lists to a 2d array that so we can display the countries name\r\n      and save the shortened title in RootState\r\n*/\r\n\r\nexport default function PhrasePopUp(props) {\r\n    const dispatch = useDispatch();\r\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n\r\n    const open = Boolean(anchorEl);\r\n    const [state, setState] = React.useState({\r\n        phraseList: props.currentPhraseList as PhraseList,\r\n        currentPhrase: \"\",\r\n        shouldCollapse: true\r\n    });\r\n\r\n    let phrases: string[] = Array();\r\n    const handleClick = (event: React.MouseEvent<HTMLElement>) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClickX = (head: any) => (event: React.MouseEvent<HTMLElement>) => {\r\n        let listPhrases = state.phraseList.phrases.splice(head, 1);\r\n        dispatch({ type: \"EDIT_PHRASE_LIST\", payload: listPhrases })\r\n    };\r\n    const handleChange = (event) => {\r\n        setState({ ...state, currentPhrase: event.target.value})  \r\n    }\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    const handleClickPhrase = (event: React.MouseEvent<HTMLElement>) => {\r\n        console.log(event)\r\n    }\r\n\r\n    const handleEnter = (event) =>\r\n    {\r\n      if (event.key === 'Enter') {\r\n          console.log(event)\r\n          setState({ ...state, currentPhrase: \"\"})  \r\n        clickAddList(event)\r\n       \r\n        event.preventDefault();\r\n      }\r\n    }\r\n    const clickAddList = (event) => {\r\n        if (event.target.value) {\r\n            state.phraseList.phrases.push(event.target.value)\r\n            dispatch({ type: \"EDIT_PHRASE_LIST\", payload: state.phraseList })\r\n            dispatch({ type: \"CHANGE_LIST\", payload: state.phraseList.phrases })\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    if (state.phraseList.availableSpace == -1) {\r\n        return (null)\r\n    }\r\n    const handleChangePhraseName = (event) => {\r\n        console.log(event)\r\n        let copy = Object.assign({}, state.phraseList);\r\n        copy.name = event.target.value\r\n        setState({ ...state, phraseList:copy})  \r\n        dispatch({ type: 'CHANGE_PHRASE_LIST', payload: state.phraseList })\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            \r\n            <ListItem style=\r\n                {props.currentList == props.currentPhraseList.name ? { backgroundColor: '#03bafc' } : { backgroundColor: 'white' }}>\r\n                <ListItemText primary={state.phraseList.name} />\r\n                <IconButton onClick={handleClick}>\r\n                    <EditIcon />\r\n                </IconButton>\r\n            </ListItem>\r\n\r\n            <Menu\r\n                anchorEl={anchorEl}\r\n                open={open}\r\n                onClose={handleClose}\r\n                PaperProps={{\r\n                    elevation: 0,\r\n                    sx: {\r\n                        position: 'unset',\r\n                        ml: '25vw',\r\n                        width: '50vw',\r\n                        mt: '25vh',\r\n                        height: '50vh',\r\n                        filter: 'drop-shadow(0px 2px 8px rgba(0,0,0,0.32))',\r\n                    },\r\n                }}\r\n                transformOrigin={{ horizontal: 'center', vertical: 'top' }}\r\n                anchorOrigin={{ horizontal: 'center', vertical: 'bottom' }}\r\n            >\r\n                <TextField\r\n                    variant='standard'\r\n                    onChange={handleChangePhraseName}\r\n                    value = {state.phraseList.name}\r\n                    sx={{ p: '2px 4px', display: 'flex', alignItems: 'center', ml: '3vw', mr: '3vw', mt: '2vh', position: 'sticky', textAlign: 'center'}}\r\n                >\r\n                \r\n                </TextField>\r\n                <Paper\r\n                    variant='outlined'\r\n                    component=\"form\"  \r\n                    sx={{ p: '2px 4px', display: 'flex', alignItems: 'center', ml: '3vw', mr: '3vw', mt: '2vh', position: 'sticky'}}\r\n                > \r\n                    <InputBase\r\n                        sx={{ ml: 1, flex: 1 }}\r\n                        placeholder=\"Input Phrase\"\r\n                        value = {state.currentPhrase}\r\n                        onKeyDown = {handleEnter}\r\n                        onChange = {handleChange}\r\n                    />\r\n                </Paper>\r\n                <List\r\n                    sx={{height: '30vh', mt: '1vh', bgcolor: 'background.paper',  overflow: 'overlay', overflowWrap: 'anywhere' }}\r\n                    component=\"nav\"\r\n                    aria-labelledby=\"nested-list-subheader\"\r\n                    \r\n                >\r\n                    {state.phraseList.phrases.map((phrase: string, index) =>\r\n                        <div>\r\n                            <ListItem >\r\n                                <ListItemText primary={phrase} />\r\n                                <IconButton onClick={handleClickX(index)} >\r\n                                    <ClearIcon />\r\n                                </IconButton>\r\n\r\n                            </ListItem>\r\n                        </div>\r\n                    )}\r\n                </List>\r\n            </Menu>\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n","import * as React from 'react';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport Swal from 'sweetalert2';\r\nimport Divider from '@mui/material/Divider';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport PhrasePopUp from './phraseList';\r\nimport './phrase.css'\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport ListItemText from '@mui/material/ListItemText'; \r\nimport { RootState, PhraseListStatus, PhraseList } from '../../../redux/types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n/* todo:\r\n  1   Make language bar a fixed height so that it can only display ~8 languages \r\n      and not take up the whole screen\r\n  2   Change language lists to a 2d array that so we can display the countries name\r\n      and save the shortened title in RootState\r\n*/\r\n\r\nexport default function CustomizedMenus() {\r\n  const dispatch = useDispatch();\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const phraseListStatus = useSelector((state: RootState) => {\r\n    return state.PhraseListReducer as PhraseListStatus;\r\n  });\r\n  const [state, setState] = React.useState({\r\n    currentList: phraseListStatus.currentPhraseList.name,\r\n    shouldCollapse: false\r\n\r\n  });\r\n\r\n  let phrases: string[] = Array();\r\n  for (let entry of Array.from(phraseListStatus.phraseListMap.entries())) {\r\n    phrases.push(entry[0])\r\n  }\r\n\r\n  let initialPhraseList: PhraseList = {\r\n    phrases: [],\r\n    name: \"empty\",\r\n    availableSpace: 2000\r\n  }\r\n  \r\n  const handleClickItem = (event) => {\r\n    dispatch({ type: 'CHANGE_PHRASE_LIST', payload: phraseListStatus.phraseListMap.get(event.target.innerText) })\r\n    dispatch({ type: 'CHANGE_LIST', payload: phraseListStatus.phraseListMap.get(event.target.innerText)?.phrases })\r\n    setState({ ...state, currentList: event.target.innerText})  \r\n    setAnchorEl(null);\r\n  }\r\n\r\n  const toggleDrawer =\r\n    (head: string) =>\r\n      (event: React.KeyboardEvent | React.MouseEvent) => {\r\n        setState({ ...state, shouldCollapse: !state.shouldCollapse })\r\n      }\r\n  const clickAddList = () => {\r\n    Swal.fire({\r\n      customClass: {\r\n        container: 'swal2-container',\r\n      },\r\n      text: \"Make a title for your list of phrases\",\r\n      input: 'text',\r\n      returnFocus: true,\r\n      showCancelButton: true\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        initialPhraseList.name = result.value\r\n        dispatch({ type: 'ADD_PHRASE_LIST', payload: initialPhraseList })\r\n        dispatch({ type: 'CHANGE_LIST', payload: initialPhraseList.phrases })\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n\r\n      <List\r\n        sx={{ width: '20vw', bgcolor: 'background.paper' }}\r\n        component=\"div\"\r\n        aria-labelledby=\"nested-list-subheader\"\r\n      >\r\n        <ListItem sx={{ pl: 4, mb: 1 }}>\r\n          <ListItemText primary={\"My Phrase Lists\"} />\r\n          <IconButton onClick={clickAddList} >\r\n            <AddIcon />\r\n          </IconButton>\r\n        </ListItem>\r\n        <List component=\"div\" disablePadding>\r\n          {phrases.map((phrase: string, index) =>\r\n            <div>\r\n              <Divider />\r\n              <PhrasePopUp\r\n                currentPhraseList={phraseListStatus.phraseListMap.get(phrase)}\r\n              />\r\n            </div>\r\n          )}\r\n        </List>\r\n      </List>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n","import * as React from 'react';\r\nimport List from '@mui/material/List';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport ExpandLess from '@mui/icons-material/ExpandLess';\r\nimport ExpandMore from '@mui/icons-material/ExpandMore';\r\nimport PhraseListAdd from './phraseListAdd'\r\nimport PhraseList from './phraseList'\r\nimport ListItem from '@mui/material/ListItem';\r\n\r\nexport default function PhraseMenu(props) {\r\n  const [state, setState] = React.useState({\r\n    open: false,\r\n  });\r\n\r\n  const toggleDrawer =\r\n    (head: string) =>\r\n      (event: React.KeyboardEvent | React.MouseEvent) => {\r\n        setState({ ...state, open: !state.open })\r\n      }\r\n  return (\r\n    <div>\r\n      <ListItem>\r\n        <ListItemIcon>\r\n          <props.icon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Phrase Recognition\" />\r\n        <IconButton onClick={toggleDrawer(\"phraseRecognition\")} >\r\n          {state.open ? <ExpandLess /> : <ExpandMore />}\r\n        </IconButton>\r\n      </ListItem>\r\n      <Collapse in={state.open} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n          <PhraseListAdd />\r\n\r\n        </List>\r\n      </Collapse>\r\n    </div>\r\n  );\r\n}","import * as React from 'react';\r\nimport List from '@mui/material/List';\r\nimport ArchitectureIcon from '@mui/icons-material/Architecture';\r\nimport EqualizerIcon from '@mui/icons-material/Equalizer';\r\nimport DetailsIcon from '@mui/icons-material/Details';\r\nimport Divider from '@mui/material/Divider';\r\nimport MessageIcon from '@mui/icons-material/Message';\r\nimport DisplayMenu from './display/displayMenu';\r\nimport STTMenu from './STT/STTMenu';\r\nimport PhraseMenu from './phrase/phraseMenu';\r\nimport VisualizationMenu from './visualization/visualizationMenu';\r\n\r\nexport default function STT(props) {\r\n  const [state, setState] = React.useState({\r\n    display: false,\r\n    stt: true,\r\n    visualization: false,\r\n    phraseRecognition: false,\r\n  });\r\n\r\n  const toggleDrawer =\r\n    (head: string) =>\r\n      (event: React.KeyboardEvent | React.MouseEvent) => {\r\n        setState({ ...state, [head]: !state[head] })\r\n      }\r\n  return (\r\n    <div>\r\n    <h2 className=\"d-table-cell tar2\" style={{textAlign: \"left\", paddingLeft: \"20px\"}}>Menu</h2>\r\n      <List\r\n        sx={{ width: '20vw', bgcolor: 'background.paper' }}\r\n        component=\"nav\"\r\n        aria-labelledby=\"nested-list-subheader\"\r\n      >\r\n        <STTMenu\r\n          icon={MessageIcon}\r\n          isRecording={props.isRecording}\r\n        />\r\n        <Divider />\r\n        <DisplayMenu\r\n          icon={ArchitectureIcon}\r\n        />\r\n        <Divider />\r\n        <PhraseMenu\r\n          icon={DetailsIcon}\r\n        />\r\n        <Divider />\r\n        {/* <VisualizationMenu\r\n          icon={EqualizerIcon}\r\n        />\r\n        <Divider /> */}\r\n\r\n      </List>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n","import FullscreenIcon from '@mui/icons-material/Fullscreen';\r\nimport FullscreenExitIcon from '@mui/icons-material/FullscreenExit';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport * as React from 'react';\r\n\r\nconst currTheme = createTheme({\r\n    palette: {\r\n        primary: {\r\n            main: '#ffffff'\r\n        }\r\n    },\r\n});\r\n\r\nexport default function Fullscreen(props) {\r\n    const [state, setState] = React.useState({\r\n        isFullScreen: false\r\n    });\r\n\r\n    const toggleDrawer = () => {\r\n        var elem = document.documentElement;\r\n        if (!state.isFullScreen) {\r\n            if (elem.requestFullscreen) {\r\n                elem.requestFullscreen();\r\n            }\r\n        } else {\r\n            if (document.exitFullscreen) {\r\n                document.exitFullscreen();\r\n            }\r\n        }\r\n        setState({ ...state, isFullScreen: !state.isFullScreen })\r\n    }\r\n    \r\n    return (\r\n        <div style ={{position: 'relative'}}>\r\n            <ThemeProvider theme={currTheme}>\r\n                <IconButton onClick={toggleDrawer} color=\"primary\" >\r\n                    {state.isFullScreen ? <FullscreenExitIcon fontSize=\"large\" /> : <FullscreenIcon fontSize=\"large\" />}\r\n                </IconButton>\r\n            </ThemeProvider>\r\n        </div>\r\n    );\r\n}\r\n","import React,{ useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\r\nexport default function MenuHider(props){\r\n    const dispatch = useDispatch();\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <IconButton className = \"c2\" color = \"inherit\" onClick = {()=>dispatch({type: 'HIDE_MENU'})}>\r\n                {props.menuVisible ? <LockIcon/> : <LockOpenIcon/>}\r\n            </IconButton>\r\n        </div>\r\n    )\r\n}\r\n","import * as React from 'react';\r\nimport List from '@mui/material/List';\r\nimport swal from 'sweetalert';\r\nimport { GetAzureRecognition } from './azureRecognition';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport { ApiStatus, AzureStatus, ControlStatus } from '../../../redux/types';\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '../../../store';\r\n\r\n\r\nenum STATUS {\r\n    \"AVAILABLE\",\r\n    \"NULL\",\r\n    \"UNAVAILABLE\",\r\n    \"INPROGRESS\",\r\n    \"ERROR\"\r\n}\r\n\r\nexport default function AzureDropdown(props) {\r\n    const dispatch = useDispatch()\r\n    const { pog, test } = GetAzureRecognition();\r\n\r\n    const [state, setState] = React.useState({\r\n        openAzure: false,\r\n        azureStatus: useSelector((state: RootState) => {\r\n            return state.AzureReducer as AzureStatus;\r\n        }),\r\n        controlStatus: useSelector((state: RootState) => {\r\n            return state.ControlReducer as ControlStatus;\r\n        }),\r\n        apiStatus: props.apiStatus as ApiStatus\r\n    });\r\n    const handleChangeKey = (event) =>\r\n     {\r\n            let copyStatus = Object.assign({}, state.azureStatus);\r\n            copyStatus[event.target.id] = event.target.value;\r\n            setState({\r\n                ...state, \r\n                azureStatus: copyStatus});\r\n            dispatch({type: 'CHANGE_AZURE_LOGIN', payload: copyStatus})\r\n            \r\n    } \r\n    const handleEnter = (event) =>\r\n    {\r\n      if (event.key === 'Enter') {\r\n        toggleEnter()\r\n        event.preventDefault();\r\n      }\r\n    }\r\n    const toggleEnter = async () => {\r\n        dispatch({type: 'FLIP_RECORDING', payload: state.controlStatus})\r\n          const recognizedMessage = await test(state.controlStatus, state.azureStatus).then(response => {  \r\n            let copyStatus = Object.assign({}, state.apiStatus);\r\n            if (response === true) {\r\n              copyStatus.azureStatus = 0;\r\n              localStorage.setItem(\"azureStatus\", JSON.stringify(state.azureStatus))\r\n              swal({\r\n                title: \"Success!\",\r\n                text: \"Switching to Microsoft Azure\",\r\n                icon: \"success\", \r\n                timer: 1500,\r\n                buttons: {\r\n                  no: {\r\n                    text: \"Cancel\",\r\n                    value: \"no\",\r\n                  },    \r\n                },\r\n              })\r\n              .then((value) => {\r\n                switch (value) {\r\n                  case \"no\":\r\n                    setState({ ...state, openAzure: false })\r\n                    break;\r\n                  default:\r\n                    copyStatus.currentAPI = 1;\r\n                    dispatch({type: 'CHANGE_API_STATUS', payload: copyStatus})\r\n                }\r\n              });\r\n              setState({\r\n                ...state, \r\n                apiStatus: copyStatus});\r\n            } else {\r\n              copyStatus.azureStatus = 2;   \r\n              swal({\r\n                title: \"Warning!\",\r\n                text: \"Wrong key or region!\",\r\n                icon: \"warning\",\r\n              })\r\n              setState({\r\n                ...state, \r\n                apiStatus: copyStatus});     \r\n            }\r\n\r\n            dispatch({type: 'CHANGE_API_STATUS', payload: copyStatus})\r\n    \r\n          }\r\n        );  \r\n        dispatch({type: 'FLIP_RECORDING', payload: state.controlStatus})\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n                <List component=\"div\" disablePadding>\r\n                    <ListItem sx={{ pl: 4 }}>\r\n                        <Box\r\n                            component=\"form\"\r\n                            sx={{\r\n                                '& > :not(style)': { pr: '1vw', width: '15vw' },\r\n                            }}\r\n                            noValidate\r\n                            autoComplete=\"off\"\r\n                        ><TextField onKeyDown = {handleEnter} onChange={handleChangeKey} value={state.azureStatus.azureKey} id=\"azureKey\" label=\"Key\" variant=\"outlined\" /></Box>\r\n                    </ListItem>\r\n                    <ListItem sx={{ pl: 4 }}>\r\n                        <Box\r\n                            component=\"form\"\r\n                            sx={{\r\n                                '& > :not(style)': { mr: '1vw', width: '15vw' },\r\n                            }}\r\n                            noValidate\r\n                            autoComplete=\"off\"\r\n                        ><TextField onKeyDown = {handleEnter} onChange={handleChangeKey} value={state.azureStatus.azureRegion} id=\"azureRegion\" label=\"Region\" variant=\"outlined\" /></Box>\r\n                    </ListItem>\r\n                </List>\r\n        </div>\r\n    );\r\n}","import * as React from 'react';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport List from '@mui/material/List';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport Button from \"@mui/material/Button\";\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ErrorIcon from '@mui/icons-material/Error';\r\nimport swal from 'sweetalert';\r\nimport { ApiStatus, RootState} from '../../redux/types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ExpandLess from '@mui/icons-material/ExpandLess';\r\nimport ExpandMore from '@mui/icons-material/ExpandMore';\r\nimport CancelIcon from '@mui/icons-material/Cancel';\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\nimport DoNotDisturbOnIcon from '@mui/icons-material/DoNotDisturbOn';\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\nimport AzureDropdown from './azure/AzureDropdown';\r\n\r\nenum STATUS {\r\n    \"AVAILABLE\",\r\n    \"NULL\",\r\n    \"UNAVAILABLE\",\r\n    \"INPROGRESS\",\r\n    \"ERROR\"\r\n}\r\n\r\nconst currTheme = createTheme({\r\n    palette: {\r\n        primary: {\r\n            main: '#ffffff',\r\n        },\r\n        success: {\r\n            main: '#4caf50'\r\n        },\r\n        warning: {\r\n            main: '#f44336'\r\n        }, \r\n        error: {\r\n            main: '#C8C224'\r\n        }\r\n    }\r\n});\r\nconst IconStatus = (currentAPI: any) => {\r\n    const myTheme = currTheme;\r\n    switch (currentAPI.currentAPI) {\r\n        case STATUS.NULL:\r\n            return(\r\n                <ThemeProvider theme={myTheme}>\r\n                    <DoNotDisturbOnIcon/>\r\n                </ThemeProvider>\r\n            )\r\n        \r\n        case STATUS.AVAILABLE:\r\n            return(\r\n                <ThemeProvider theme={myTheme}>\r\n                    <CheckCircleIcon color=\"success\" />\r\n                </ThemeProvider>\r\n            )       \r\n        case STATUS.UNAVAILABLE:\r\n            return (\r\n                <ThemeProvider theme={myTheme}>\r\n                    <CancelIcon color=\"warning\"/>\r\n                </ThemeProvider>\r\n            )\r\n        }\r\n        return (\r\n            <ThemeProvider theme={myTheme}>\r\n                <ErrorIcon color=\"error\"/>\r\n            </ThemeProvider>\r\n        )\r\n}\r\nexport default function STT(props) {\r\n    const dispatch = useDispatch()\r\n    const myTheme = currTheme\r\n\r\n    const [state, setState] = React.useState({\r\n        azureStatus: false,\r\n        streamTextStatus: false,\r\n        webspeechStatus: false,\r\n        apiStatus: useSelector((state: RootState) => {\r\n            return state.APIStatusReducer as ApiStatus;\r\n        })\r\n    });\r\n    const toggleDrawer =\r\n        (apiStat: string, api:number, isArrow:boolean) =>\r\n            (event: React.KeyboardEvent | React.MouseEvent) => {\r\n                if (state.apiStatus.currentAPI !== api) {\r\n                    if (!isArrow && state.apiStatus[apiStat] === 0) {\r\n                        let apiName = \"Webspeech\";\r\n                        if (api == 1) {\r\n                            apiName = \"Microsoft Azure\"\r\n                        } else if (api == 2) {\r\n                            apiName = \"Streamtext\"\r\n                        }\r\n                        swal({\r\n                            title: \"Success!\",\r\n                            text: \"Switching to \" + apiName,\r\n                            icon: \"success\", \r\n                            timer: 2500,\r\n                        \r\n                          })\r\n                        let copyStatus = Object.assign({}, state.apiStatus);\r\n                        copyStatus.currentAPI = api\r\n                        setState({ ...state, apiStatus: copyStatus })\r\n                        dispatch({type: 'CHANGE_API_STATUS', payload: copyStatus})\r\n                    } else {\r\n                        setState({ ...state, [apiStat]: !state[apiStat] })\r\n                    }\r\n                } else if (isArrow) {\r\n                    setState({ ...state, [apiStat]: !state[apiStat] })\r\n                }\r\n            }\r\n    return (\r\n        <div>\r\n            <ListItemButton onClick={toggleDrawer(\"webspeechStatus\", 0, false)}>\r\n                <ThemeProvider theme={myTheme}>\r\n                    <ListItemIcon>\r\n                        <IconStatus{...{currentAPI: state.apiStatus.webspeechStatus}}/>\r\n                    </ListItemIcon>\r\n                </ThemeProvider>\r\n                <ListItemText primary=\"Webspeech\" />\r\n            </ListItemButton>\r\n\r\n            <ListItemButton onClick={toggleDrawer(\"azureStatus\", 1, false)} >\r\n            <ListItemIcon>\r\n                    <IconStatus{...{currentAPI: state.apiStatus.azureStatus}}/>\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Microsoft Azure\" />\r\n                <IconButton onClick={toggleDrawer(\"azureStatus\", 1, true)}>\r\n            {state.streamTextStatus ? <ExpandLess /> : <ExpandMore />}\r\n          </IconButton>\r\n            </ListItemButton>\r\n\r\n            <Collapse in={state.azureStatus} timeout=\"auto\" unmountOnExit>\r\n                <AzureDropdown apiStatus={state.apiStatus}/>\r\n            </Collapse>\r\n\r\n            {/* <ListItemButton onClick={toggleDrawer(\"streamTextStatus\", 2, false)} >\r\n                <ListItemIcon>\r\n                    <IconStatus{...{currentAPI: state.apiStatus.streamtextStatus}}/>\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"StreamText\" />\r\n                <IconButton>\r\n            {state.streamTextStatus ? <ExpandLess /> : <ExpandMore />}\r\n          </IconButton>\r\n            </ListItemButton> */}\r\n            <Collapse in={state.streamTextStatus} timeout=\"auto\" unmountOnExit>\r\n                <List component=\"div\" disablePadding>\r\n                    <ListItem sx={{ pl: 4 }}>\r\n                        <Box\r\n                            component=\"form\"\r\n                            sx={{\r\n                                '& > :not(style)': { mr: '1vw', width: '15vw' },\r\n                            }}\r\n                            noValidate\r\n                            autoComplete=\"off\"\r\n                        ><TextField id=\"outlined-basic\" label=\"Key\" variant=\"outlined\" /></Box>\r\n                    </ListItem>\r\n                    <Button sx={{ pl: 4 }}>\r\n                        <ListItemText primary=\"Enter\" />\r\n                    </Button>\r\n                </List>\r\n            </Collapse>\r\n        </div>\r\n    );\r\n}","import * as React from 'react';\r\nimport { useCallback, useMemo } from 'react';\r\nimport { ControlStatus, AzureStatus, ApiStatus, PhraseList } from '../../../redux/types';\r\nimport * as speechSDK from 'microsoft-cognitiveservices-speech-sdk'\r\nexport const GetAzureRecognition = () => {\r\n  const pog = \"hi\"\r\n  const test = useCallback(\r\n    async (control: ControlStatus, azureStatus: AzureStatus) => new Promise((resolve, reject) => {\r\n      try {\r\n        let azureSpeech = speechSDK.SpeechTranslationConfig.fromSubscription(azureStatus.azureKey, azureStatus.azureRegion)\r\n        azureSpeech.speechRecognitionLanguage = control.speechLanguage;\r\n        azureSpeech.addTargetLanguage(control.textLanguage)\r\n        let azureAudioConfig = speechSDK.AudioConfig.fromDefaultMicrophoneInput();\r\n        let reco = new speechSDK.TranslationRecognizer(azureSpeech, azureAudioConfig);\r\n        reco.canceled = () => {\r\n          resolve(false);\r\n        }\r\n        reco.sessionStarted = () => {\r\n          resolve(true);\r\n        }\r\n        reco.recognizeOnceAsync();\r\n      } catch (error) {\r\n        resolve(false)\r\n      }\r\n    }),\r\n    [pog]\r\n  )\r\n  return useMemo(() => ({ pog, test }), [pog]);\r\n};\r\n\r\nexport const AzureRecognition = () => {\r\n  var transcript = \"\"\r\n  const [azureTranscripts, setTranscripts] = React.useState<string[]>([]);\r\n  const azureListen = useCallback(\r\n    async (transcriptsFull: string, control: React.MutableRefObject<ControlStatus>, azureStatus: React.MutableRefObject<AzureStatus>, currentAPI: React.MutableRefObject<ApiStatus>) =>\r\n      new Promise((resolve, reject) => {\r\n        try {\r\n          var lastStartedAt = new Date().getTime();\r\n          let textLanguage = control.current.textLanguage\r\n          let azureSpeech = speechSDK.SpeechTranslationConfig.fromSubscription(azureStatus.current.azureKey, azureStatus.current.azureRegion)\r\n          azureSpeech.speechRecognitionLanguage = control.current.speechLanguage;\r\n          azureSpeech.addTargetLanguage(control.current.textLanguage)\r\n          azureSpeech.setProfanity(2);\r\n          \r\n          let azureAudioConfig = speechSDK.AudioConfig.fromDefaultMicrophoneInput();\r\n          let speechRecognition = new speechSDK.TranslationRecognizer(azureSpeech, azureAudioConfig);\r\n          let phraseList = speechSDK.PhraseListGrammar.fromRecognizer(speechRecognition)\r\n          console.log(azureStatus.current.phrases[0])\r\n          for (let i = 0; i < azureStatus.current.phrases.length; i++) {\r\n            phraseList.addPhrase(azureStatus.current.phrases[i])\r\n            console.log(azureStatus.current.phrases[i])\r\n\r\n          }\r\n          \r\n          let lastRecognized = \"\"\r\n          speechRecognition.startContinuousRecognitionAsync();\r\n          speechRecognition.recognizing = (s, e) => {\r\n            if (control.current.listening == false || currentAPI.current.currentAPI != 1) {\r\n              speechRecognition.stopContinuousRecognitionAsync()\r\n              resolve(transcriptsFull);\r\n            } else {\r\n              \r\n              transcript = lastRecognized + e.result.translations.get(textLanguage);\r\n\r\n              setTranscripts([...azureTranscripts, transcript]);\r\n              transcriptsFull = transcript\r\n            }\r\n          };\r\n          speechRecognition.recognized = (s, e) => {\r\n            if (control.current.listening == false || currentAPI.current.currentAPI != 1) {\r\n              speechRecognition.stopContinuousRecognitionAsync()\r\n              resolve(transcriptsFull);\r\n            } else {\r\n              lastRecognized += e.result.translations.get(textLanguage) + \" \";\r\n              transcript = lastRecognized\r\n              setTranscripts([...azureTranscripts, transcript]);\r\n              transcriptsFull = transcript\r\n            }\r\n          };\r\n          speechRecognition.sessionStopped = (s, e) => {\r\n            var timeSinceStart = new Date().getTime() - lastStartedAt;\r\n            if (control.current.listening == false || currentAPI.current.currentAPI != 1) {\r\n              resolve(transcriptsFull);\r\n            } else if (timeSinceStart > 1000) {\r\n              speechRecognition.startContinuousRecognitionAsync()\r\n            }\r\n          }\r\n        } catch (error) {\r\n          resolve(false)\r\n        }\r\n      }),\r\n    [setTranscripts]\r\n  );\r\n  return useMemo(() => ({ azureTranscripts, azureListen }), [azureTranscripts]);\r\n};","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Menu from '@mui/material/Menu';\r\nimport MicIcon from '@mui/icons-material/Mic';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport StreamTextLogin from '../api/pickApi'\r\n\r\n\r\nexport default function AccountMenu() {\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Box sx={{ display: 'flex', alignItems: 'center', textAlign: 'center' }}>\r\n        <Tooltip title=\"API choice\">\r\n          <IconButton onClick={handleClick} size=\"small\" sx={{ ml: 2 }}>\r\n            <MicIcon sx={{ width: 32, height: 32, color: 'white'}}>ScribeAR</MicIcon>\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Box>\r\n      <Menu\r\n        anchorEl={anchorEl}\r\n        open={open}\r\n        onClose={handleClose}\r\n        PaperProps={{\r\n          elevation: 0,\r\n          sx: {\r\n            width: '20vw',\r\n            overflow: 'invisible',\r\n            filter: 'drop-shadow(0px 2px 8px rgba(0,0,0,0.32))',\r\n            mt: 1.5,\r\n            '& .MuiAvatar-root': {\r\n              boxSizing: \"border-box\",\r\n              height: 32,\r\n              ml: -0.5,\r\n              mr: 1,\r\n            },\r\n            '&:before': {\r\n              content: '\"\"',\r\n              display: 'block',\r\n              position: 'absolute',\r\n              top: 0,\r\n              right:'48%',\r\n              width: 10,\r\n              height: 10,\r\n              bgcolor: 'background.paper',\r\n              transform: 'translateY(-50%) rotate(45deg)',\r\n              zIndex: 0,\r\n            },\r\n          },\r\n        }}\r\n        transformOrigin={{ horizontal: 'center', vertical: 'top' }}\r\n        anchorOrigin={{ horizontal: 'center', vertical: 'bottom' }}\r\n      >\r\n        <StreamTextLogin/>\r\n      </Menu>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport SideBar from '../sidebar/sidebar'\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport Fullscreen from './fullScreen'\r\nimport { ApiStatus, RootState, DisplayStatus } from '../../redux/types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport MenuHider from './menuHider';\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport PickApi from './ApiDropdown'\r\nconst currTheme = createTheme({\r\n    palette: {\r\n        primary: {\r\n            main: '#ffffff'\r\n        }\r\n    },\r\n});\r\n\r\nexport default function TemporaryDrawer(props) {\r\n    const [state, setState] = React.useState({\r\n        isOpen: false\r\n    });\r\n    const apiStatus = useSelector((state: RootState) => {\r\n        return state.APIStatusReducer as ApiStatus;\r\n    })\r\n    const displayStatus = useSelector((state: RootState) => {\r\n        return state.DisplayReducer as DisplayStatus;\r\n    })\r\n    let display = \"Webspeech\"\r\n    if (apiStatus.currentAPI == 1) {\r\n        display = \"Azure\"\r\n    } else if (apiStatus.currentAPI == 2) {\r\n        display = \"StreamText\"\r\n    } else {\r\n        display = \"Webspeech\"\r\n    }\r\n    const myTheme = currTheme\r\n    const changeVisibility = () => {\r\n        let topbarID = document.getElementById(\"topbar-wrapper\")\r\n        if (!displayStatus.menuVisible) {\r\n            if (topbarID) {\r\n                topbarID.style.opacity = \"0\"\r\n            }\r\n        } else {\r\n            if (topbarID) {\r\n                topbarID.style.opacity = \"1\"\r\n            }\r\n        }\r\n    }\r\n    const changeVisibilityOver = () => {\r\n        let topbarID = document.getElementById(\"topbar-wrapper\")\r\n        if (topbarID) {\r\n            topbarID.style.opacity = \"1\"\r\n        }\r\n    }\r\n    const toggleDrawer =\r\n        (open: boolean) =>\r\n            (event: React.MouseEvent) => {\r\n                setState({ ...state, isOpen: open });\r\n            };\r\n    return (\r\n        <AppBar position=\"fixed\" id=\"topbar-wrapper\" onMouseOut={changeVisibility} onMouseOver={changeVisibilityOver} style={{ transition: '0.6s' }}>\r\n            <Grid container spacing={2} alignItems=\"center\"  >\r\n\r\n                <Toolbar style={{ backgroundColor: displayStatus.secondaryColor, width: '100vw', maxHeight: '10vh', paddingLeft: '20px' }}>\r\n\r\n                    <Grid item>\r\n\r\n                        <IconButton\r\n                            onClick={toggleDrawer(true)}\r\n                        >\r\n                            <ThemeProvider theme={myTheme}>\r\n                                <MenuIcon color=\"primary\" />\r\n                            </ThemeProvider>\r\n                        </IconButton>\r\n\r\n\r\n                        <Drawer\r\n                            disableEnforceFocus\r\n                            open={state.isOpen}\r\n                            onClose={toggleDrawer(false)}\r\n                        >\r\n                            <SideBar isRecording={props.isRecording} />\r\n                        </Drawer>\r\n                    </Grid>\r\n                    <Grid item xs>\r\n                        <h2 className=\"d-table-cell tar2\" style={{textAlign: \"left\",  paddingLeft: '20px'}}>ScribeAR</h2>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <PickApi />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <h3 > {display} </h3>\r\n                    </Grid>\r\n\r\n\r\n                    <Grid item>\r\n\r\n                        <MenuHider menuVisible={displayStatus.menuVisible} />\r\n                    </Grid>\r\n                    \r\n                    <Grid item>\r\n\r\n                        <Fullscreen />\r\n                    </Grid>\r\n                </Toolbar>\r\n\r\n            </Grid>\r\n\r\n\r\n\r\n            {/* <div className=\"border d-table w-100\">\r\n                    <h2 className=\"d-table-cell tar2\">ScribeAR</h2>\r\n                </div>\r\n                <div  style ={{position: 'relative', left: '62vw'}}>\r\n                <PickApi />\r\n                </div>\r\n                <h3 style ={{position: 'relative', left: '62.5vw'}}> {display} </h3>\r\n                <div  style ={{position: 'absolute', left: '93vw', paddingLeft: '2vw'}}>\r\n\r\n                <Fullscreen/>\r\n                </div>\r\n                <div  style ={{position: 'absolute', left: '90.5vw', paddingLeft: '2vw'}}>\r\n\r\n                    <MenuHider menuVisible={displayStatus.menuVisible}/>\r\n                </div> */}\r\n\r\n        </AppBar>\r\n    )\r\n}","import * as React from 'react';\r\nimport { useCallback, useMemo } from 'react';\r\nimport { ControlStatus, ApiStatus } from '../../../redux/types';\r\n\r\nexport const getSpeechRecognition = () => {\r\n  if (!window || !(window as any).webkitSpeechRecognition) {\r\n    throw new Error('Your browser does not support web speech recognition');\r\n  }\r\n  const speechRecognition = new (window as any).webkitSpeechRecognition();\r\n  speechRecognition.continuous = true;\r\n  speechRecognition.interimResults = true;\r\n  return speechRecognition as SpeechRecognition;\r\n};\r\n\r\nexport const useRecognition = () => {\r\n  console.log(\"HEY HEY HEY HEY\")\r\n\r\n  var transcript=\"\"\r\n  var finalTranscript=\"\"\r\n  const [transcripts, setTranscripts] = React.useState<string[]>([]);\r\n  const listen = useCallback(\r\n\r\n    async (transcriptsFull: string, control: React.MutableRefObject<ControlStatus>,  currentAPI: React.MutableRefObject<ApiStatus>) =>\r\n      new Promise((resolve, reject) => {\r\n        console.log(\"YOYOYOYOYOYYOYO\")  \r\n        var lastStartedAt = new Date().getTime();\r\n\r\n        const speechRecognition = getSpeechRecognition();\r\n        speechRecognition.onresult = (event: SpeechRecognitionEvent) => {\r\n          if (control.current.listening == false || currentAPI.current.currentAPI != 0) {\r\n              speechRecognition.stop()\r\n              resolve(transcriptsFull);   \r\n          } else {\r\n          const finalResult = Array.from(event.results)\r\n\r\n          .map(result => result[0])\r\n          .map(result => result.transcript)\r\n          .join('');\r\n          console.log(finalResult)\r\n\r\n          if (finalResult) {\r\n            transcript = finalTranscript + finalResult;\r\n          }    \r\n          setTranscripts([...transcripts, transcript]);\r\n\r\n          transcriptsFull = transcript\r\n        }\r\n        };\r\n  \r\n        speechRecognition.onend = () => { \r\n          var timeSinceStart = new Date().getTime() - lastStartedAt;\r\n          if (control.current.listening && currentAPI.current.currentAPI === 0) {\r\n            finalTranscript = transcript + \" \";\r\n            if (timeSinceStart > 1000) {\r\n\r\n            speechRecognition.start()\r\n            }\r\n          } else {\r\n            resolve(transcriptsFull);   \r\n          }\r\n        \r\n        }\r\n         speechRecognition.start();\r\n      }),\r\n    [setTranscripts]\r\n  );\r\n\r\n  return useMemo(() => ({ transcripts, listen }), [transcripts]);\r\n};","import * as React from 'react';\r\nimport { useRecognition, getSpeechRecognition} from './webspeech/recognition';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { RootState } from '../../store';\r\nimport { AzureRecognition } from './azure/azureRecognition';\r\nimport { DisplayStatus,  AzureStatus, ControlStatus, ApiStatus } from '../../redux/types'\r\n\r\nvar transcriptsFull = \"testing\"\r\nlet desiredAPI = 0;\r\n\r\nexport const WebRecognitionExample: React.FC = (props) => {\r\n  const dispatch = useDispatch()\r\nconst control = useSelector((state: RootState) => {\r\n  return state.ControlReducer as ControlStatus;\r\n});\r\nconst textSize = useSelector((state: RootState) => {\r\n  return state.DisplayReducer as DisplayStatus;\r\n});\r\nconst azureStatus = useSelector((state: RootState) => {\r\n  return state.AzureReducer as AzureStatus\r\n})\r\nconst apiStatus = useSelector((state: RootState) => {\r\n  return state.APIStatusReducer as ApiStatus\r\n})\r\nReact.useEffect(() => {\r\n  if (control.listening == true) {\r\n    if (apiStatus.currentAPI == 0) {\r\n      desiredAPI = 0\r\n      webspeechHandler()\r\n    } else if (apiStatus.currentAPI == 1) {\r\n      desiredAPI = 1\r\n      azureHandler()\r\n    }\r\n  } \r\n}, [control.listening, apiStatus.currentAPI]);\r\ndocument.addEventListener(\"DOMContentLoaded\", function(){\r\n  if (apiStatus.currentAPI == 1) {\r\n  Swal.fire({\r\n    title: 'It appears you have a valid Microsoft Azure key, would you like to use Microsoft Azure?',\r\n    icon: 'info',\r\n    allowOutsideClick: false,\r\n    showDenyButton: true,\r\n    confirmButtonText: 'Yes!',\r\n  }).then((result) => {\r\n    if (result.isConfirmed) {\r\n      Swal.fire('Switching to Azure', '', 'success')\r\n      desiredAPI = 1\r\n      azureHandler()\r\n    } else {\r\n      let copyStatus = Object.assign({}, apiStatus);\r\n      copyStatus.currentAPI = 0\r\n      dispatch({type: 'CHANGE_API_STATUS', payload: copyStatus})\r\n      webspeechHandler()\r\n    }\r\n  })\r\n  } \r\n});\r\nconst textSizeA = \"\" + textSize.textSize + \"vh\"\r\nconst { azureTranscripts, azureListen } = AzureRecognition();\r\nconst { transcripts, listen } = useRecognition();\r\n\r\nconst stateRefControl = React.useRef(control)\r\nconst stateRefAzure = React.useRef(azureStatus)\r\nconst stateCurrentAPI = React.useRef(apiStatus)\r\nstateRefControl.current = control\r\nstateRefAzure.current = azureStatus\r\nstateCurrentAPI.current = apiStatus\r\n  const webspeechHandler = async () => {\r\n    const recognizedMessage = await listen(transcriptsFull, stateRefControl, stateCurrentAPI).then(response => {  \r\n      if (stateRefControl.current.listening && stateCurrentAPI.current.currentAPI == 0) {\r\n          transcriptsFull = transcriptsFull + response\r\n          webspeechHandler()\r\n        }\r\n      }\r\n    );\r\n  };\r\n  const azureHandler = async () => {\r\n    const recognizedMessage = await azureListen(transcriptsFull, stateRefControl, stateRefAzure, stateCurrentAPI).then(response => {  \r\n      if (stateRefControl.current.listening && stateCurrentAPI.current.currentAPI == 1) {\r\n          transcriptsFull = transcriptsFull + response\r\n          azureHandler()\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  const  checkNull = async (input: string) => {\r\n    if (input == null || input == \"\" ) {\r\n      input = \"empty\"\r\n    } \r\n  }\r\n  let fullTranscripts;\r\n  if (desiredAPI == 0) {\r\n    fullTranscripts = transcripts\r\n  } else {\r\n    fullTranscripts = azureTranscripts\r\n  }\r\n  const capts = document.getElementById('captionsSpace')\r\n  if (capts != null) {\r\n  var isScrolledToBottom = capts.scrollHeight - capts.clientHeight <= capts.scrollTop + 1\r\n  capts.scrollTop = capts.scrollHeight - capts.clientHeight // scroll to bottom\r\n  }\r\n  return (\r\n    <div>      \r\n      <ul >\r\n        {fullTranscripts.map(transcript => (\r\n          <h3  id = \"captionsSpace\" style ={{position: 'fixed', width: '90%', textAlign: 'left', left: '0', fontSize: textSizeA, paddingLeft: '5%', paddingRight: '60%', overflowY: 'scroll', height: '40%', color: textSize.textColor}}>{transcript}</h3>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};","import './Desktop.css';\r\nimport AppBar from '../../components/topbar/topbar'\r\nimport { RootState } from '../../redux/types';\r\nimport { WebRecognitionExample } from '../../components/api/recogComponent';\r\nimport { Provider, useDispatch, useSelector} from 'react-redux';\r\nimport Theme from '../../components/sidebar/display/themeOption';\r\nimport { store } from '../../store';\r\n\r\n/* todo:\r\n      mui theme file which has every theme and is sent to every styled function\r\n      this will help readability and make custom themes way easier to implement\r\n*/\r\nexport default function Desktop(props) {\r\n   \r\n   const isRecording = useSelector((state: RootState) => {\r\n      return state;\r\n   });   \r\n\r\n\r\n   console.log(isRecording)\r\n   const dispatch = useDispatch()\r\n   return (\r\n     <div>\r\n        <AppBar isRecording={isRecording}/>\r\n        <WebRecognitionExample/>\r\n     </div>\r\n   )\r\n  }\r\n\r\n","import Desktop from './mode/desktop/Desktop';\nimport { Provider, useDispatch, useSelector} from 'react-redux';\nimport { RootState, DisplayStatus } from './redux/types';\n\nimport './App.css';\n\nfunction App() {\n  const display = useSelector((state: RootState) => {\n    return state.DisplayReducer as DisplayStatus;\n }); \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\" style = {{ color: '#ffffff', background: display.primaryColor}}>\n        <Desktop/>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import { DisplayStatus } from \"../types\";\r\nenum COLOR {\r\n  \"BLACK\",\r\n  \"WHITE\",\r\n}\r\nconst  initialState : DisplayStatus = {\r\n  textSize: 6,\r\n  primaryColor: '#0f0f0f',\r\n  secondaryColor: \"#292929\",\r\n  textColor: '#FFFFFF',\r\n  menuVisible: true,\r\n}\r\n\r\nconst saveLocally = (varName: string, value: any) => {\r\n  localStorage.setItem(varName, JSON.stringify(value))\r\n}\r\n\r\nconst getLocalState = (name: string) => {\r\n  let checkNull = localStorage.getItem(name)\r\n  if (checkNull) {\r\n    return JSON.parse(checkNull);\r\n  } else {\r\n    return initialState\r\n  }\r\n};\r\n\r\nexport const DisplayReducer = (state = getLocalState(\"displayReducer2\"), action) => {\r\n  switch (action.type) {\r\n    case 'CHANGE_PRIMARY_THEME':\r\n      \r\n      return {\r\n        ...state,\r\n        primaryColor: action.payload\r\n      }\r\n    case 'CHANGE_SECONDARY_THEME':\r\n      return {\r\n        ...state,\r\n        secondaryColor: action.payload\r\n      }\r\n    case 'CHANGE_TEXT_COLOR':\r\n      return {\r\n        ...state,\r\n        textColor: action.payload,\r\n      }\r\n    case 'SET_TEXT':\r\n      saveLocally(\"displayReducer2\", action.payload)\r\n      return { ...state, ...action.payload };\r\n    case 'HIDE_MENU':\r\n      return {\r\n        ...state,\r\n        menuVisible: !state.menuVisible,\r\n        };\r\n    default:\r\n      return state;\r\n  }\r\n}","import { ApiStatus, AzureStatus, StreamtextStatus, PhraseList, PhraseListStatus } from \"../types\";\r\nenum APIS {\r\n  \"WEBSPEECH\",\r\n  \"AZURE\",\r\n  \"STREAMTEXT\"\r\n}\r\nenum STATUS {\r\n  \"AVAILABLE\",\r\n  \"NULL\",\r\n  \"UNAVAILABLE\",\r\n  \"INPROGRESS\",\r\n  \"ERROR\"\r\n}\r\n\r\n\r\nconst initialAPIStatusState: ApiStatus = {\r\n  currentAPI: APIS.WEBSPEECH,\r\n  webspeechStatus: STATUS.AVAILABLE,\r\n  azureStatus: STATUS.NULL,\r\n  streamtextStatus: STATUS.NULL,\r\n}\r\n\r\n\r\nconst initialPhraseList: PhraseList = {\r\n  phrases: [],\r\n  name: \"None\",\r\n  availableSpace: -1\r\n}\r\n\r\n\r\nconst initialPhraseListState: PhraseListStatus = {\r\n  currentPhraseList: initialPhraseList,\r\n  phraseListMap: new Map<string, PhraseList>()\r\n}\r\n\r\nconst initialAzureState: AzureStatus = {\r\n  azureKey: \"Enter\",\r\n  azureRegion: \"Enter\",\r\n  phrases: [\"\"]\r\n}\r\n\r\nconst initialStreamtextState: StreamtextStatus = {\r\n  key: \"Enter\"\r\n}\r\n\r\nconst saveLocally = (varName: string, value: any) => {\r\n  localStorage.setItem(varName, JSON.stringify(value))\r\n}\r\n\r\nconst getLocalState = (name: string) => {\r\n  let checkNull = localStorage.getItem(name)\r\n  if (checkNull) {\r\n    return JSON.parse(checkNull);\r\n  } else {\r\n    if (name == \"apiStatus\") {\r\n      return initialAPIStatusState\r\n    } else if (name == \"azureStatus\") {\r\n      return initialAzureState\r\n    }\r\n  }\r\n};\r\n\r\nexport const APIStatusReducer = (state = getLocalState(\"apiStatus\"), action) => {\r\n  switch (action.type) {\r\n    case 'CHANGE_CURRENT_API':\r\n      return { ...state, ...action.payload };\r\n    case 'CHANGE_API_STATUS':\r\n      if (action.payload.azureStatus == 0 || action.payload.currentAPI !== state.currentAPI) {\r\n        saveLocally(\"apiStatus\", action.payload)\r\n      }\r\n      return { ...state, ...action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const AzureReducer = (state = getLocalState(\"azureStatus\"), action) => {\r\n  switch (action.type) {\r\n    case 'CHANGE_AZURE_LOGIN':\r\n      return { ...state, ...action.payload };\r\n    case 'CHANGE_AZURE_STATUS':\r\n      return { ...state, ...action.payload };\r\n    case 'CHANGE_LIST':\r\n      return { ...state, \r\n               phrases: action.payload }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\nexport const StreamtextReducer = (state = initialStreamtextState, action) => {\r\n  switch (action.type) {\r\n    case 'FLIP_RECORDING':\r\n      return !state\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const PhraseListReducer = (state = initialPhraseListState, action) => {\r\n  switch (action.type) {\r\n    case 'ADD_PHRASE_LIST':\r\n      let newListName = action.payload.name\r\n      let iterator = 1;\r\n      while (state.phraseListMap.has(newListName)) {\r\n        newListName = action.payload.name + iterator\r\n        iterator++;\r\n      }\r\n      let newPhraseList: PhraseList = {\r\n        phrases: [],\r\n        name: newListName,\r\n        availableSpace: action.payload.availableSpace,\r\n      }\r\n      state.phraseListMap.set(newListName, newPhraseList)\r\n      return {\r\n        ...state,\r\n        currentPhraseList: newPhraseList,\r\n      }\r\n    case 'CHANGE_PHRASE_LIST':\r\n      return {\r\n        ...state,\r\n        currentPhraseList: action.payload,\r\n      }\r\n    case 'DELETE_PHRASE_LIST':\r\n      state.phraseListMap.delete(action.payload)\r\n      if (state.currentPhraseList.name == action.payload) {\r\n        return {\r\n          ...state,\r\n          currentPhraseList: initialPhraseList,\r\n        }\r\n      } else {\r\n        return {\r\n          ...state,\r\n        }\r\n      }\r\n    case 'EDIT_PHRASE_LIST':     \r\n      return { ...state,\r\n               currentPhraseList: action.payload}\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import { ControlStatus } from \"../types\";\r\n\r\nconst initialControlState : ControlStatus = {\r\n    listening: true,\r\n    speechLanguage: \"en-US\",\r\n    textLanguage: \"en\"\r\n}\r\n\r\nexport function ControlReducer(state = initialControlState, action) {\r\n  switch (action.type) {\r\n    case 'FLIP_RECORDING':\r\n      return { ...state, ...action.payload};\r\n    case 'FLIP_RECORDING_PHRASE':\r\n      return { ...state,\r\n              listening: action.payload};\r\n    case 'SET_SPEECH_LANGUAGE':\r\n        return {\r\n          ...state,\r\n          speechLanguage: action.payload};\r\n    case 'SET_TEXT_LANGUAGE':\r\n        return {\r\n          ...state,\r\n        speechLanguage: action.payload};\r\n    default:\r\n      return state;\r\n  }\r\n}","import {DisplayReducer} from './redux/reducers/displayReducers'\r\nimport {APIStatusReducer, AzureReducer, StreamtextReducer, PhraseListReducer} from './redux/reducers/apiReducers'\r\nimport {ControlReducer} from './redux/reducers/controlReducers'\r\n\r\nimport { combineReducers, createStore } from 'redux'\r\n\r\nconst rootReducer = combineReducers({\r\n  DisplayReducer,\r\n  APIStatusReducer,\r\n  AzureReducer,\r\n  StreamtextReducer,\r\n  ControlReducer,\r\n  PhraseListReducer,\r\n})\r\n\r\nexport const store = createStore(rootReducer)\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {store} from './store';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <Provider store={store}>\n        <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}