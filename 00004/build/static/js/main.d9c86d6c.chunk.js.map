{"version":3,"sources":["components/TopSpace/Options/OnOff/index.js","store/index.js","redux/actions.js","components/TopSpace/Options/Record/index.js","components/PopMenu/MenuSwitch/index.js","components/TopSpace/Options/Micvisual/index.js","components/TopSpace/Options/Save/index.js","components/AzureTopSpace/AzureOptions/Key/index.js","components/AzureTopSpace/AzureOptions/Region/index.js","components/AzureTopSpace/AzureOptions/Language/index.js","components/AzureTopSpace/AzureOptions/EnterButton/index.js","components/AzureTopSpace/AzureOptions/TargetLanguage/index.js","components/AzureTopSpace/AzureOptions/index.js","components/AzureDrawer/index.js","components/AzureTopSpace/index.js","components/Drawer/index.js","components/PlaceHolder/MenuHider/index.js","components/PopMenu/index.js","components/TopSpace/Options/PlusMinus/index.js","components/TopSpace/Options/SpringModal/index.js","components/TopSpace/Options/Stereo/index.js","components/TopSpace/Options/VisualControl/index.js","components/TopSpace/Options/index.js","components/newDrawer/theme.js","components/ButtomNavi/index.js","components/LogIn/AuthNavItem.js","components/LogIn/graphService.js","components/LogIn/Welcome.js","components/LogIn/LogIn.js","components/Captions/Recognition/index.js","components/AzureCaptions/AzureRecognition/index.js","components/newDrawer/index.js","components/TopSpace/index.js","components/AzureCaptions/Extender/index.js","components/AzureCaptions/index.js","components/Captions/Extender/index.js","components/Captions/index.js","components/MiddleSpace/Loudness/AudioVisualiser.js","components/MiddleSpace/Loudness/AudioAnalyser.js","components/MiddleSpace/Loudness/index.js","components/DnD/Draggable/index.js","components/DnD/Droppable/index.js","components/MiddleSpace/Stereo/StereoVisualiser.js","components/MiddleSpace/Stereo/StereoAnalyser.js","components/MiddleSpace/Stereo/index.js","components/MiddleSpace/index.js","components/PlaceHolder/index.js","App.js","serviceWorker.js","redux/reducers.js","index.js","components/LogIn/Config.js"],"names":["OnOff","props","dispatch","useDispatch","item","className","type","onChange","action","initialState","inputValue","initialStateRegion","initialStateSuccess","azureKeyReducer","state","Object","assign","text","store","combineReducers","desiredAPI","azureOptions","azureKey","isSuccess","targetLanguage","currentLanguage","createStore","increment_textSize","decrement_textSize","increment_numLines","decrement_numLines","flip_invertColors","Record","setting","useSelector","recording","settingAzure","recordingAzure","switchToAzure","isSuccessReducer","IconButton","color","size","onClick","MenuSwitch","title","Micvisual","mic","Save","textSize","Button","variant","_setting","localStorage","setItem","UserInput","temp_azure_key","getItem","undefined","value","temp","astr_str","length","substr","Array","join","handleChange","bind","event","this","setState","target","preventDefault","onSubmit","handleSubmit","id","placeholder","React","Component","RegionOptions","selected","LanguageOptions","EnterButton","s","document","getElementById","t","r","currentLanguageReducer","options","selectedIndex","targetLanguageReducer","azureRegionOptionsReducer","TargetLanguage","AzureOptions","style","fontFamily","useStyles","makeStyles","list","width","fullList","SwipeableTemporaryDrawer","classes","useState","left","toggleDrawer","anchor","open","key","map","Fragment","SwipeableDrawer","onClose","onOpen","clsx","role","List","Divider","MenuHider","meh","SimpleMenu","anchorEl","setAnchorEl","handleClose","submenu","currentTarget","keepMounted","Boolean","MenuItem","PlusMinus","textC","decrement","increment","theme","modal","display","alignItems","justifyContent","paper","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","outline","TransitionsModal","setOpen","Modal","aria-labelledby","aria-describedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","Stereovisual","steromic","VisualControl","stereo","result","Options","ins","invertColors","mytheme","createMuiTheme","primary","main","blue","secondary","orange","status","danger","root","flexGrow","AuthNavItem","isAuthenticated","aria-controls","aria-haspopup","authButtonMethod","graph","require","getAuthenticatedClient","accessToken","Client","init","authProvider","done","getUserDetails","a","client","api","get","user","getFolders","folders","WelcomeContent","email","LogIn","userAgentApplication","UserAgentApplication","auth","clientId","config","appId","redirectUri","cache","cacheLocation","storeAuthStateInCookie","getAccount","error","items","normalizeError","getUserProfile","normalizedError","errParts","split","message","debug","JSON","stringify","loginPopup","scopes","prompt","logout","acquireTokenSilent","displayName","userPrincipalName","window","msal","console","log","login","recognition","SpeechRecognition","webkitSpeechRecognition","lang","continuous","interimResults","Recognition","downloadTxtFile","element","createElement","results","push","searchEles","children","i","innerHTML","file","Blob","href","URL","createObjectURL","download","body","appendChild","click","line","targetID","appendLine","start","stop","prevProps","prevState","isRecording","onresult","e","words","from","transcript","charAt","toUpperCase","slice","isFinal","updateCurrentLine","onend","str","capts","isScrolledToBottom","scrollHeight","clientHeight","scrollTop","out","div","textContent","scrollIntoView","behavior","contenteditable","PureComponent","regionOption","targetLang","speechConfig","audioConfig","SpeechSDK","fromDefaultMicrophoneInput","reco","AzureRecognition","fromSubscription","speechRecognitionLanguage","addTargetLanguage","setProfanity","lastRecognized","sessionStarted","swal","icon","timer","recognizing","language","translations","recognized","canceled","startContinuousRecognitionAsync","stopContinuousRecognitionAsync","close","err","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","menuButton","marginRight","hide","show","drawer","flexShrink","drawerPaperO","drawerPaperB","drawerPaper","drawerHeader","mixins","toolbar","content","contentShift","PersistentDrawerLeft","pick","useTheme","choice","handleDrawerOpen","handleDrawerClose","handleClick","CssBaseline","ThemeProvider","AppBar","position","Toolbar","aria-label","edge","class","Tooltip","TransitionComponent","arrow","EmailShareButton","subject","startIcon","fontSize","Drawer","direction","TopSpace","h","height","Extender","bottom","AzureCaptions","lineWidth","numLines","checkAzureKey","correctAzureKey","paddingString","resH","sz","wantWebspeech","switchOffAzure","margin","scrollBottom","overflow","paddingLeft","paddingRight","isCrorrect","checkKey","region","Captions","azureCaptionSuccess","AudioVisualiser","canvas","createRef","audioData","current","context","getContext","clearRect","drawLine","drawSpectrum","drawCircular","x","sliceWidth","beginPath","moveTo","y","lineTo","strokeStyle","iscolor","stroke","barHeight","barWidth","fillStyle","fillRect","avg","reduce","previous","rel","Math","cos","PI","sin","x_2","y_2","x_3","y_3","x_4","y_4","x_5","y_5","draw","ref","AudioAnalyser","Uint8Array","tick","audioContext","AudioContext","webkitAudioContext","analyser","createAnalyser","dataArray","frequencyBinCount","source","createMediaStreamSource","audio","connect","rafId","requestAnimationFrame","getByteTimeDomainData","getByteFrequencyData","cancelAnimationFrame","disconnect","Index","stopMicrophone","getMicrophone","ismic","navigator","mediaDevices","getUserMedia","video","getTracks","forEach","track","Draggable","drag","dataTransfer","setData","noAllowDrop","stopPropagation","draggable","onDragStart","onDragOver","Droppable","drop","data","getData","allowDrop","onDrop","StereoVisualiser","audioDataL","audioDataR","drawRectangle","drawDoubleSpectrum","POINTS","diff","avgL","gradient","createLinearGradient","addColorStop","cir","StereoAnalyser","querySelector","createMediaElementSource","splitter","createChannelSplitter","analyserL","analyserR","dataArrayL","dataArrayR","destination","src","crossOrigin","controls","Stereo","Wrapper","styled","MiddleSpace","stereoMic","PlaceHolder","App","onWebspeech","enteredKey","enteredRegion","sizeString","switchMenus","isEnteredKey","isEnteredRegion","isCorrectKey","wantsWebspeech","bgColor","setInterval","checkIfStillHere","myTime","isTimerStarted","confirmButtonText","then","isConfirm","buttons","clearTimeout","setTimeout","location","reload","hostname","match","savedTextSize","savedBox","savedMeh","choiceMeh","choiceBox","choiceTextSize","allReducers","max","min","lockScreen","ReactDOM","render","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.d9c86d6c.chunk.js","sourcesContent":["import React from 'react'\r\nimport './index.css'\r\nimport { /*useSelector, */useDispatch } from 'react-redux'\r\n\r\n// This code only works if the initial state is Off. It's surprisingly way harder\r\n// to get this to work if you want the inital state of the checkbox to be checked.\r\n\r\nexport default function OnOff(props) {\r\n     //const setting = useSelector(props.setting)\r\n     // useDispatch returns the state modifying function, invoked below.\r\n     const dispatch = useDispatch()\r\n\r\n     return (\r\n          <div>\r\n               {props.item}\r\n               <label className=\"switch\">\r\n                    <input type=\"checkbox\" onChange={() => dispatch(props.action())}></input>\r\n                    <span className=\"slider\"></span>\r\n               </label>\r\n          </div>\r\n     )\r\n}\r\n","import {createStore, combineReducers} from 'redux'\n\n// 7882896e3ffc4fe3b2f4c055f0914d67 <- thats the key!!\n\nconst initialState = {\n    inputValue: 'enter'\n}\n\nconst initialStateRegion = {\n    inputValue: 'enter'\n}\n\nconst initialStateSuccess= {\n    inputValue: 'false'\n}\n\nconst currentLanguage= {\n    inputValue: 'English - US'\n}\n\nconst targetLanguage= {\n    inputValue: 'English - US'\n}\n\nconst desiredAPI= {\n    inputValue: 'webspeech'\n}\nvar currentLanguageReducer = (state = initialState, action) =>{\n    switch(action.type) {\n        case 'INPUT_CURRENT_LANGUAGE':\n            return Object.assign({}, state, {inputValue: action.text });\n\n        default:\n            return state;\n    }\n}\n\nvar targetLanguageReducer = (state = initialState, action) =>{\n\n    switch(action.type) {\n        case 'INPUT_TARGET_LANGUAGE':\n            return Object.assign({}, state, {inputValue: action.text });\n\n        default:\n            return state;\n    }\n}\n\nvar azureKeyReducer = (state = initialState, action) =>{\n\n    switch(action.type) {\n        case 'INPUT_KEY':\n            return Object.assign({}, state, {inputValue: action.text });\n\n        default:\n            return state;\n    }\n}\nvar desiredAPIReducer = (state = initialState, action) =>{\n\n    switch(action.type) {\n        case 'INPUT_DESIRED_API':\n            return Object.assign({}, state, {inputValue: action.text });\n        default:\n            return state;\n    }\n}\n\nvar isSuccessReducer = (state = initialStateSuccess, action) =>{\n\n    switch(action.type) {\n        case 'INPUT_SUCCESS':\n            return Object.assign({}, state, {inputValue: action.text });\n        default:\n            return state;\n    }\n}\n\n\n\nvar azureRegionOptionsReducer = (state = initialStateRegion, action) => {\n    switch(action.type) {\n        case 'INPUT_REGION':\n            return Object.assign({}, state, {inputValue: action.text});\n\n        default:\n            return state;\n    }\n}\n\n\nconst allReducers = combineReducers({\n    desiredAPI : desiredAPIReducer,\n    azureOptions: azureRegionOptionsReducer,\n    azureKey: azureKeyReducer,\n    isSuccess: isSuccessReducer,\n    targetLanguage: targetLanguageReducer,\n    currentLanguage: currentLanguageReducer,\n});\n\n\nconst store = createStore(azureKeyReducer);\n\nexport default store;\n","// Actions are the functions that we call throughout the project to change global state.\r\n\r\nexport const set_screenWidth = (width) => {\r\n     return {\r\n          type: 'SET_SCREENWIDTH',\r\n          value: width\r\n     };\r\n}\r\n\r\nexport const set_screenHeight = (height) => {\r\n     return {\r\n          type: 'SET_SCREENHEIGHT',\r\n          value: height\r\n     };\r\n}\r\n\r\nexport const increment_textSize = () => {\r\n     return { type: 'INCREMENT_TEXTSIZE' };\r\n}\r\n\r\nexport const decrement_textSize = () => {\r\n     return { type: 'DECREMENT_TEXTSIZE' };\r\n}\r\n\r\nexport const increment_lineWidth = () => {\r\n     return { type: 'INCREMENT_LINEWIDTH' };\r\n}\r\n\r\nexport const decrement_lineWidth = () => {\r\n     return { type: 'DECREMENT_LINEWIDTH' };\r\n}\r\n\r\nexport const increment_numLines = () => {\r\n     return { type: 'INCREMENT_NUMLINES' };\r\n}\r\n\r\nexport const decrement_numLines = () => {\r\n     return { type: 'DECREMENT_NUMLINES' };\r\n}\r\n\r\nexport const flip_lockScreen = () => {\r\n     return { type: 'FLIP_LOCKSCREEN' };\r\n}\r\n\r\nexport const flip_invertColors = () => {\r\n     return { type: 'FLIP_INVERTCOLORS' };\r\n}\r\n\r\nexport const flip_switchMenus = () => {\r\n     return { type: 'FLIP_SWITCHMENUS' };\r\n}\r\nexport const flip_recording = () => {\r\n     return { type: 'FLIP_RECORDING' };\r\n}\r\n\r\nexport const flip_on_webspeech = () =>{\r\n     return { type: 'FLIP_ON_WEBSPEECH'};\r\n}\r\n\r\n\r\nexport const flip_recording_azure = () => {\r\n     return {type: 'FLIP_RECORDING_AZURE'}\r\n}\r\n\r\nexport const azure_key = (key) => {\r\n     return {\r\n          type: 'KEY_AZURE',\r\n          key: \"dsfdsf\"\r\n     }\r\n}\r\nexport const azure_region = (region) => {\r\n     return {\r\n          type: 'AZURE_REGION',\r\n          region: \"dsfdsf\"\r\n     }\r\n}\r\n\r\nexport const flip_entered_key = () => {\r\n     return { type: 'FLIP_ENTERED_KEY' };\r\n}\r\nexport const flip_entered_region = () => {\r\n     return { type: 'FLIP_ENTERED_REGION' };\r\n}\r\nexport const flip_correct_azureKey = () => {\r\n     return { type: 'FLIP_CORRECT_AZUREKEY' };\r\n}\r\nexport const flip_switch_to_azure = () => {\r\n     return { type: 'FLIP_SWITCH_TO_AZURE' };\r\n}\r\nexport const flip_check_azureKey = () => {\r\n     return { type: 'FLIP_CHECK_AZUREKEY' };\r\n}\r\nexport const flip_instructions = () =>{\r\n     return { type: 'FLIP_INSTRUCTIONS'};\r\n}\r\n\r\nexport const flip_menuhide = () =>{\r\n     return { type: 'FLIP_MENUHIDE'};\r\n}\r\n\r\nexport const submenu1 = () =>{\r\n     return { type: 'SUBMENU_1'}\r\n}\r\nexport const submenu2 = () =>{\r\n     return { type: 'SUBMENU_2'}\r\n}\r\nexport const next_page = () => {\r\n     return { type: 'NEXT_PAGE'}\r\n}\r\nexport const prev_page = () => {\r\n     return {type: 'PREV_PAGE'}\r\n}\r\nexport const flip_stereo = () =>{\r\n     return { type: 'FLIP_STEREO'};\r\n}\r\nexport const forward_stereoVisual = () => {\r\n     return {type: 'FORWARD_STEREOVISUAL'};\r\n}\r\nexport const backward_stereoVisual = () => {\r\n     return {type: 'BACKWARD_STEREOVISUAL'};\r\n}\r\nexport const forward_micVisual = () => {\r\n     return { type: 'FORWARD_MICVISUAL' };\r\n}\r\nexport const backward_micVisual = () => {\r\n     return {type: 'BACKWARD_MICVISUAL'};\r\n}\r\n","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport store from '../../../../store'\r\nimport './index.css'\r\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PauseCircleFilledIcon from '@material-ui/icons/PauseCircleFilled';\r\nimport { flip_recording, flip_recording_azure } from '../../../../redux/actions'\r\n\r\nexport default function Record(props) {\r\n     const recording = (state) => state.recording\r\n     const recordingAzure = (state) => state.recordingAzure\r\n     const switchToAzure = (state) => state.switchToAzure\r\n     const setting = useSelector(recording)\r\n     const settingAzure = useSelector(recordingAzure)\r\n     const settingSwitchToAzure = useSelector(switchToAzure)// Get current value of recording.\r\n     // useDispatch returns the state modifying function, invoked below.\r\n     const dispatch = useDispatch()\r\n     // record-btn-wrapper toggles between the two buttons using the TopSpace\r\n     // hidden/shown CSS.\r\n     if (store.isSuccessReducer == 'inProgress') {\r\n       return(\r\n            <div>\r\n                 Listening\r\n                 <IconButton className = \"Play\" color= \"inherit\" size = \"large\"  >\r\n                      <PauseCircleFilledIcon className = \"pause\"/>\r\n                 </IconButton>\r\n            </div>\r\n       )\r\n     } else if (store.desiredAPI == 'azure') {\r\n       if (settingAzure == true){\r\n          return(\r\n               <div>\r\n                    Listening\r\n                    <IconButton className = \"Play\" color= \"inherit\" size = \"large\" onClick={() => dispatch(flip_recording_azure())} >\r\n                         <PauseCircleFilledIcon className = \"pause\"/>\r\n                    </IconButton>\r\n               </div>\r\n          )\r\n     } else{\r\n          return(\r\n               <div>\r\n                    To Start\r\n                    <IconButton className = \"Play\" color= \"inherit\" size = \"large\" onClick={() => dispatch(flip_recording_azure())}>\r\n                         <PlayCircleFilledIcon className = \"start\"/>\r\n                    </IconButton>\r\n               </div>\r\n          )\r\n     }\r\n     } else {\r\n       if (setting == true){\r\n             return(\r\n                  <div>\r\n                       Listening\r\n                       <IconButton className = \"Play\" color= \"inherit\" size = \"large\" onClick={() => dispatch(flip_recording())} >\r\n                            <PauseCircleFilledIcon className = \"pause\"/>\r\n                       </IconButton>\r\n                  </div>\r\n             )\r\n        } else{\r\n             return(\r\n                  <div>\r\n                       To Start\r\n                       <IconButton className = \"Play\" color= \"inherit\" size = \"large\" onClick={() => dispatch(flip_recording())}>\r\n                            <PlayCircleFilledIcon className = \"start\"/>\r\n                       </IconButton>\r\n                  </div>\r\n             )\r\n        }\r\n   }\r\n}\r\n","import React from 'react'\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport {IconButton} from '@material-ui/core'\nimport {useDispatch} from 'react-redux'\nimport {prev_page, next_page} from '../../../redux/actions'\n\nexport default function MenuSwitch(props){\n    const dispatch = useDispatch()\n    return (\n        <div>\n            <IconButton color = 'inherit' onClick = {()=>(dispatch(prev_page()))}>\n                <ArrowBackIosIcon />\n            </IconButton>\n            {props.title}\n            <IconButton color = 'inherit' onClick = {()=>(dispatch(next_page()))}>\n                <ArrowForwardIosIcon />\n            </IconButton>\n        </div>\n    )\n}","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport './index.css'\nimport {forward_micVisual, backward_micVisual, prev_page} from '../../../../redux/actions'\nimport {Button, IconButton} from \"@material-ui/core\"\nimport MenuSwitch from\"../../../PopMenu/MenuSwitch\"\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\n\n\n// This code only works if the initial state is Off. It's surprisingly way harder\n// to get this to work if you want the inital state of the checkbox to be checked.\n\nexport default function Micvisual(props) {\n\n    const mic = (state) => state.mic\n    const setting = useSelector(mic) // Get current value of recording.\n    // useDispatch returns the state modifying function, invoked below.\n    const dispatch = useDispatch()\n    let result = \"\"\n    let text = \"\"\n\n    // flip recording when space bar is pressed\n\n     //const setting = useSelector(props.setting)\n     // useDispatch returns the state modifying function, invoked below.\n\n     if (setting == 0){\n         result = \"No Visualization\"\n         text = \"None\"\n     }else if (setting == 1){\n         result = \"Line Visualization\"\n         text = \"Line\"\n     }else if (setting == 2){\n         result = \"Spectrum Visualization\"\n         text = \"Spectrum\"\n     }else{\n         result = \"Circular Visualization\"\n         text = \"Circular\"\n     }\n\n     return (\n         <div className=\"audio_result\">\n             MONO\n             <div className=\"audio_visual\">\n                 <IconButton color = 'inherit' onClick = {()=>(dispatch(backward_micVisual()))}>\n                     <ArrowBackIosIcon />\n                 </IconButton>\n                 {text}\n                 <IconButton color = 'inherit' onClick = {()=>(dispatch(forward_micVisual()))}>\n                     <ArrowForwardIosIcon />\n                 </IconButton>\n             </div>\n        </div>\n         // <MenuSwitch title = {text}/>\n          // <div className=\"audio_result\">\n          //     {result}\n          //      <div className=\"audio_visual\">\n          //           <Button className=\"audio_plus\" color = \"inherit\" variant = \"outlined\"\n          //                onClick={() => dispatch(flip_micVisual())} >{text}\n          //           </Button>\n          //\n          //      </div>\n          // </div>\n     )\n}\n","import React from \"react\"\nimport {useSelector} from 'react-redux'\nimport {Button} from \"@material-ui/core\"\nimport './index.css'\n\nfunction saveData(_setting){\n    localStorage.setItem('text',_setting);\n}\n\n\nexport default function Save() {\n    const textSize = (state) => state.textSize\n    const setting = useSelector(textSize)\n\n\n    return (\n        <div className = 'save-wrapper'>\n            <Button color = 'inherit' variant = 'outlined' onClick = {()=>saveData(setting)}>Save</Button>\n        </div>\n    )\n}","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {connect} from 'react-redux';\nimport store from '../../../../store/';\nimport { flip_entered_key, azure_key } from '../../../../redux/actions'\nimport './index.css'\n\n\nclass UserInput extends React.Component {\n\n\n  constructor(props) {\n\n    super(props);\n    var temp_azure_key = localStorage.getItem('azure_subscription_key');\n    if (store.azureKeyReducer == undefined) {\n    this.state = {value: temp_azure_key};\n    } else {\n      if (store.azureKeyReducer != 'incorrect' && store.azureKeyReducer != 'empty') {\n      var temp = store.azureKeyReducer;\n      var astr_str ='';\n      if (temp.length > 5) {\n      temp = temp.substr(temp.length - 4);\n      astr_str = new Array(store.azureKeyReducer.length - 4).join( '*' );\n    }\n      }\n      this.state = {value: astr_str + temp};\n    }\n    if (this.state != undefined) {\n      if (this.state.value != undefined && this.state.value != \"\") {\n        store.azureKeyReducer = this.state.value;\n      }\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n\n  }\n  handleChange(event) {\n    this.setState({value: event.target.value});\n    store.azureKeyReducer = event.target.value;\n    event.preventDefault();\n    localStorage.setItem('azure_subscription_key', event.target.value);\n  }\n\n\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          <div className = \"keytext\">\n            Enter Azure Key:\n          </div>\n\n          <div className = \"keybox\">\n            <input id= \"azure_key_value\" type=\"text\" placeholder= \"Azure Subscription Key\" value={this.state.value} onChange={this.handleChange} />\n          </div>\n\n        </label>\n\n      </form>\n    );\n  }\n}\nexport default UserInput;\n","import React, { useState } from 'react';\nimport onClickOutside from 'react-onclickoutside';\nimport store from '../../../../store/';\nimport './index.css'\n\nexport default function RegionOptions(props) {\n\n    return (\n        <div className = \"regionSelect\">\n            <select id=\"regionOptions\">\n                        <option value=\"westus\">US West</option>\n                        <option value=\"westus2\">US West 2</option>\n                        <option value=\"ussouthcentral\">US South Central</option>\n                        <option value=\"northcentralus\" selected=\"selected\">US West Central</option>\n                        <option value=\"useast\">US East</option>\n                        <option value=\"useast2\">US East 2</option>\n                        <option value=\"europewest\">Europe West</option>\n                        <option value=\"europenorth\">Europe North</option>\n                        <option value=\"brazilsouth\">South Brazil</option>\n                        <option value=\"australiaeast\">East Australia</option>\n                        <option value=\"asiasoutheast\">Asia Southeast</option>\n                        <option value=\"asiaeast\">Asia East</option>\n                    </select>\n        </div>\n    )\n}\n","import React, { useState } from 'react';\nimport onClickOutside from 'react-onclickoutside';\nimport store from '../../../../store/';\nimport './index.css'\n\nexport default function LanguageOptions(props) {\n\n    return (\n        <div className = \"languageSelect\">\n            <select id=\"languageOptions\">\n                        <option value=\"ar-EG\">Arabic - EG</option>\n                        <option value=\"ca-ES\">Catalan - ES</option>\n                        <option value=\"da-DK\">Danish - DK</option>\n                        <option value=\"da-DK\">Danish - DK</option>\n                        <option value=\"de-DE\">German - DE</option>\n                        <option value=\"en-AU\">English - AU</option>\n                        <option value=\"en-CA\">English - CA</option>\n                        <option value=\"en-GB\">English - GB</option>\n                        <option value=\"en-IN\">English - IN</option>\n                        <option value=\"en-NZ\">English - NZ</option>\n                        <option value=\"en-US\" selected=\"selected\">English - US</option>\n                        <option value=\"es-ES\">Spanish - ES</option>\n                        <option value=\"es-MX\">Spanish - MX</option>\n                        <option value=\"fi-FI\">Finnish - FI</option>\n                        <option value=\"fr-CA\">French - CA</option>\n                        <option value=\"fr-FR\">French - FR</option>\n                        <option value=\"hi-IN\">Hindi - IN</option>\n                        <option value=\"it-IT\">Italian - IT</option>\n                        <option value=\"ja-JP\">Japanese - JP</option>\n                        <option value=\"ko-KR\">Korean - KR</option>\n                        <option value=\"nb-NO\">Norwegian - NO</option>\n                        <option value=\"nl-NL\">Dutch - NL</option>\n                        <option value=\"pl-PL\">Polish - PL</option>\n                        <option value=\"pt-BR\">Portuguese - BR</option>\n                        <option value=\"pt-PT\">Portuguese - PT</option>\n                        <option value=\"ru-RU\">Russian - RU</option>\n                        <option value=\"sv-SE\">Swedish - SE</option>\n                        <option value=\"zh-CN\">Chinese - CN</option>\n                        <option value=\"zh-HK\">Chinese - HK</option>\n                        <option value=\"zh-TW\">Chinese - TW</option>\n\n                    </select>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport './index.css'\nimport store from '../../../../store/';\nimport { flip_entered_key} from '../../../../redux/actions'\nimport { Button } from \"@material-ui/core\"\nimport '../Language'\n\n\n// This code only works if the initial state is Off. It's surprisingly way harder\n// to get this to work if you want the inital state of the checkbox to be checked.\n\nexport default function EnterButton(props) {\n    const dispatch = useDispatch()\n    var s = document.getElementById(\"languageOptions\");\n    var t = document.getElementById(\"targetlanguageoptions\");\n    var r = document.getElementById(\"regionOptions\");\n    if (s != null) {\n      store.currentLanguageReducer = s.options[s.selectedIndex].value;\n    } else {\n      store.currentLanguageReducer = 'en-US';\n    }\n\n    if (t != null) {\n      store.targetLanguageReducer = t.options[t.selectedIndex].value;\n    } else {\n      store.targetLanguageReducer = 'en';\n    }\n\n    if (r != null) {\n      store.azureRegionOptionsReducer = r.options[r.selectedIndex].value;\n    } else {\n      store.azureRegionOptionsReducer = 'northcentralus';\n    }\n\n    // flip recording when space bar is pressed\n\n     //const setting = useSelector(props.setting)\n     // useDispatch returns the state modifying function, invoked below.\n\n     return (\n          <div>\n               <div className=\"setting-wrapper\">\n                    <div className = \"setting-wrapper2\">\n                        <Button className=\"enter\"\n                        onClick={() => dispatch(flip_entered_key())} >\n                            <div id = \"entertext\">\n                                Enter\n                            </div>\n                        </Button>\n                    </div>\n               </div>\n          </div>\n     )\n}\n","import React, { useState } from 'react';\nimport onClickOutside from 'react-onclickoutside';\nimport store from '../../../../store/';\nimport './index.css'\n\nexport default function TargetLanguage(props) {\n\n    return (\n        <div className = \"targetLanguageSelect\">\n            <select id=\"targetlanguageoptions\">\n                        <option value=\"ar-\">TESTINGTESTSSS</option>\n                        <option value=\"ca\">Catalan - ES</option>\n                        <option value=\"da\">Danish - DK</option>\n                        <option value=\"da\">Danish - DK</option>\n                        <option value=\"de\">German - DE</option>\n                        <option value=\"en\">English - AU</option>\n                        <option value=\"en\">English - CA</option>\n                        <option value=\"en\">English - GB</option>\n                        <option value=\"en\">English - IN</option>\n                        <option value=\"en\">English - NZ</option>\n                        <option value=\"en\" selected=\"selected\">English - US</option>\n                        <option value=\"es\">Spanish - ES</option>\n                        <option value=\"es\">Spanish - MX</option>\n                        <option value=\"fi\">Finnish - FI</option>\n                        <option value=\"fr\">French - CA</option>\n                        <option value=\"fr\">French - FR</option>\n                        <option value=\"hi\">Hindi - IN</option>\n                        <option value=\"it\">Italian - IT</option>\n                        <option value=\"ja\">Japanese - JP</option>\n                        <option value=\"ko\">Korean - KR</option>\n                        <option value=\"nb\">Norwegian - NO</option>\n                        <option value=\"nl\">Dutch - NL</option>\n                        <option value=\"pl\">Polish - PL</option>\n                        <option value=\"pt\">Portuguese - BR</option>\n                        <option value=\"pt\">Portuguese - PT</option>\n                        <option value=\"ru\">Russian - RU</option>\n                        <option value=\"sv\">Swedish - SE</option>\n                        <option value=\"zh\">Chinese - CN</option>\n                        <option value=\"zh\">Chinese - HK</option>\n                        <option value=\"zh\">Chinese - TW</option>\n                    </select>\n        </div>\n    )\n}\n","import React from 'react'\nimport UserInput from './Key'\nimport Dropdown from './Region'\nimport AzureRecord from './AzureRecord'\nimport EnterButton from './EnterButton'\nimport { Divider } from '@material-ui/core';\nimport {\n     flip_switchMenus,\n     flip_invertColors,\n     flip_micVisual,\n     increment_textSize,\n     decrement_textSize,\n     increment_lineWidth,\n     decrement_lineWidth,\n     increment_numLines,\n     decrement_numLines\n} from '../../../redux/actions'\n\nimport store from '../../../store/';\nimport LanguageOptions from './Language'\nimport TargetLanguage from './TargetLanguage'\n\n\n\nexport default function AzureOptions() {\n    // These are functions that take an object and return an element of the object.\n    // They are passed to useSelector, which feeds the global state object into them.\n    return (\n\n         <div className=\"AzureOptions\" id=\"azure-options-space\">\n                  <h2 style = {{fontFamily:\"Arial\"}}>AZURE LOGIN</h2>\n\n               <div className=\"item-wrapper\">\n                    <UserInput store ={store}/>\n               </div>\n\n               <br></br> <br></br><br></br><br></br>\n               <div>\n                 <div className = \"regionText\">\n                     Region:\n                 </div>\n                 <Dropdown/>\n               </div>\n              <div className=\"item-wrapper\">\n                   <EnterButton />\n              </div>\n              <div>\n                <div className = \"languageText\">\n                    Source Lang:\n                </div>\n                <LanguageOptions/>\n              </div>\n              <div>\n                <div className = \"transLanguageText\">\n                    Translational Lang:\n                </div>\n                <TargetLanguage/>\n              </div>\n\n         </div>\n    );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport { green } from '@material-ui/core/colors';\nimport Options from \"../AzureTopSpace/AzureOptions\"\n\nconst drawerWidth = '22vw';//drawer width\nconst useStyles = makeStyles({\n  list: {\n    width: drawerWidth,\n  },\n  fullList: {\n    width: 'auto',\n  },\n});\n\nexport default function SwipeableTemporaryDrawer() {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    left: false,\n  });\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state, [anchor]: open });\n  };\n\n  const list = (anchor) => (\n    <div\n      className={clsx(classes.list, {\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\n      })}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, true)}\n    >\n      <List>\n        {/* {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))} */}\n        <Options />\n\n      </List>\n      <Divider />\n      <List>\n        {/* {['All mail', 'Trash', 'Spam'].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))} */}\n      </List>\n    </div>\n  );\n  return (\n    <div>\n      {['Try Out Azure'].map((anchor) => (\n        <React.Fragment key={anchor}>\n          <Button onClick={toggleDrawer(anchor, true)} color = \"primary\">{anchor}</Button>\n          <SwipeableDrawer\n            anchor={anchor}\n            open={state[anchor]}\n            onClose={toggleDrawer(anchor, false)}\n            onOpen={toggleDrawer(anchor, true)}\n          >\n            {list(anchor)}\n          </SwipeableDrawer>\n        </React.Fragment>\n      ))}\n    </div>\n  );\n}\n","import React from 'react'\nimport './index.css'\nimport Options from './AzureOptions'\nimport SwipeableTemporaryDrawer from '../../components/AzureDrawer'\n\n\n// JavaScript functions used: setTimeout, clearTimeout, bind, getElementById,\n// addEventListener, removeEventListener\n// React functions used: constructor, setState, componentDidMount, render\nclass AzureTopSpace extends React.Component {\n     // // When options are shown:\n     //      // Clicking in the optionsSpace triggers show() then resetTimeout().\n     //      // Clicking in the hideSpace triggers hide().\n     // // When options are not shown:\n     //      // Clicking anywhere in the outer div triggers show().\n     // // Event listeners enforce these rules in outer and optionsSpace elements.\n     // // hideSpace uses a simple onClick, which only works when the element is shown.\n     //\n     // constructor(props) {\n     //      super(props)\n     //      this.state = {\n     //           shown: true, // Whether the options area is shown. Used in JSX.\n     //           // Set 15 second timeout and when it expires, run this.hide.\n     //           // Immediately store the returned id for later use.\n     //           timeoutId: setTimeout(this.hide.bind(this), 15000)\n     //      }\n     //      // Bind functions so we can use the keyword 'this' inside them.\n     //      this.hide = this.hide.bind(this)\n     //      this.show = this.show.bind(this)\n     //      this.resetTimeout = this.resetTimeout.bind(this)\n     // }\n     //\n     // hide() { // Hide the options area from view.\n     //      this.setState({ shown: false })\n     //      document.getElementById('outer').addEventListener('click', this.show)\n     // }\n     //\n     // show() { // Show the options area. If already shown, just reset timeout.\n     //      this.setState({ shown: true })\n     //      document.getElementById('outer').removeEventListener('click', this.show)\n     //      this.resetTimeout()\n     // }\n     //\n     // resetTimeout() { // Reset the 15 second timer for hiding the options.\n     //      clearTimeout(this.state.timeoutId) // Cancel the timeout set earlier.\n     //      var toId = setTimeout(this.hide, 15000) // Set a new 15 second timeout.\n     //      this.setState({timeoutId: toId}) // Store the id of the new timeout.\n     // }\n     // // The first time the component mounts, add an event listener to the options\n     // // space, so whenever it's clicked, it shows.\n     // componentDidMount() {\n     //      document.getElementById('optionsSpace').addEventListener('click', this.show)\n     // }\n\n     render() {\n          var h = '32vh'; // I don't remember why I set the height like this.\n          // The Options component takes a function as a prop.\n          return (\n               <div className=\"AzureTopSpace\" id=\"outer\" style={{ height: h }}>\n                     <div >\n                    <div className=\"item-wrapper\">\n                        <SwipeableTemporaryDrawer color = \"secondary\"/>\n                    </div>\n                    </div>\n               </div>\n          )\n     }\n}\n\nexport default AzureTopSpace;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport { green } from '@material-ui/core/colors';\nimport Options from \"../TopSpace/Options\"\n\nconst useStyles = makeStyles({\n  list: {\n    width: '20vw',\n  },\n  fullList: {\n    width: 'auto',\n  },\n});\n\nexport default function SwipeableTemporaryDrawer() {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    left: false,\n  });\n\n  const toggleDrawer = (anchor, open) => (event) => {\n\n\n    setState({ ...state, [anchor]: open });\n  };\n\n  const list = (anchor) => (\n    <div\n      className={clsx(classes.list, {\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\n      })}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor,true)}\n    >\n      <List>\n        {/* {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))} */}\n        <Options />\n\n      </List>\n      <Divider />\n      <List>\n        {/* {['All mail', 'Trash', 'Spam'].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))} */}\n      </List>\n    </div>\n  );\n\n  return (\n    <div>\n      {['left'].map((anchor) => (\n        <React.Fragment key={anchor}>\n          <Button onClick={toggleDrawer(anchor, true)} color = \"inherit\">{anchor}</Button>\n          <SwipeableDrawer\n            anchor={anchor}\n            open={state[anchor]}\n            onClose={toggleDrawer(anchor, false)}\n            onOpen={toggleDrawer(anchor, true)}\n          >\n            {list(anchor)}\n          </SwipeableDrawer>\n        </React.Fragment>\n      ))}\n    </div>\n  );\n}\n","import React,{ useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { flip_menuhide } from '../../../redux/actions'\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport LockIcon from '@material-ui/icons/Lock';\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\nexport default function MenuHider(props){\n    const meh = (state) => state.meh;\n    const setting = useSelector(meh);\n    const dispatch = useDispatch();\n    // useEffect(() => {\n    //     const timer = setTimeout(() => {\n    //         dispatch(flip_menuhide())\n    //     }, 10000);\n    //     return () => clearTimeout(timer);\n    // }, []);\n\n    function handleAgain(){\n        dispatch(flip_menuhide())\n        // const timerr = setTimeout(() => {\n        //     dispatch(flip_menuhide())\n        // }, 10000);\n        // return () => clearTimeout(timerr)\n    }\n\n    if (setting == 0){\n        return (\n            <div>\n                <IconButton className = \"c2\" color = \"inherit\" onClick = {()=>dispatch(flip_menuhide())}>\n                    <LockIcon className = 'c3' />\n                </IconButton>\n            </div>\n        )\n    }else{\n        return (\n            <div>\n                <IconButton className = \"c2\" color = \"inherit\" onClick = {()=>handleAgain()}>\n                    <LockOpenIcon className = 'c3' />\n                </IconButton>\n            </div>\n        )\n    }\n\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport {useSelector,useDispatch} from 'react-redux';\nimport { submenu1,submenu2 } from '../../redux/actions';\n\n\n\n\n\nexport default function SimpleMenu(props) {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const textContent = props.text;\n  const titleContent = props.title;\n\n  const submenu = (state) => state.submenu;\n  const dispatch = useDispatch();\n  const setting = useSelector(submenu);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div>\n      <IconButton  onClick={handleClick}>\n        <MenuIcon />\n      </IconButton>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <MenuItem onClick={() => dispatch(submenu1())}>Webspeech</MenuItem>\n        <MenuItem onClick={() => dispatch(submenu2())}>Azure</MenuItem>\n        {/* <MenuItem>{setting}</MenuItem> */}\n        <MenuItem onClick={handleClose}>return</MenuItem>\n      </Menu>\n    </div>\n  );\n}\n","import React from 'react'\r\nimport './index.css'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport {Button} from \"@material-ui/core\"\r\nimport PopMenu from '../../../PopMenu'\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\n\r\nexport default function PlusMinus(props) {\r\n     const setting = useSelector(props.setting) // Get current value of the setting.\r\n     // useDispatch returns the state modifying function, invoked below.\r\n     const dispatch = useDispatch()\r\n     const textC = props.item + ':' + setting\r\n     return (\r\n          <div>\r\n               {textC}\r\n               <div className = \"setting_wrapper\">\r\n                    <Button className = \"minus\" color = \"inherit\" variant = \"outlined\" size = \"small\"\r\n                      onClick={() => dispatch(props.decrement())}>-</Button>\r\n                    <Button  className = \"plus\" color = \"inherit\" variant = \"outlined\" size = \"small\"\r\n                      onClick={() => dispatch(props.increment())}>+</Button>\r\n              </div>\r\n          </div>\r\n     );\r\n}\r\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport {Button} from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    outline: 'none'\n  },\n}));\n\nexport default function TransitionsModal() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button color = 'inherit' variant = 'outlined' onClick={handleOpen}>\n        Instructions\n      </Button>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n        \n      >\n        <Fade in={open}>\n          <div className={classes.paper}>\n            <h2 id=\"transition-modal-title\">Tutorial</h2>\n            <p id=\"transition-modal-description\">\n                    -The text size button can be used to change size of \n                    text shown in caption space.<br />\n                    -There are 3 different graph can be toggled to help\n                    reflex the surrounding voices by clicking forth button<br />\n                    -For circular graph, try to drag it around.<br />\n                    -To stop captioning just click switch button for Recording. Also \n                    click again to resume captioning.<br />\n                    -To memorize textsize option, click save after choosing a proper size of the text.\n            </p>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  );\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport './index.css'\nimport {forward_stereoVisual, backward_stereoVisual} from '../../../../redux/actions'\nimport {Button, IconButton} from \"@material-ui/core\"\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\n\n\n// This code only works if the initial state is Off. It's surprisingly way harder\n// to get this to work if you want the inital state of the checkbox to be checked.\n\nexport default function Stereovisual(props) {\n\n    const mic = (state) => state.steromic\n    const setting = useSelector(mic) // Get current value of recording.\n    // useDispatch returns the state modifying function, invoked below.\n    const dispatch = useDispatch()\n    let result = \"\"\n    let text = \"\"\n\n    // flip recording when space bar is pressed\n\n     //const setting = useSelector(props.setting)\n     // useDispatch returns the state modifying function, invoked below.\n\n     if (setting == 0){\n         result = \"No Visualization\"\n         text = \"None\"\n     }else if (setting == 1){\n         result = \"Circular Visualization\"\n         text = \"Circular\"\n     }else if (setting == 2){\n         result = \"Rectangular Visualization\"\n         text = \"Rectangular\"\n     }else{\n         result = \"Spectrum Visualization\"\n         text = \"Spectrum\"\n     }\n\n     return (\n         <div className=\"stereo_result\">\n             STEREO\n             <div className=\"stereo_visual\">\n                 <IconButton color = 'inherit' onClick = {()=>(dispatch(backward_stereoVisual()))}>\n                     <ArrowBackIosIcon />\n                 </IconButton>\n                 {text}\n                 <IconButton color = 'inherit' onClick = {()=>(dispatch(forward_stereoVisual()))}>\n                     <ArrowForwardIosIcon />\n                 </IconButton>\n             </div>\n        </div>\n          // <div>\n          //     {result}\n          //      <div className=\"stereo_visual\">\n          //           <Button className=\"stereo_plus\" color = \"inherit\"  variant = \"outlined\" size = \"large\"\n          //                onClick={() => dispatch(flip_stereoVisual())} >{text}\n          //           </Button>\n          //\n          //\n          //      </div>\n          // </div>\n     )\n}","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport './index.css'\nimport {flip_stereo} from '../../../../redux/actions'\nimport { Button } from \"@material-ui/core\"\n\n\n// This code only works if the initial state is Off. It's surprisingly way harder\n// to get this to work if you want the inital state of the checkbox to be checked.\n\nexport default function VisualControl(props) {\n\n    const vis = (state) => state.stereo\n    const setting = useSelector(vis) // Get current value of recording.\n    // useDispatch returns the state modifying function, invoked below.\n    const dispatch = useDispatch()\n    let result = \"\"\n    let text = \"\"\n\n    // flip recording when space bar is pressed\n\n     //const setting = useSelector(props.setting)\n     // useDispatch returns the state modifying function, invoked below.\n\n     if (setting == 0){\n         result = \"Mono Visualization\"\n         text = \"Mono\"\n     }else{\n         result = \"Stereo Visualization\"\n         text = \"Stereo\"\n     }\n\n     return (\n          <div className=\"control_result\">\n              {result}\n               <div className=\"control_visual\">\n                    <Button className=\"control_plus\" color = \"inherit\"  variant = \"outlined\" size = \"large\"\n                         onClick={() => dispatch(flip_stereo())} >{text}\n                    </Button>\n\n\n               </div>\n          </div>\n     )\n}","import React from 'react'\r\nimport OnOff from './OnOff'\r\nimport Record from './Record'\r\nimport store from '../../../store'\r\nimport Micvisual from './Micvisual'\r\nimport Save from './Save'\r\nimport {useSelector} from \"react-redux\"\r\nimport Instru from \"./Instru\"\r\nimport Divider from '@material-ui/core/Divider';\r\nimport AzureTopSpace from '../../AzureTopSpace'\r\nimport './index.css'\r\nimport SwipeableTemporaryDrawer from \"../../Drawer\"\r\nimport MenuHider from '../../PlaceHolder/MenuHider'\r\nimport PlusMinus from './PlusMinus'\r\nimport {Button} from '@material-ui/core';\r\nimport SpringModal from './SpringModal'\r\nimport SwitchAPI from './SwitchAPI'\r\nimport PopMenu from '../../PopMenu'\r\nimport Stereovisual  from'./Stereo'\r\nimport VisualControl from './VisualControl'\r\n\r\nimport {\r\n     flip_switchMenus,\r\n     flip_invertColors,\r\n     increment_textSize,\r\n     decrement_textSize,\r\n} from '../../../redux/actions'\r\n\r\nexport default function Options() {\r\n     // These are functions that take an object and return an element of the object.\r\n     // They are passed to useSelector, which feeds the global state object into them.\r\n     const textSize = (state) => state.textSize\r\n     const lineWidth = (state) => state.lineWidth\r\n     const numLines = (state) => state.numLines\r\n     const invertColors = (state) => state.invertColors\r\n     const switchMenus = (state) => state.switchMenus\r\n     const ins = (state) => state.ins\r\n     const if_ins = useSelector((state) => state.ins)\r\n     var choice = if_ins ? 'appear' : 'disappear';\r\n\r\n     // if (store.isSuccessReducer == 'success') {\r\n     //   return (\r\n     //        <div className=\"Options\" id=\"options-space\">\r\n     //            <h2 style = {{fontFamily:\"Arial\"}}>OPTIONS</h2>\r\n     //            <h3>Caption</h3>\r\n     //            <Divider/>\r\n     //            <div className=\"item-wrapper\">\r\n     //                  <Record />\r\n     //             </div>\r\n     //            <div className=\"item-wrapper\">\r\n     //                <Save />\r\n     //             </div>\r\n     //             <div className=\"item-wrapper\">\r\n     //                  <PlusMinus item=\"Text size\" setting={textSize}\r\n     //                       increment={increment_textSize}\r\n     //                       decrement={decrement_textSize} />\r\n     //             </div>\r\n     //\r\n     //             <div className=\"item-wrapper\">\r\n     //                  <OnOff item=\"Invert colors\" setting={invertColors}\r\n     //                       action={flip_invertColors} />\r\n     //             </div>\r\n     //            <Divider/>\r\n     //            <div className=\"item-wrapper\">\r\n     //              <VisualControl />\r\n     //          </div>\r\n     //             <div className=\"item-wrapper\">\r\n     //                  <Micvisual />\r\n     //             </div>\r\n     //            <div className=\"item-wrapper\">\r\n     //              <Stereovisual/>\r\n     //          </div>\r\n     //\r\n     //                 <div className = 'item-wrapper'>\r\n     //                      <SpringModal />\r\n     //                </div>\r\n     //                <div className=\"item-wrapper\">\r\n     //                     <SwitchAPI />\r\n     //                </div>\r\n     //             <Divider />\r\n     //        </div>\r\n     //   );\r\n     // } else {\r\n     return (\r\n          <div className=\"Options\" id=\"options-space\">\r\n          <h2 style = {{fontFamily:\"Arial\"}}>OPTIONS</h2>\r\n              <h3>Caption</h3>\r\n          <Divider/>\r\n          <div className=\"item-wrapper\">\r\n                    <Record />\r\n               </div>\r\n               <div className=\"item-wrapper\">\r\n                      <Save />\r\n               </div>\r\n              <h3>Display</h3>\r\n              <Divider/>\r\n               <div className=\"item-wrapper\">\r\n                    <PlusMinus item=\"Text size\" setting={textSize}\r\n                         increment={increment_textSize}\r\n                         decrement={decrement_textSize} />\r\n               </div>\r\n               <div className=\"item-wrapper\">\r\n                    <OnOff item=\"Invert colors\" setting={invertColors}\r\n                         action={flip_invertColors} />\r\n               </div>\r\n              <h3>Audio Visulization</h3>\r\n              <Divider/>\r\n               <div className=\"item-wrapper\">\r\n                  <VisualControl />\r\n              </div>\r\n               <div className=\"item-wrapper\">\r\n                    <Micvisual />\r\n               </div>\r\n              <div className=\"item-wrapper\">\r\n                  <Stereovisual/>\r\n              </div>\r\n\r\n               <div className = 'item-wrapper'>\r\n                    <SpringModal />\r\n               </div>\r\n               {/*<div className=\"item-wrapper\">*/}\r\n               {/*     <AzureTopSpace button=\"Switch To Azure\" setting={switchMenus}*/}\r\n               {/*          action={flip_switchMenus} />*/}\r\n               {/*</div>*/}\r\n          </div>\r\n     );\r\n//}\r\n}\r\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport grey from '@material-ui/core/colors/grey';\nimport blue from '@material-ui/core/colors/blue';\nimport orange from '@material-ui/core/colors/orange';\n\n\nconst mytheme = createMuiTheme({\n  palette: {\n    primary: {\n        main:blue[900]\n    },\n    secondary: {\n        main:orange[800]\n    },\n  },\n  status: {\n    danger: 'orange',\n  },\n});\n\nexport default mytheme;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Options from '../TopSpace/Options'\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default function ButtomNavi() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <TabPanel value={value} index={0}>\n        <Options />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        ...\n      </TabPanel>\n      {/* <TabPanel value={value} index={2}>\n        ...\n      </TabPanel> */}\n      <div style = {{position:'absolute', top:'93vh'}}>\n      <AppBar position=\"static\">\n        <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\n          <Tab label=\"Item One\" {...a11yProps(0)} />\n          <Tab label=\"Item Two\" {...a11yProps(1)} />\n          {/* <Tab label=\"Item Three\" {...a11yProps(2)} /> */}\n        </Tabs>\n      </AppBar>\n      </div>\n    </div>\n  );\n}\n","import * as React from 'react';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport {\n    Collapse,\n    Container,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink,\n    UncontrolledDropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem } from 'reactstrap';\nimport { Button } from \"@material-ui/core\"\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\n\n\n\n\nfunction UserAvatar(props) {\n    // If a user avatar is available, return an img tag with the pic\n    if (props.user.avatar) {\n        return <img\n                src={props.user.avatar} alt=\"user\"\n                className=\"rounded-circle align-self-center mr-2\"\n                style={{width: '32px'}}></img>;\n    }\n\n    // No avatar available, return a default icon\n    return <i\n            className=\"far fa-user-circle fa-lg rounded-circle align-self-center mr-2\"\n            style={{width: '32px'}}></i>;\n    }\n\n\n\nexport function AuthNavItem(props) {\n    if (props.isAuthenticated) {\n        return (\n            <Button aria-controls=\"simple-menu\"\n        aria-haspopup=\"true\" variant=\"contained\"\n        variant=\"text\" color=\"inherit\"\n        onClick={props.authButtonMethod}\n        startIcon={<EmojiEmotionsIcon/>}>Log Out\n        </Button>\n\n        //   <UncontrolledDropdown>\n        //     <DropdownToggle nav caret>\n        //         {/* <UserAvatar user={props.user}/> */}\n        //     </DropdownToggle>\n        //     <DropdownMenu right>\n        //       <h5 className=\"dropdown-item-text mb-0\">{props.user.displayName}</h5>\n        //       <p className=\"dropdown-item-text text-muted mb-0\">{props.user.email}</p>\n        //       <DropdownItem divider />\n        //       <DropdownItem onClick={props.authButtonMethod}>Sign Out</DropdownItem>\n        //     </DropdownMenu>\n        //   </UncontrolledDropdown>\n        );\n      }\n\n      // Not authenticated, return a sign in link\n      return (\n        // <NavItem>\n\n\n\n        <Button aria-controls=\"simple-menu\"\n        aria-haspopup=\"true\" variant=\"contained\"\n        variant=\"text\" color=\"inherit\"\n        onClick={props.authButtonMethod}\n        startIcon={<AccountCircleIcon/>}>Sign In\n        </Button>\n\n        // </NavItem>\n      );\n};\n\nexport default AuthNavItem;\n","var graph = require('@microsoft/microsoft-graph-client');\n\n\nexport function getAuthenticatedClient(accessToken) {\n  // Initialize Graph client\n  const client = graph.Client.init({\n    // Use the provided access token to authenticate\n    // requests\n    authProvider: (done) => {\n      done(null, accessToken.accessToken);\n    }\n  });\n\n  return client;\n}\n\nexport async function getUserDetails(accessToken) {\n  const client = getAuthenticatedClient(accessToken);\n\n  const user = await client.api('/me').get();\n  return user;\n}\n\n\nexport async function upload123(accessToken, blob) {\n\n\n    var date = new Date().getDate(); //Current Date\n    var month = new Date().getMonth() + 1; //Current Month\n    var year = new Date().getFullYear(); //Current Year\n    const client = getAuthenticatedClient(accessToken);\n    \n    var date = month + '-' + date + '-' + year\n    var full_name = 'Transcript History_' + date + '.txt';\n    const upload =  await client.api('/me/drive/root:/' + full_name + ':/content')\n    .put(blob);\n    \n    return upload;\n}\n\nexport async function getFolders(accessToken) {\n\n  const client = getAuthenticatedClient(accessToken);\n  const folders = await client.api('/me/drive/root/children').get();\n  return folders;\n}\n ","import React from 'react';\nimport {\n  Button,\n  Jumbotron } from 'reactstrap';\n\n\n\nfunction WelcomeContent(props) {\n  // If authenticated, greet the user\n  if (props.isAuthenticated) {\n    return (\n      <div>\n        <h4> Hello {props.user.email}!</h4>\n      </div>\n    );\n  }\n\n  // Not authenticated, present a sign in button\n  return null;\n}\n\nexport default class Welcome extends React.Component{\n  render() {\n    return (\n      <Jumbotron>\n        <WelcomeContent\n          isAuthenticated={this.props.isAuthenticated}\n          user={this.props.user}/>\n      </Jumbotron>\n    );\n  }\n}","import React, { Component } from 'react'\nimport AuthNavItem from './AuthNavItem';\nimport config from './Config';\nimport { UserAgentApplication } from 'msal';\nimport {getUserDetails, getFolders} from './graphService';\nimport Welcome from './Welcome';\nimport { Button } from 'reactstrap';\n\n\nexport default class LogIn extends Component {\n    constructor(props) {\n        super(props);\n\n\n        this.userAgentApplication = new UserAgentApplication({\n            auth: {\n                clientId: config.appId,\n                redirectUri: config.redirectUri,\n            },\n            cache: {\n                cacheLocation: 'localStorage',\n                storeAuthStateInCookie: true\n            }\n        });\n\n\n\n        var user = this.userAgentApplication.getAccount();\n\n\n        this.state = {\n            isAuthenticated : (user !== null),\n            user : {},\n            error: null,\n            items: []\n        }\n        this.normalizeError = this.normalizeError.bind(this)\n\n        if (user) {\n            this.getUserProfile();\n        }\n    }\n\n    normalizeError(error) {\n      var normalizedError = {};\n      if (typeof(error) === 'string') {\n        var errParts = error.split('|');\n        normalizedError = errParts.length > 1 ?\n          { message: errParts[1], debug: errParts[0] } :\n          { message: error };\n      } else {\n        normalizedError = {\n          message: error.message,\n          debug: JSON.stringify(error)\n        };\n      }\n      return normalizedError;\n    }\n\n    async login() {\n        try {\n          // Login via popup\n          await this.userAgentApplication.loginPopup(\n              {\n                scopes: config.scopes,\n                prompt: \"select_account\"\n            });\n          // After login, get the user's profile\n          await this.getUserProfile();\n        }\n        catch(err) {\n          this.setState({\n            isAuthenticated: false,\n            user: {},\n            error: this.normalizeError(err)\n          });\n        }\n      }\n\n\n      logout() {\n        this.userAgentApplication.logout();\n      }\n\n\n      async getUserProfile() {\n        try {\n          var accessToken = await this.userAgentApplication.acquireTokenSilent({\n              scopes: config.scopes\n          });\n  \n          if (accessToken) {\n              var user = await getUserDetails(accessToken);\n            // TEMPORARY: Display the token in the error flash\n            this.setState({\n              isAuthenticated: true,\n              user: {\n                  displayName: user.displayName,\n                  email: user.email || user.userPrincipalName\n              },\n              error: null\n            });\n          }\n        }\n        catch(err) {\n          this.setState({\n            isAuthenticated: false,\n            user: {},\n            error: this.normalizeError(err)\n          });\n        }\n      }\n\n\n      async getFoldersCatch() {\n        try {\n          var accessToken = await window.msal.acquireTokenSilent({\n              scopes: config.scopes\n          });\n  \n          if (accessToken) {\n              var folders = await getFolders(accessToken);\n            // TEMPORARY: Display the token in the error flash\n          }\n        }\n        catch(err) {\n          console.log(err)\n        }\n      }\n    render() {\n        return (\n            <AuthNavItem\n                  isAuthenticated={this.state.isAuthenticated}\n                  user = {this.state.user}\n                  authButtonMethod = {this.state.isAuthenticated ? this.logout.bind(this) : this.login.bind(this)}\n            />\n        )\n    }\n}","import React from 'react'\r\nimport store from '../../../store/';\r\n\r\nimport $ from 'jquery';\r\nimport ScrollButton from 'react-scroll-button'\r\nimport ScrollToBottom from 'react-scroll-to-bottom';\r\n\r\n\r\nconst SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition\r\nconst recognition = new SpeechRecognition()\r\n\r\nrecognition.lang = 'en-US'\r\nrecognition.continuous = false\r\nrecognition.interimResults = true\r\n\r\n// In this document, a 'line' is more like a sentence.\r\n// this.state.line is like a buffer of text held at the end of the page. When the line\r\n// is finished, the buffer is flushed: a new div is appended to the 'out' div and\r\n// this.state.line is reset for the next line.\r\n\r\n\r\n\r\n\r\nexport class Recognition extends React.PureComponent {\r\n     constructor() {\r\n          super()\r\n          this.state = {\r\n               line: '',\r\n               targetID: 'curr'\r\n               //recording: true\r\n          }\r\n          this.appendLine = this.appendLine.bind(this)\r\n          this.start = this.start.bind(this)\r\n          this.stop = this.stop.bind(this)\r\n     }\r\n\r\n     componentDidMount() {\r\n        if (store.desiredAPI == 'azure') {\r\n          this.stop()\r\n        }  else {\r\n          this.start()\r\n        }\r\n     }\r\n\r\n     // Global state 'recording' is passed as a prop. componentDidUpdate is invoked\r\n     // when props change, therefore also when 'recording' changes.\r\n     componentDidUpdate(prevProps, prevState) {\r\n          if (prevProps.isRecording === this.props.isRecording)\r\n               return\r\n          if (this.props.isRecording)\r\n               this.start()\r\n          else {\r\n              this.stop()\r\n          }\r\n     }\r\n\r\n     start() {\r\n          recognition.start()\r\n          // Map the complex recognition result object to a string. You can explore\r\n          // the full object with console.log(e).\r\n          recognition.onresult = (e) => {\r\n               let words = Array.from(e.results)\r\n                 .map(result => result[0])\r\n                 .map(result => result.transcript)\r\n                 .join('');\r\n               words = words.charAt(0).toUpperCase() + words.slice(1)\r\n               if (e.results[0].isFinal) // if line is final\r\n                    this.appendLine(words + '.') // flush buffer\r\n               else this.updateCurrentLine(words) // update state\r\n          }\r\n          // By default, recognition stops when it gets a final result.\r\n          recognition.onend = recognition.start // override this behavior\r\n     }\r\n\r\n     downloadTxtFile = () => {\r\n       const element = document.createElement(\"a\");\r\n       var results = [];\r\n       results.push(\"transcript History \\n\\n\\n\\n\");\r\n       var searchEles = document.getElementById(\"out\").children;\r\n       console.log(searchEles);\r\n\r\n       for(var i = 0; i < searchEles.length; i++) {\r\n         console.log(searchEles[i].innerHTML[1,searchEles[i].innerHTML.length-2]);\r\n         results.push(searchEles[i].innerHTML + '\\n');\r\n       }\r\n\r\n       // const file = new Blob([document.getElementById('out').value],\r\n       //             {type: 'text/plain;charset=utf-8'});\r\n       const file = new Blob([results],\r\n                   {type: 'text/plain;charset=utf-8'});\r\n       element.href = URL.createObjectURL(file);\r\n       element.download = \"Script.txt\";\r\n       document.body.appendChild(element);\r\n       element.click();\r\n     }\r\n\r\n     stop() {\r\n          recognition.onresult = () => {} // do nothing with results\r\n          recognition.onend = () => {} // don't restart when ending\r\n          recognition.stop()\r\n     }\r\n\r\n     updateCurrentLine(str) {\r\n          const capts = document.getElementById('captionsSpace')\r\n          var isScrolledToBottom = capts.scrollHeight - capts.clientHeight <= capts.scrollTop + 1\r\n          this.setState({ line: str })\r\n          if (isScrolledToBottom)\r\n               capts.scrollTop = capts.scrollHeight - capts.clientHeight\r\n     }\r\n\r\n     appendLine(str) {\r\n          const capts = document.getElementById('captionsSpace')\r\n          const out = document.getElementById('out')\r\n          var isScrolledToBottom = capts.scrollHeight - capts.clientHeight <= capts.scrollTop + 1\r\n          var div = document.createElement('div') // create new div\r\n          div.textContent = str // set new div's text to the updated current line\r\n          out.appendChild(div) // add the new div to the document inside 'out' element\r\n          this.setState({ line: '' }) // reset line\r\n          if (isScrolledToBottom)\r\n               capts.scrollTop = capts.scrollHeight - capts.clientHeight // scroll to bottom\r\n     }\r\n\r\n     scrollBottom() {\r\n       var element = document.getElementById(\"curr\");\r\n       element.scrollIntoView({behavior: \"smooth\"});\r\n     }\r\n\r\n     render() {\r\n          // out holds all past lines. curr holds the current line.\r\n          return (\r\n               <div>\r\n                    <div contenteditable = \"true\" id='out'></div>\r\n                    <div id='curr'>{this.state.line}</div>\r\n               </div>\r\n          )\r\n     }\r\n}\r\n\r\nexport default Recognition\r\n","import React from 'react'\nimport { isPureish } from '@babel/types';\nimport * as SpeechSDK from 'microsoft-cognitiveservices-speech-sdk'\nimport AzureKey from '../../AzureTopSpace/AzureOptions/Key';\nimport store from '../../../store/';\nimport swal from 'sweetalert';\n\nimport $ from 'jquery';\nimport ScrollButton from 'react-scroll-button'\nimport ScrollToBottom from 'react-scroll-to-bottom';\n\nimport {useSelector, connect} from 'react-redux'\nimport {bindActionCreators} from \"redux\"\nvar key = 'empty';\nvar regionOption = 'northcentralus';\nvar tempKey = 'empty';\nvar lang = 'en-US';\nvar targetLang = 'en';\nvar speechConfig = null;\nconst audioConfig = SpeechSDK.AudioConfig.fromDefaultMicrophoneInput();\nvar reco = null;\nexport class AzureRecognition extends React.PureComponent {\n    constructor() {\n        super()\n        this.state = {\n           line: '',\n           targetID: 'azureCurr',\n        }\n        this.appendLine = this.appendLine.bind(this)\n        this.start = this.start.bind(this)\n        this.stop = this.stop.bind(this)\n    }\n\n    componentDidMount() {\n        if (store.desiredAPI == 'webspeech') {\n          this.stop();\n        } else {\n          this.start();\n        }\n    }\n    scrollBottom() {\n      var element = document.getElementById(\"azureCurr\");\n      element.scrollIntoView({behavior: \"smooth\"});\n    }\n\n    downloadTxtFile = () => {\n      const element = document.createElement(\"a\");\n      var results = [];\n      results.push(\"transcript History \\n\\n\\n\\n\");\n      var searchEles = document.getElementById(\"out\");\n      results.push(searchEles.innerHTML);\n      const file = new Blob([results], {type: 'text/plain;charset=utf-8'});\n      element.href = URL.createObjectURL(file);\n      element.download = \"Script.txt\";\n      document.body.appendChild(element);\n      element.click();\n    }\n\n\n    appendLine(str) {\n     const capts = document.getElementById('captionsSpace')\n     const out = document.getElementById('out')\n     var isScrolledToBottom = capts.scrollHeight - capts.clientHeight <= capts.scrollTop + 1\n     var div = document.createElement('div') // create new div\n     div.textContent = str // set new div's text to the updated current line\n     out.appendChild(div) // add the new div to the document inside 'out' element\n     this.setState({ line: '' }) // reset line\n     if (isScrolledToBottom)\n          capts.scrollTop = capts.scrollHeight - capts.clientHeight // scroll to bottom\n}\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.isRecording === this.props.isRecording)\n             return\n        if (this.props.isRecording)\n             this.start()\n        else this.stop()\n   }\n    start() {\n        if (store.isSuccessReducer != 'success') {\n          store.isSuccessReducer = 'inProgress';\n        }\n        if (store.azureKeyReducer == undefined || store.azureRegionOptionsReducer == undefined || store.azureKeyReducer == '' || store.azureRegionOptionsReducer == '') {\n          store.azureKeyReducer = 'empty'\n          store.azureRegionOptionsReducer = 'empty'\n        } else {\n          key = store.azureKeyReducer;\n          regionOption = store.azureRegionOptionsReducer;\n        }\n          speechConfig = SpeechSDK.SpeechTranslationConfig.fromSubscription(key, regionOption);\n          lang = store.currentLanguageReducer;\n          targetLang = store.targetLanguageReducer;\n          speechConfig.speechRecognitionLanguage = lang;\n          speechConfig.addTargetLanguage(targetLang);\n          //allow all profanity (raw);\n          speechConfig.setProfanity(2);\n\n          reco = new SpeechSDK.TranslationRecognizer(speechConfig, audioConfig);\n\n        var out = document.getElementById('out');\n        var lastRecognized = out.innerHTML;\n        reco.sessionStarted = function(s,e) {\n          if (store.isSuccessReducer != 'success') {\n          store.isSuccessReducer = 'success';\n          swal({\n            title: \"Success!\",\n            text: \"Connected to Azure Speech Recognition!\",\n            icon: \"success\",\n            timer: 2000,\n          })\n        }\n      }\n\n        reco.recognizing = function(s, e) {\n            var language = targetLang;\n            out.innerHTML = lastRecognized + e.result.translations.get(language);\n            const capts = document.getElementById('captionsSpace')\n            capts.scrollTop = capts.scrollHeight - capts.clientHeight // scroll to bottom\n        }\n\n        reco.recognized = function (s,e) {\n            window.console.log(e);\n            var language = targetLang;\n            lastRecognized += e.result.translations.get(language) + \"\\r\\n\";\n            out.innerHTML = lastRecognized;\n        }\n        reco.canceled = function (s, e) {\n          store.isSuccessReducer = 'failure'\n          store.azureRegionOptionsReducer = 'incorrect'\n          store.azureKeyReducer = 'incorrect'\n          swal({\n              title: \"Warning!\",\n              text: \"Wrong key or region!\",\n              icon: \"warning\",\n            })\n            this.stop()\n        };\n        reco.startContinuousRecognitionAsync();\n    }\n    stop() {\n        reco.stopContinuousRecognitionAsync(\n            function() {\n                reco.close();\n                reco = undefined;\n            },\n            function (err) {\n                reco.close();\n                reco = undefined;\n            }\n        );\n    }\n    render() {\n        return (\n             <div>\n                  <div contenteditable = \"true\" id='out'></div>\n                    <div id='azureCurr'>{this.props.key}</div>\n             </div>\n        )\n   }\n}\nexport default AzureRecognition\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport Options from \"../TopSpace/Options\";\nimport {ThemeProvider} from \"@material-ui/core/styles\";\nimport mytheme from './theme'\nimport blue from \"@material-ui/core/colors/blue\"\nimport orange from \"@material-ui/core/colors/orange\"\nimport ButtomNavi from '../ButtomNavi'\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport {useSelector,useDispatch} from 'react-redux';\nimport ShareIcon from '@material-ui/icons/Share';\nimport {EmailShareButton} from 'react-share';\nimport {EmailIcon} from \"react-share\";\nimport Fade from '@material-ui/core/Fade';\nimport SaveIcon from '@material-ui/icons/SaveSharp';\nimport LogIn from \"../LogIn/LogIn\";\nimport MailIcon from '@material-ui/icons/Mail';\nimport PopMenu from '../PopMenu'\nimport store from '../../store'\nimport { Button, Tooltip } from \"@material-ui/core\"\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\nimport Recognition from \"../Captions/Recognition\"\nimport AzureRecognition from \"../AzureCaptions/AzureRecognition\"\nimport AzureOption from '../AzureTopSpace/AzureOptions'\nimport MenuSwitch from '../PopMenu/MenuSwitch'\nimport MenuHider from '../PlaceHolder/MenuHider'\nimport './index.css'\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\n\n\n\nconst drawerWidth = '21vw';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  show: {\n    display: 'block',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaperO: {\n    width: drawerWidth,\n    background: orange[800],\n  },\n  drawerPaperB: {\n    width: drawerWidth,\n    background: blue[800],\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n}));\n\nexport default function PersistentDrawerLeft(props) {\n  const submenu = (state) => state.submenu;\n  const menuhide = (state) => state.meh;\n  const dispatch = useDispatch();\n  const setting = useSelector(submenu);\n  const shouldShow = useSelector(menuhide);\n\n  var hiddenText = ''\n  var pick = \"detail_wrap\"\n  if (shouldShow == 0){\n    pick += '.active'\n    hiddenText = 'visible'\n  }else{\n    pick = 'detail_wrap'\n    hiddenText = 'auto-hide'\n  }\n\n  var hiddenTextDownload = 'Download Text'\n\n\n  const classes = useStyles();\n  const theme = useTheme();\n  var bgColor = props.color;\n  var choice = \"primary\";\n  if (bgColor == \"black\"){\n    choice = \"primary\";\n  }else{\n    choice = \"secondary\";\n  }\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClick = (event) => {\n  setAnchorEl(event.currentTarget);\n};\n\nconst handleClose = () => {\n  setAnchorEl(null);\n};\n  if (setting == 1){\n    return (\n        <div className={classes.root}>\n          <CssBaseline />\n          <ThemeProvider theme = {mytheme}>\n          <div className = {pick} >\n            <AppBar\n              position=\"fixed\"\n              className={clsx(classes.appBar, {\n                [classes.appBarShift]: open,\n              }\n              )}\n              color = {choice}\n            >\n              <Toolbar >\n                <IconButton\n                  color=\"inherit\"\n                  aria-label=\"open drawer\"\n                  onClick={handleDrawerOpen}\n                  edge=\"start\"\n                  className={clsx(classes.menuButton, open && classes.hide)}\n                >\n                  <MenuIcon />\n                </IconButton>\n                <div class=\"border d-table w-100\">\n      <h2 class=\"d-table-cell tar2\">Welcome to ScribeAR</h2>\n          {/* <Welcome\n          isAuthenticated={isAuthenticated}\n          user = {user}\n          /> */}\n      <div class=\"d-table-cell tar\">\n          <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" variant=\"contained\" variant=\"text\" color=\"inherit\" onClick={handleClick} startIcon={<ShareIcon/>}>Share</Button>\n          <Menu\n            id=\"simple-menu\"\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={handleClose}\n          >\n            <Tooltip TransitionComponent={Fade} title=\"Share through emails\" arrow>\n            <MenuItem onClick={handleClose}>\n              <EmailShareButton subject=\"Transcript History\">\n                <Button startIcon={<MailIcon/>}> EMAIL</Button>\n              </EmailShareButton>\n            </MenuItem>\n            </Tooltip>\n            <Tooltip TransitionComponent={Fade} title=\"Download the transcript as a .txt file\" arrow>\n            <MenuItem onClick={handleClose}>\n              <Button variant=\"contained\" variant=\"text\" onClick={new Recognition().downloadTxtFile} startIcon={<SaveIcon fontSize='large'/>}>Download</Button>\n            </MenuItem>\n            </Tooltip>\n            {/* <Tooltip TransitionComponent={Fade} title=\"Upload the transcript to OneDrive\" arrow> */}\n            {/* <MenuItem onClick={handleClose}>\n              <Upload/>\n            </MenuItem> */}\n            {/* <MenuItem onClick={handleClose}>\n              <Folders/>\n            </MenuItem> */}\n            {/* </Tooltip> */}\n          </Menu>\n          <LogIn/>\n\n          </div>\n          <div className='lock-wrap'>\n            <MenuHider />\n\n          </div>\n    </div>\n  </Toolbar>\n</AppBar>\n          </div>\n          <Drawer\n            className={classes.drawer}\n            width = \"50%\"\n            variant=\"persistent\"\n            anchor=\"left\"\n            open={open}\n            classes = {{paper:classes.drawerPaper}}\n          >\n            <div className={classes.drawerHeader}>\n              <MenuSwitch title = 'WebSpeech'/>\n              <PopMenu />\n              <IconButton onClick={handleDrawerClose} color = \"inherit\">\n                {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n              </IconButton>\n\n            </div>\n            <Options />\n          </Drawer>\n          <main\n            className={clsx(classes.content, {\n              [classes.contentShift]: open,\n            })}\n          >\n            <div className={classes.drawerHeader} />\n\n          </main>\n          </ThemeProvider>\n        </div>\n    );\n  }else{\n    return (\n        <div className={classes.root}>\n        <CssBaseline />\n        <ThemeProvider theme = {mytheme}>\n        <div className = {pick}>\n          <AppBar\n            position=\"fixed\"\n            className={clsx(classes.appBar, {\n              [classes.appBarShift]: open,\n            })}\n            color = {choice}\n          >\n          <Toolbar >\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={handleDrawerOpen}\n              edge=\"start\"\n              className={clsx(classes.menuButton, open && classes.hide)}\n            >\n              <MenuIcon />\n            </IconButton>\n            <div class=\"border d-table w-100\">\n  <h2 class=\"d-table-cell tar2\">Welcome to ScribeAR</h2>\n      {/* <Welcome\n      isAuthenticated={isAuthenticated}\n      user = {user}\n      /> */}\n  <div class=\"d-table-cell tar\">\n      <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" variant=\"contained\" variant=\"text\" color=\"inherit\" onClick={handleClick} startIcon={<ShareIcon/>}>Share</Button>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <Tooltip TransitionComponent={Fade} title=\"Share through emails\" arrow>\n        <MenuItem onClick={handleClose}>\n          <EmailShareButton subject=\"Transcript History\">\n            <Button startIcon={<MailIcon/>}> EMAIL</Button>\n          </EmailShareButton>\n        </MenuItem>\n        </Tooltip>\n        <Tooltip TransitionComponent={Fade} title=\"Download the transcript as a .txt file\" arrow>\n        <MenuItem onClick={handleClose}>\n          <Button variant=\"contained\" variant=\"text\" onClick={new AzureRecognition().downloadTxtFile} startIcon={<SaveIcon fontSize='large'/>}>Download</Button>\n        </MenuItem>\n        </Tooltip>\n        {/* <Tooltip TransitionComponent={Fade} title=\"Upload the transcript to OneDrive\" arrow> */}\n        {/* <MenuItem onClick={handleClose}>\n          <Upload/>\n        </MenuItem> */}\n        {/* <MenuItem onClick={handleClose}>\n          <Folders/>\n        </MenuItem> */}\n        {/* </Tooltip> */}\n      </Menu>\n      <LogIn/>\n\n      </div>\n      <div className='lock-wrap'>\n        <MenuHider />\n\n      </div>\n</div>\n</Toolbar>\n          </AppBar>\n        </div>\n\n        <Drawer\n          className={classes.drawer}\n          width = \"50%\"\n          variant=\"persistent\"\n          anchor=\"left\"\n          open={open}\n          classes = {{paper:classes.drawerPaper}}\n        >\n          <div className={classes.drawerHeader}>\n            <MenuSwitch title = 'Azure'/>\n            <PopMenu />\n            <IconButton onClick={handleDrawerClose} color = \"inherit\">\n              {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n            </IconButton>\n\n          </div>\n          <AzureOption />\n        </Drawer>\n        <main\n          className={clsx(classes.content, {\n            [classes.contentShift]: open,\n          })}\n        >\n          <div className={classes.drawerHeader} />\n\n        </main>\n        </ThemeProvider>\n        </div>\n    )\n  }\n}\n","import React from 'react'\r\nimport './index.css'\r\nimport '../MiddleSpace/index.css'\r\nimport PersistentDrawerLeft from '../newDrawer'\r\nimport {useSelector} from 'react-redux'\r\n\r\n// JavaScript functions used: setTimeout, clearTimeout, bind, getElementById,\r\n// addEventListener, removeEventListener\r\n// React functions used: constructor, setState, componentDidMount, render\r\nexport default function TopSpace(props){\r\n\r\n          var h = props.height; // I don't remember why I set the height like this.\r\n          // The Options component takes a function as a prop.\r\n          const meh = (state) => state.meh\r\n          const setting = useSelector(meh)\r\n          var choice = setting ? \"none\" : \"block\"\r\n          return (\r\n               <div className=\"TopSpace\" id=\"outer\" style={{ height: h}}>\r\n                    <div >\r\n                          <div className=\"item-wrapper\" >\r\n                              <PersistentDrawerLeft color = {props.color}/>\r\n                         </div>\r\n\r\n                    </div>\r\n               </div>\r\n          )\r\n}\r\n","import React from 'react'\nimport {IconButton} from '@material-ui/core'\nimport { useSelector, useDispatch } from 'react-redux'\n// import ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\n// import ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport ExpandLessSharpIcon from '@material-ui/icons/ExpandLessSharp';\nimport ExpandMoreSharpIcon from '@material-ui/icons/ExpandMoreSharp';\n\nexport default function Extender(props){\n    const dispatch = useDispatch()\n    return (\n          <div style = {{\n              bottom:0,\n          }}>\n                <IconButton color = 'inherit' onClick={() => dispatch(props.increment())}>\n                    <ExpandLessSharpIcon />\n                </IconButton>\n                <IconButton color = 'inherit' onClick={() => dispatch(props.decrement())}>\n                    <ExpandMoreSharpIcon />\n                </IconButton>\n            </div>\n    )\n}","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport './index.css'\nimport AzureRecognition from './AzureRecognition'\nimport Extender from './Extender'\nimport { Button } from \"@material-ui/core\"\nimport ScrollButton from 'react-scroll-button'\nimport store from '../../store'\nimport keys from '../AzureTopSpace/AzureOptions/Key'\nimport { increment_numLines,\ndecrement_numLines, flip_correct_azureKey, flip_check_azureKey } from '../../redux/actions'\n\n\n\nexport default function AzureCaptions(props) {\n     const dispatch = useDispatch()\n     const lineWidth = useSelector((state) => state.lineWidth)\n     const numLines = useSelector((state) => state.numLines)\n     const recording = useSelector((state) => state.recordingAzure)\n     const checkAzureKey = useSelector((state) => state.checkAzureKey)\n     const correctAzureKey = useSelector((state) => state.correctAzureKey)\n     // Sloppy styling. Please change.\n     var paddingString = (11 - lineWidth) * 3 + 'vw'\n     var h = numLines + 'vh'\n     var resH = (43 - numLines) + 'vh'\n     var sz = props.textSize\n     if (props.wantWebspeech == true && store.isSuccessReducer == 'success') {\n       store.desiredAPI = 'webspeech';\n       return (\n         <div>\n            <AzureRecognition switchOffAzure = {true} />\n         </div>\n        )\n     } else {\n       store.desiredAPI = 'azure';\n       return ( <div>\n                      <div style = {{\n                          position : 'fixed',\n                           height : resH,\n                           margin : '0.5vh',\n                      }}>\n                      <Extender\n                                          increment={increment_numLines}\n                                          decrement={decrement_numLines}  />\n                      </div>\n                      <Button className=\"scroll\" position=\"fixed\" variant=\"outlined\" onClick= {new AzureRecognition().scrollBottom} color=\"secondary\">Scroll to Bottom</Button>\n                      <div className=\"captionsSpace\" id=\"captionsSpace\"\n                      style={{\n                      fontSize: sz,\n                      height: h,\n                      width: \"100vw\",\n                      overflow: \"auto\",\n                      paddingLeft: paddingString,\n                      paddingRight: paddingString }}>\n\n                           <AzureRecognition isRecording = {recording} isCrorrect = {correctAzureKey} checkKey = {checkAzureKey}\n                            key = {store.azureKeyReducer} region = {store.azureRegionOptionsReducer} switchOffAzure = {false} />\n                      </div>\n                </div> )\n        }\n}\n","import React from 'react'\nimport {IconButton} from '@material-ui/core'\nimport { useSelector, useDispatch } from 'react-redux'\n// import ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\n// import ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport ExpandLessSharpIcon from '@material-ui/icons/ExpandLessSharp';\nimport ExpandMoreSharpIcon from '@material-ui/icons/ExpandMoreSharp';\n\nexport default function Extender(props){\n    const dispatch = useDispatch()\n    return (\n          <div style = {{\n              bottom:0,\n          }}>\n                <IconButton color = 'inherit' onClick={() => dispatch(props.increment())}>\n                    <ExpandLessSharpIcon />\n                </IconButton>\n                <IconButton color = 'inherit' onClick={() => dispatch(props.decrement())}>\n                    <ExpandMoreSharpIcon />\n                </IconButton>\n            </div>\n    )\n}","import React from 'react'\r\nimport { useSelector , useDispatch} from 'react-redux'\r\nimport './index.css'\r\nimport Recognition from './Recognition'\r\nimport { Button } from \"@material-ui/core\"\r\nimport store from '../../store'\r\nimport mytheme from '../newDrawer/theme'\r\nimport Extender from './Extender'\r\nimport {ThemeProvider} from \"@material-ui/core/styles\";\r\nimport ScrollButton from 'react-scroll-button'\r\nimport {\r\n     increment_numLines,\r\n     decrement_numLines,\r\n} from '../../redux/actions'\r\n\r\n\r\nexport default function Captions(props) {\r\n     const lineWidth = useSelector((state) => state.lineWidth)\r\n     const numLines = useSelector((state) => state.numLines)\r\n     const recording = useSelector((state) => state.recording)\r\n     const correctAzureKey = useSelector((state) => state.correctAzureKey)\r\n     var isCorrectKey = correctAzureKey ? true : false\r\n     // Sloppy styling. Please change.\r\n\r\n     var paddingString = (11 - lineWidth) * 3 + 'vw'\r\n     var h = numLines + 'vh'\r\n     var resH = (43 - numLines) + 'vh'\r\n     var sz = props.textSize\r\n     if (props.azureCaptionSuccess == false) {\r\n       return (\r\n         <div>\r\n            <Recognition isRecording={false} />\r\n         </div>\r\n        )\r\n     } else {\r\n     return ( <div>\r\n                    <div style = {{\r\n                         height : resH,\r\n                         margin : '0.5vh',\r\n                    }}>\r\n                    <Extender\r\n                                        increment={increment_numLines}\r\n                                        decrement={decrement_numLines}  />\r\n                    </div>\r\n                     <Button className=\"scroll\" position=\"fixed\" variant=\"outlined\" onClick= {new Recognition().scrollBottom} color=\"secondary\">Scroll to Bottom</Button>\r\n                    <div className=\"captionsSpace\" id=\"captionsSpace\"\r\n                    style={{\r\n                    fontSize: sz,\r\n                    height: h,\r\n                    width: \"100vw\",\r\n                    overflow: \"auto\",\r\n                    paddingLeft: paddingString,\r\n                    paddingRight: paddingString }}>\r\n                         Welcome to ScribeAR<br />\r\n                         There are some tips for you to start to use ScribeAR,<br />\r\n                         Click button on the upperleft to open the menu.<br />\r\n                         Detailed instructions can be found in option menu.<br />\r\n                         <Recognition isRecording={recording} />\r\n                    </div>\r\n              </div> )\r\n            }\r\n}\r\n","import React, { Component } from 'react';\n\n\n\nclass AudioVisualiser extends Component {\n\n  constructor(props) {\n    super(props);\n    this.canvas = React.createRef();\n  }\n  draw() {\n      const { audioData } = this.props;\n      const canvas = this.canvas.current;\n      const height = canvas.height;\n      const width = canvas.width;\n      const context = canvas.getContext('2d');\n      context.clearRect(0, 0, width, height);\n\n      if (this.props.mic == 1){ // Line visualization\n          this.drawLine(audioData,context,height,width);\n      }\n      else if (this.props.mic == 2){// Spectrum visualization\n          this.drawSpectrum(audioData,context,height,width);\n      }\n      else if (this.props.mic == 3){// Circular visualization\n          this.drawCircular(audioData,context,height,width);\n      }\n\n\n}\n\ndrawLine(audioData,context,height,width){\n       let x = 0;\n       const sliceWidth = (width * 1.0) / audioData.length;\n      context.lineWidth = 2;\n      context.beginPath();\n      context.moveTo(0, height / 2);\n      for (const item of audioData) {\n          const y = (item / 255.0) * height;\n          context.lineTo(x, y);\n          x += sliceWidth;\n      }\n      context.lineTo(x, height / 2);\n      context.strokeStyle = this.props.iscolor ? '#000000' : '#F8F8FF';\n      context.stroke();\n}\n\ndrawSpectrum(audioData,context,height,width){\n      let x = 0;\n      const barWidth = (width / audioData.length) * 2.5;\n      let barHeight;\n      for(const item of audioData) {\n          barHeight = item/2;\n          context.fillStyle = this.props.iscolor ? '#000000' : '#F8F8FF';\n          context.fillRect(x,height/2-barHeight/2,barWidth,barHeight);\n          x += barWidth + 1;\n          }\n\n}\n\ndrawCircular(audioData,context,height,width){\n      const RADIUS = 80;\n      const POINTS = 360;\n      let sum = audioData.reduce((previous, current) => current += previous);\n      let avg = sum / audioData.length;\n\n      for(let i = 0; i < POINTS; i++) {\n          let rel = ~~(i * (POINTS/audioData.length));\n          let x = width/2 + RADIUS * Math.cos( (i * 2 * Math.PI) / POINTS );\n          let y = height/2 + RADIUS * -Math.sin( (i * 2 * Math.PI) / POINTS );\n          let x_2 = x + (audioData[rel]/4) * Math.cos( (i * 2 * Math.PI) / POINTS );\n          let y_2 = y + (audioData[rel]/4) * -Math.sin( (i * 2 * Math.PI) / POINTS );\n          let x_3 = width/2 + 1 *  avg * Math.cos((i * 2 * Math.PI) / POINTS );\n          let y_3 = height/2 + 1 * avg * -Math.sin((i * 2 * Math.PI) / POINTS );\n          let x_4 = x_3 - 0.5 *  avg * Math.cos((i * 2 * Math.PI) / POINTS );\n          let y_4 = y_3 - 0.5 * avg * -Math.sin((i * 2 * Math.PI) / POINTS );\n          let x_5 = x - 0.3  * Math.cos((i * 2 * Math.PI) / POINTS );\n          let y_5 = y - 0.3  * -Math.sin((i * 2 * Math.PI) / POINTS);\n          //draw the circular spectrum\n          context.beginPath();\n          context.moveTo(x, y);\n          context.lineTo(x_2, y_2);\n          context.strokeStyle = this.props.iscolor ? '#000000' : '#F8F8FF';\n          context.stroke();\n          //draw the margin circle\n          context.beginPath();\n          context.moveTo(x,y);\n          context.lineTo(x_5,y_5);\n          context.stroke();\n          //draw the inner circlew\n          context.beginPath();\n          context.moveTo(x_4,y_4);\n          context.lineTo(x_3,y_3);\n          if(y_4 - y_3 > 10){\n              context.strokeStyle = '#ff0000';\n          }\n          context.stroke();\n          }\n\n}\ncomponentDidUpdate() {\n    this.draw();\n  }\n\n  render() {\n      let width = \"1700vw\"\n      if (this.props.mic == 1){\n          width = \"1800vw\"\n      }else if (this.props.mic == 2){\n          width = \"1600vw\"\n      }else if (this.props.mic == 3){\n          width = \"400vw\"\n\n      }\n\n    return <canvas width={width} height=\"300vh\" ref={this.canvas} />;\n  }\n\n}\n\nexport default AudioVisualiser;\n","import React, {Component } from 'react';\nimport AudioVisualiser from './AudioVisualiser'\n\n\n/*global Unit8Array*/\n\n\nclass AudioAnalyser extends Component {\n\n     constructor(props) {\n          super(props);\n          this.state = {\n                audioData : new Uint8Array(0)\n          };\n          this.tick = this.tick.bind(this);\n     }\n\n     componentDidMount() {\n     this.audioContext = new (window.AudioContext ||\n       window.webkitAudioContext)();\n     this.analyser = this.audioContext.createAnalyser();\n     this.dataArray = new Uint8Array(this.analyser.frequencyBinCount);\n     this.source = this.audioContext.createMediaStreamSource(this.props.audio);\n     this.source.connect(this.analyser);\n     this.rafId = requestAnimationFrame(this.tick);\n   }\n\n     tick() {\n         if (this.props.mic == 1){\n             //console.log(\"1\");n\n             this.analyser.getByteTimeDomainData(this.dataArray);\n         }else if (this.props.mic == 2){\n             //console.log(\"2\");\n             this.analyser.getByteFrequencyData(this.dataArray);\n         }else if (this.props.mic == 3){\n             this.analyser.getByteFrequencyData(this.dataArray);\n             //this.analyser.getByteTimeDomainData(this.dataArray);\n         }\n     this.setState({ audioData: this.dataArray });\n     this.rafId = requestAnimationFrame(this.tick);\n   }\n\n   componentWillUnmount() {\n    cancelAnimationFrame(this.rafId);\n    this.analyser.disconnect();\n    this.source.disconnect();\n  }\n\n  render() {\n      return <AudioVisualiser audioData={this.state.audioData} iscolor = {this.props.iscolor} mic = {this.props.mic}/>;\n    }\n\n\n}\n\nexport default AudioAnalyser;\n","import React from 'react';\nimport AudioAnalyser from './AudioAnalyser';\n\n\nclass Index extends React.PureComponent {\n  constructor() {\n   super()\n   this.state = {\n     audio: null\n   };\n\n  //this.toggleMicrophone = this.toggleMicrophone.bind(this);\n  this.stopMicrophone = this.stopMicrophone.bind(this);\n  this.getMicrophone = this.getMicrophone.bind(this);\n }\n\n\n\n componentDidUpdate(prevProps,prevState) {\n   if(prevProps.ismic === this.props.ismic)\n      return\n   if(this.props.ismic > 0){\n      this.getMicrophone()\n    }\n   else this.stopMicrophone()\n }\n\n async getMicrophone() {\n    const audio = await navigator.mediaDevices.getUserMedia({\n      audio: true,\n      video: false\n    });\n    this.setState({ audio });\n  }\n\n  stopMicrophone() {\n     this.state.audio.getTracks().forEach(track => track.stop());\n     this.setState({ audio: null });\n   }\n\n\n  render() {\n     return (\n\n         <div className=\"controls\" >\n           {this.state.audio ? <AudioAnalyser audio={this.state.audio}  iscolor = {this.props.iscolor}  mic = {this.props.ismic}/> : ''}\n         </div>\n\n     );\n   }\n}\n\nexport default Index;\n\n// <button onClick={this.toggleMicrophone} style = {{\n//   position:\"fixed\",\n//   top:\"35vh\",\n//   left:\"65vw\",\n//   width:\"10vw\",\n//   height:\"10vh\",\n//   fontSize: \"1.5vw\",\n//   textAlign: \"left\"\n// }}>\n//   {this.state.audio ? 'Stop MIC' : 'Get MIC input'}\n// </button>\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class Draggable extends React.Component{\n\n    drag = (e) => {\n        e.dataTransfer.setData('transfer',e.target.id);\n    }\n\n    noAllowDrop = (e) => {\n        e.stopPropagation();\n    }\n\n    render(){\n        return (\n            <div id= {this.props.id} draggable = \"true\" onDragStart={this.drag} \n            onDragOver= {this.noAllowDrop} style = {this.props.style}>\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nDraggable.propTypes = {\n    id : PropTypes.string,\n    style: PropTypes.object,\n    children: PropTypes.node,\n}","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class Droppable extends React.Component{\n    drop = (e) =>{\n        e.preventDefault();\n        const data = e.dataTransfer.getData('transfer');\n        e.target.appendChild(document.getElementById(data));\n    }\n\n    allowDrop = (e) =>{\n        e.preventDefault();\n    }\n\n    render(){\n        return (\n            <div id = {this.props.id} onDrop = {this.drop} onDragOver = {this.allowDrop} style = {this.props.style}>\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nDroppable.propTypes = {\n    id : PropTypes.string,\n    style: PropTypes.object,\n    children: PropTypes.node,\n}","import React, { Component } from 'react';\n\n\n\nclass StereoVisualiser extends Component {\n\n  constructor(props) {\n    super(props);\n    this.canvas = React.createRef();\n  }\n\n\n  draw() {\n      const canvas = this.canvas.current;\n      const  audioDataL = this.props.audioDataL;\n      const audioDataR  = this.props.audioDataR;\n      const height = canvas.height;\n      const width = canvas.width;\n      const context = canvas.getContext('2d');\n      context.clearRect(0, 0, width, height);\n\n      if (this.props.mic === 1){ // circular Visualization\n          this.drawCircular(audioDataL,context,height,width,1);\n          this.drawCircular(audioDataR,context,height,width,-1);\n      }\n      else if (this.props.mic === 2){// Rectangle\n          this.drawRectangle(audioDataL, audioDataR, context, height, width);\n      }\n      else if (this.props.mic == 3){// Double Spectrum\n          this.drawDoubleSpectrum(audioDataL,audioDataR,context,height,width);\n      }\n\n\n}\n\ndrawDoubleSpectrum(audioDataL,audioDataR,context,height,width){\n     const RADIUS = 200;\n     const POINTS = 360;\n     // let sumL = audioDataL.reduce((previous, current) => current += previous);\n     // let avgL = sumL / audioDataL.length;\n     // let sumR = audioDataR.reduce((previous, current) => current += previous);\n     // let avgR = sumR / audioDataR.length;\n\n\n      for(let i = POINTS/8 ; i < POINTS + POINTS/8; i++) {\n           //left spectrum\n          let rel = ~~(i * (POINTS/audioDataL.length));\n          let x = width/8 + RADIUS * -Math.cos( (i * 0.5 * Math.PI) / POINTS );\n          let y = height/2 + RADIUS * -Math.sin( (i * 0.5 * Math.PI) / POINTS );\n          let x_2 = x +  (audioDataL[rel]/4) * -Math.cos( (i * 0.5 * Math.PI) / POINTS );\n          let y_2 = y + (audioDataL[rel]/4) * -Math.sin( (i * 0.5 * Math.PI) / POINTS );\n          let x_5 = x - 0.3  * Math.cos((i * 0.5 * Math.PI) / POINTS );\n          let y_5 = y - 0.3  * Math.sin((i * 0.5 * Math.PI) / POINTS);\n          //draw the circular spectrum\n          context.beginPath();\n          context.moveTo(x, y);\n          context.lineTo(x_2, y_2);\n          context.strokeStyle = this.props.iscolor ? '#000000' : '#F8F8FF';\n          context.stroke();\n          //draw the margin circle\n          context.beginPath();\n          context.moveTo(x,y);\n          context.lineTo(x_5,y_5);\n          context.stroke();\n\n          //right spectrum\n          rel = ~~(i * (POINTS/audioDataR.length));\n          x = 3* width/4 + RADIUS * Math.cos( (i * 0.5 * Math.PI) / POINTS );\n          y = height/2 + RADIUS * -Math.sin( (i * 0.5 * Math.PI) / POINTS );\n          x_2 = x +  (audioDataR[rel]/4) * Math.cos( (i * 0.5 * Math.PI) / POINTS );\n          y_2 = y + (audioDataR[rel]/4) * -Math.sin( (i * 0.5 * Math.PI) / POINTS );\n          x_5 = x - 0.3  * Math.cos((i * 0.5 * Math.PI) / POINTS );\n          y_5 = y - 0.3  * Math.sin((i * 0.5 * Math.PI) / POINTS);\n          //draw the circular spectrum\n          context.beginPath();\n          context.moveTo(x, y);\n          context.lineTo(x_2, y_2);\n          context.strokeStyle = this.props.iscolor ? '#000000' : '#F8F8FF';\n          context.stroke();\n          //draw the margin circle\n          context.beginPath();\n          context.moveTo(x,y);\n          context.lineTo(x_5,y_5);\n          context.stroke();\n          }\n\n\n}\n\n\ndrawRectangle(audioDataL, audioDataR, context, height, width){\n      let diff = 0;\n      let sumL = audioDataL.reduce((previous, current) => current += previous);\n      let avgL = sumL/ audioDataL.length;\n      let sumR = audioDataR.reduce((previous, current) => current += previous);\n      let avgR = sumR / audioDataR.length;\n      diff = avgR - avgL;\n      console.log(diff*10)\n\n      let gradient = context.createLinearGradient(width/2 - 80 , height/4, width/2 + 80, height/4 + 50);\n      gradient.addColorStop(0, '#ff0000');\n      gradient.addColorStop(1, '#5BDA2B');\n      context.fillStyle = gradient;\n      context.fillRect(width/2 - 80 + diff*5, height/4, 160, 50)\n\n    //indicator line\n      context.lineWidth = 2;\n      context.beginPath();\n      context.moveTo(width/2, height/4);\n      context.lineTo(width/2, height/4 + 50);\n      context.strokeStyle = this.props.iscolor ? '#F8F8FF' : '#000000';\n      context.stroke();\n}\n\n\ndrawCircular(audioData,context,height,width,cir){\n      const RADIUS = 80;\n      const POINTS = 360;\n      let sum = audioData.reduce((previous, current) => current += previous);\n      let avg = sum / audioData.length;\n\n      for(let i = POINTS/2; i < POINTS + POINTS/2; i++) {\n          let rel = ~~(i * (POINTS/audioData.length));\n          let x = width/2 + cir * RADIUS * Math.cos( (i * 1 * Math.PI) / POINTS );\n          let y = height/2 + RADIUS * Math.sin( (i * 1 * Math.PI) / POINTS );\n          let x_2 = x + cir * (audioData[rel]/4) * Math.cos( (i * 1 * Math.PI) / POINTS );\n          let y_2 = y + (audioData[rel]/4) * Math.sin( (i * 1 * Math.PI) / POINTS );\n          let x_3 = width/2 + 1 *  avg * cir*Math.cos((i * 1 * Math.PI) / POINTS );\n          let y_3 = height/2 + 1 * avg * -cir*Math.sin((i * 1 * Math.PI) / POINTS );\n          let x_4 = x_3 - 0.5 *  avg * cir*Math.cos((i * 1 * Math.PI) / POINTS );\n          let y_4 = y_3 - 0.5 * avg * -cir*Math.sin((i * 1 * Math.PI) / POINTS );\n          let x_5 = x - 0.3  * cir*Math.cos((i * 1 * Math.PI) / POINTS );\n          let y_5 = y - 0.3  * -cir*Math.sin((i * 1 * Math.PI) / POINTS);\n          //draw the circular spectrum\n          context.beginPath();\n          context.moveTo(x, y);\n          context.lineTo(x_2, y_2);\n          if(cir == 1){\n              context.strokeStyle ='#E1AAA5';\n          }else{\n             context.strokeStyle = '#B6E1A5';\n          }\n          // context.strokeStyle = this.props.iscolor ? '#000000' : '#F8F8FF';\n          context.stroke();\n          //draw the margin circle\n          context.beginPath();\n          context.moveTo(x,y);\n          context.lineTo(x_5,y_5);\n          context.stroke();\n          //draw the inner circlew\n          context.beginPath();\n          context.moveTo(x_4,y_4);\n          context.lineTo(x_3,y_3);\n          if(y_4 - y_3 > 10){\n              if (cir == 1){\n                 context.strokeStyle = '#ff0000';\n              }else{\n                 context.strokeStyle = '#5BDA2B';\n              }\n\n          }\n          context.stroke();\n          }\n\n}\n\ncomponentDidUpdate() {\n    this.draw();\n  }\n\n  render() {\n      let width = \"1700vw\"\n      if (this.props.mic == 1){\n          width = \"400vw\"\n      }else if (this.props.mic == 2){\n          width = \"400vw\"\n      }else if (this.props.mic == 3){\n          width = \"1800vw\"\n      }\n\n    return <canvas width={width} height=\"300vh\" ref={this.canvas} />;\n  }\n\n}\n\nexport default StereoVisualiser;","import React, {Component } from 'react';\nimport StereoVisualiser from './StereoVisualiser'\n\n\n/*global Unit8Array*/\n\n\nclass StereoAnalyser extends Component {\n\n     constructor(props) {\n          super(props);\n          this.state = {\n                audioDataL : new Uint8Array(0),\n                audioDataR : new Uint8Array(0)\n          };\n          this.tick = this.tick.bind(this);\n     }\n\n     componentDidMount() {\n     this.audioContext = new (window.AudioContext ||\n       window.webkitAudioContext)();\n          //load music\n      this.audio =  document.querySelector('audio');\n\n\n//const track = audioCtx.createMediaElementSource(audioElement);\n     this.source = this.audioContext.createMediaElementSource(this.audio);\n\n     this.splitter = this.audioContext.createChannelSplitter(2);\n     this.analyserL = this.audioContext.createAnalyser();\n     this.analyserR = this.audioContext.createAnalyser();\n\n     this.source.connect(this.splitter);\n     this.splitter.connect(this.analyserL, 0, 0);\n     this.splitter.connect(this.analyserR, 1, 0);\n     this.dataArrayL = new Uint8Array(this.analyserL.frequencyBinCount);\n     this.dataArrayR = new Uint8Array(this.analyserR.frequencyBinCount);\n     //this.source.connect(this.analyserL);\n     //this.source.connect(this.analyserR);\n     //     this.audio.autoplay = true;\n         this.source.connect(this.audioContext.destination);\n     this.rafId = requestAnimationFrame(this.tick);\n   }\n\n     tick() {\n         if (this.props.mic == 1){\n             //console.log(\"1\");n\n             this.analyserL.getByteFrequencyData(this.dataArrayL);\n             this.analyserR.getByteFrequencyData(this.dataArrayR)\n         }else if (this.props.mic == 2){\n             this.analyserR.getByteFrequencyData(this.dataArrayR);\n             this.analyserL.getByteFrequencyData(this.dataArrayL);\n         }else if (this.props.mic == 3){\n             this.analyserL.getByteFrequencyData(this.dataArrayL);\n             this.analyserR.getByteFrequencyData(this.dataArrayR);\n         }\n\n     this.setState({ audioDataL: this.dataArrayL , audioDataR: this.dataArrayR});\n     this.rafId = requestAnimationFrame(this.tick);\n   }\n\n   componentWillUnmount() {\n    cancelAnimationFrame(this.rafId);\n    this.analyserL.disconnect();\n    this.analyserR.disconnect();\n    this.source.disconnect();\n  }\n\n  render() {\n         //console.log(this.state.audioData);\n         //console.log(this.props.audio);\n      return (\n          <div>\n               <audio src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/858/outfoxing.mp3\"\n                    crossOrigin=\"anonymous\"  controls={true}>\n               </audio>\n              <StereoVisualiser audioDataL={this.state.audioDataL} audioDataR={this.state.audioDataR} iscolor = {this.props.iscolor} mic = {this.props.mic}/>\n          </div>);\n    }\n\n\n}\n\nexport default StereoAnalyser;","import React from 'react';\nimport StereoAnalyser from './StereoAnalyser';\n\n\nclass Stereo extends React.PureComponent {\n  constructor() {\n   super()\n   this.state = {\n     audio: null\n   };\n\n  //this.toggleMicrophone = this.toggleMicrophone.bind(this);\n  this.stopMicrophone = this.stopMicrophone.bind(this);\n  this.getMicrophone = this.getMicrophone.bind(this);\n }\n\n\n\n componentDidUpdate(prevProps,prevState) {\n   if(prevProps.ismic === this.props.ismic)\n      return\n   if(this.props.ismic > 0){\n      this.getMicrophone()\n    }\n   else this.stopMicrophone()\n }\n\n async getMicrophone() {\n\n\n\n    // const audio = await navigator.mediaDevices.getUserMedia({\n    //   audio: { mandatory: { echoCancellation: false}},\n    //   video: false\n    // });\n    // this.setState({ audio });\n  }\n\n  stopMicrophone() {\n     //this.state.audio.getTracks().forEach(track => track.stop());\n     // this.setState({ audio: null });\n   }\n\n\n  render() {\n     return (\n\n         <div className=\"controls\" >\n\n           {/*{this.state.audio ? <StereoAnalyser audio={this.state.audio}  iscolor = {this.props.iscolor}  mic = {this.props.ismic}/> : ''}*/}\n             {<StereoAnalyser  iscolor = {this.props.iscolor}  mic = {this.props.ismic}/>}\n         </div>\n\n     );\n   }\n}\n\nexport default Stereo;","import React from 'react'\nimport Index from './Loudness/index'\nimport './index.css'\nimport { useSelector } from 'react-redux'\nimport styled from 'styled-components'\nimport Draggable from '../DnD/Draggable'\nimport Droppable from '../DnD/Droppable'\nimport './index.css'\n\nimport Stereo from \"./Stereo/index\"\n\n\nconst Wrapper = styled.div`\n    width:100%;\n    padding:2px;\n    display:flex;\n    justify-content: center;\n`;\n\n\nconst droppableStyle = {\n    backgroundColor: '#555',\n    width:'50vw',\n    height: '45vh',\n    margin: '0px'\n};\n\nexport default function MiddleSpace(props) {\n  var h = '45vh'\n  const mic = useSelector((state) => state.mic)\n  const stereoMic = useSelector((state) => state.steromic)\n  const color = useSelector((state) => state.invertColors)\n  const isstereo = useSelector((state) => state.stereo)\n\n    if (isstereo == 0){//mono\n        if (props.color == 'black'){\n            return ( <div className=\"MiddleSpace\">\n            <Wrapper>\n                  <Droppable className = \"d1\" id = \"dr1\" style = {{\n                    width:'25vw',\n                    height: '45vh',\n                    margin: '1px'}}>\n                    <div className = \"show1\">\n                      <Draggable id = \"item1\" style = {{margin:'0.5px'}}>\n                          {/* change Index to Stereo for test purpose*/}\n                          <Index ismic = {mic} iscolor = {color} style={{\n                          position:\"relative\",\n                          }}/>\n\n                      </Draggable>\n                      </div>\n                  </Droppable>\n                  <Droppable className = \"d1\" id = \"dr2\" style = {{\n                    width:'25vw',\n                    height: '45vh',\n                    margin: '1px'}}>\n                      <div className = \"show1\"></div>\n                  </Droppable>\n                  <Droppable className = \"d1\" id = \"dr2\" style = {{\n                    width:'25vw',\n                    height: '45vh',\n                    margin: '1px'}}>\n                      <div className = \"show1\"></div>\n                  </Droppable>\n                  <Droppable className = \"d1\" id = \"dr2\" style = {{\n                    width:'25vw',\n                    height: '45vh',\n                    margin: '1px'}}>\n                      <div className = \"show1\"></div>\n                  </Droppable>\n\n              </Wrapper>\n          </div> )\n  }else{\n    return ( <div className=\"MiddleSpace\">\n            <Wrapper>\n                  <Droppable className = \"d2\" id = \"dr1\" style = {{\n                    width:'25vw',\n                    height: '45vh',\n                    margin: '1px'}}>\n                    <div className = \"show1\">\n                      {/* change Index to Stereo for test purpose*/}\n                      <Draggable id = \"item1\" style = {{margin:'0.5px'}}><Index ismic = {mic} iscolor = {color} style={{\n                        position:\"relative\",\n                      }}/>\n                    </Draggable>\n                    </div>\n                  </Droppable>\n                  <Droppable className = \"d2\" id = \"dr2\" style = {{\n                    width:'25vw',\n                    height: '45vh',\n                    margin: '1px'}}>\n                      <div className = \"show1\"></div>\n                  </Droppable>\n                  <Droppable className = \"d2\" id = \"dr2\" style = {{\n                    width:'25vw',\n                    height: '45vh',\n                    margin: '1px'}}>\n                      <div className = \"show1\"></div>\n                  </Droppable>\n                  <Droppable className = \"d2\" id = \"dr2\" style = {{\n                    width:'25vw',\n                    height: '45vh',\n                    margin: '1px'}}>\n                      <div className = \"show1\"></div>\n                  </Droppable>\n\n              </Wrapper>\n          </div> )\n  }\n    }else{\n        if (props.color == 'black'){\n      return ( <div className=\"MiddleSpace\">\n            <Wrapper>\n                  <Droppable className = \"d1\" id = \"dr1\" style = {{\n                    width:'25vw',\n                    height: '45vh',\n                    margin: '1px'}}>\n                    <div className = \"show1\">\n                      <Draggable id = \"item1\" style = {{margin:'0.5px'}}>\n                          {/* change Index to Stereo for test purpose*/}\n                          < Stereo ismic = {stereoMic} iscolor = {color} style={{\n                          position:\"relative\",\n                          }}/>\n\n                      </Draggable>\n                      </div>\n                  </Droppable>\n                  <Droppable className = \"d1\" id = \"dr2\" style = {{\n                    width:'25vw',\n                    height: '45vh',\n                    margin: '1px'}}>\n                      <div className = \"show1\"></div>\n                  </Droppable>\n                  <Droppable className = \"d1\" id = \"dr2\" style = {{\n                    width:'25vw',\n                    height: '45vh',\n                    margin: '1px'}}>\n                      <div className = \"show1\"></div>\n                  </Droppable>\n                  <Droppable className = \"d1\" id = \"dr2\" style = {{\n                    width:'25vw',\n                    height: '45vh',\n                    margin: '1px'}}>\n                      <div className = \"show1\"></div>\n                  </Droppable>\n\n              </Wrapper>\n          </div> )\n  }else{\n    return ( <div className=\"MiddleSpace\">\n            <Wrapper>\n                  <Droppable className = \"d2\" id = \"dr1\" style = {{\n                    width:'25vw',\n                    height: '45vh',\n                    margin: '1px'}}>\n                    <div className = \"show1\">\n                      {/* change Index to Stereo for test purpose*/}\n                      <Draggable id = \"item1\" style = {{margin:'0.5px'}}><Stereo ismic = {stereoMic} iscolor = {color} style={{\n                        position:\"relative\",\n                      }}/>\n                    </Draggable>\n                    </div>\n                  </Droppable>\n                  <Droppable className = \"d2\" id = \"dr2\" style = {{\n                    width:'25vw',\n                    height: '45vh',\n                    margin: '1px'}}>\n                      <div className = \"show1\"></div>\n                  </Droppable>\n                  <Droppable className = \"d2\" id = \"dr2\" style = {{\n                    width:'25vw',\n                    height: '45vh',\n                    margin: '1px'}}>\n                      <div className = \"show1\"></div>\n                  </Droppable>\n                  <Droppable className = \"d2\" id = \"dr2\" style = {{\n                    width:'25vw',\n                    height: '45vh',\n                    margin: '1px'}}>\n                      <div className = \"show1\"></div>\n                  </Droppable>\n\n              </Wrapper>\n          </div> )\n  }\n\n    }\n\n\n}\n","import React from 'react'\nimport './index.css'\nimport MenuHider from './MenuHider'\nimport {useSelector} from 'react-redux'\n\n\n\nexport default function PlaceHolder(props){\n        var sz = props.textSize;\n        const meh = (state) => state.meh\n        const setting = useSelector(meh)\n        // var h = setting ? '23vh' : '14vh';\n        var h = props.height\n        return <div className = \"PlaceHolder\" style = {\n            {\n                // fontSize:sz,\n                height:h,\n            }\n        }>\n      \n        </div>\n}","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport TopSpace from './components/TopSpace'\nimport AzureTopSpace from './components/AzureTopSpace'\nimport AzureCaptions from './components/AzureCaptions'\nimport Captions from './components/Captions'\nimport MiddleSpace from './components/MiddleSpace'\nimport PlaceHolder from \"./components/PlaceHolder\"\nimport { flip_recording, flip_switch_to_azure,\n         flip_switchMenus, flip_entered_key,\n         flip_correct_azureKey, flip_on_webspeech,\n         flip_check_azureKey,\n         flip_entered_region } from './redux/actions'\nimport store from './store'\nimport './App.css'\nimport swal from 'sweetalert';\nimport { resetWarningCache } from 'prop-types';\n\n\nexport default function App() {\n     console.log(\"hello ur back\")\n     const dispatch = useDispatch()\n     const onWebspeech = useSelector((state) => state.onWebspeech)\n     const enteredKey = useSelector((state) => state.enteredKey)\n     const enteredRegion = useSelector((state) => state.enteredRegion)\n     const correctAzureKey = useSelector((state) => state.correctAzureKey)\n     const checkAzureKey = useSelector((state) => state.checkAzureKey)\n     // Get global state from Redux. See the React Redux tutorial.\n     const textSize = useSelector((state) => state.textSize)\n     const recording = useSelector((state) => state.recording)\n     const numLines = useSelector((state) => state.numLines)\n     const invertColors = useSelector((state) => state.invertColors)\n     const switchMenus = useSelector((state)=> state.switchMenus)\n     const switchToAzure = useSelector((state) => state.switchToAzure)\n     // Convert variables to CSS-friendly strings.\n     var sizeString = textSize + 'vh'\n     // Size of bottom space (text area) relative to text size and number of lines.\n     var botHeight = 43 + 'vh'\n     var topHeight = 9 + 'vh'\n     var placeHeight = 5 + 'vh'\n     var midHeight = 34 + 'vh'\n    //-----------------------\n    //checks how often user is still on browser\n    //currently set to checking every 1 hour(s)\n    var timerCheck = 600000;\n     //----------------------\n     // var topHeight = 9 + 'vh'\n     // var placeHeight = 5 + 'vh'\n     // var midHeight = 34 + 'vh'\n     //-----------------------\n     // topHeight + botHeight should always = 100vh because we don't want the full\n     // page to scroll (we only want the individual areas to scroll).\n     //------------------------\n     //checkAzureKey is changed changed HERE in normal return\n     //isCorrectKey is done in AzureCaptions\n     //azureKeyEntered is done in enter button\n\n     var isRecording = recording ? true : false\n     var switchmenus = switchMenus ? false : true\n     var isEnteredKey = enteredKey ? true : false\n     var isEnteredRegion = enteredRegion ? true : false\n     var isCorrectKey = correctAzureKey ? true : false\n     var isChecking = checkAzureKey ? true : false\n     var wantsWebspeech = onWebspeech ? true : false\n     var bgColor = invertColors ? 'white': 'black'\n     var color = invertColors ? 'black' : 'white'\n     if (store.azureKeyReducer == 'incorrect' && checkAzureKey == true) {\n       store.azureKeyReducer = 'empty'\n       dispatch(flip_entered_key())\n       dispatch(flip_entered_region())\n       dispatch(flip_check_azureKey())\n     }\n     if (store.isSuccessReducer == 'success' && isCorrectKey == false) {\n       dispatch(flip_correct_azureKey())\n     }\n     if (bgColor == 'black') {\n     if (checkAzureKey == true || isCorrectKey == true) {\n       if (isRecording == true) {\n         dispatch(flip_recording());\n       }\n       if (isCorrectKey == false && wantsWebspeech == true) {\n         dispatch(flip_on_webspeech())\n       }\n      setInterval(checkIfStillHere, timerCheck);\n         return (\n              <div className=\"App-1\" style={{\n                   backgroundColor: 'black',\n                   color: 'white',\n                   overflow: 'hidden',\n                   position: 'fixed',\n                  }}>\n                  <TopSpace color = {bgColor} />\n                  <PlaceHolder color = {bgColor} textSize = {sizeString}/>\n                  <MiddleSpace color = {bgColor}/>\n                   <AzureCaptions textSize={sizeString} wantWebspeech={wantsWebspeech}/>\n                   <Captions height={0} textSize={0} azureCaptionSuccess={wantsWebspeech} />\n              </div>\n         )\n      }\n    } else {\n      if (checkAzureKey == true || isCorrectKey == true) {\n      if (isRecording == true) {\n        dispatch(flip_recording())\n      }\n\n\n      setInterval(checkIfStillHere, timerCheck);\n\n\n        return (\n             <div className=\"App-2\" style={{\n                  backgroundColor: 'white',\n                  color: 'black',\n                  overflow: 'hidden',\n                  position: 'fixed',\n                 }}>\n                 <TopSpace color = {bgColor} />\n                 <PlaceHolder color = {bgColor} textSize = {sizeString}/>\n                 <MiddleSpace color = {bgColor}/>\n                  <AzureCaptions  textSize={sizeString} wantWebspeech={wantsWebspeech} />\n                  <Captions height={0} textSize={0}  azureCaptionSuccess={wantsWebspeech}/>\n                  {/* <DNDTest /> */}\n             </div>\n        )\n     }\n   }\n      // cases where azureKey is false but isrecording is not????\n\n      if (bgColor == 'black') {\n        if (isEnteredKey == true || isEnteredRegion == true) {\n          dispatch(flip_check_azureKey())\n          if (isRecording == true) {\n            dispatch(flip_recording())\n          }\n        }\n        return (\n            <div className=\"App-1\" style={{\n                 backgroundColor: 'black',\n                 color: 'white',\n                 overflow: 'hidden',\n                 position: 'fixed',\n                }}>\n                 <TopSpace color = {bgColor}/>\n                 <PlaceHolder color = {bgColor} textSize = {sizeString}/>\n                 <MiddleSpace color = {bgColor}/>\n                 <Captions textSize={sizeString}  azureCaptionSuccess={true}/>\n\n\n                 {/* <DNDTest /> */}\n            </div>\n       )\n     } else {\n       return (\n            <div className=\"App-2\" style={{\n                 backgroundColor: 'white',\n                 color: 'black',\n                 overflow: 'hidden',\n                 position: 'fixed',\n                }}>\n                 <TopSpace color = {bgColor} />\n                 <PlaceHolder color = {bgColor} textSize = {sizeString}/>\n                 <MiddleSpace color = {bgColor}/>\n                 <Captions  textSize={sizeString}  azureCaptionSuccess={true}/>\n                 {/* <DNDTest /> */}\n            </div>\n       )\n     }\n     // You can't comment in JSX.\n     // The style tag is the easiest way to set style based on JS variables.\n\n}\n\nvar timer = 30\n,isTimerStarted = false;\nvar myTime;\nfunction checkIfStillHere() {\n  swal({\n    title: 'Are you still here?',\n    confirmButtonText: \"OK\",\n    icon: 'warning',\n    text: 'If you want to continue using Azure Recogition click ok.  \\n You have ' + timer + ' seconds.',\n    timer: !isTimerStarted ? timer * 1000 : undefined,\n\n  }\n  ).then(function(isConfirm) {\n    if (isConfirm) {\n      swal({\n        title: 'Continue using Azure Recogition.',\n        icon: 'success',\n        timer: 2000,\n        buttons: false,\n      });\n      timer = 30;\n      clearTimeout(myTime);\n    }\n  });\n\n  isTimerStarted = true;\n    if(timer) {\n        timer--;\n        myTime = setTimeout(checkIfStillHere, 1000);\n    } else {\n      swal ({\n        title: \"Reloading...\",\n        icon: 'error',\n        timer: 3000,\n        buttons: false,\n      });\n      window.location.reload(true);\n    }\n\n}\n","// THIS ENTIRE FILE, INCLUDING COMMENTS EXCEPT FOR THIS ONE, IS AUTOMATICALLY PROVIDED BY NPX\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\r\n\r\nvar savedTextSize = localStorage.getItem('text')\r\nvar savedColor = localStorage.getItem('color')\r\nvar savedMic = localStorage.getItem('mic')\r\nvar savedBox = localStorage.getItem('box')\r\nvar savedMeh = localStorage.getItem('meh')\r\n\r\n// var choiceColor = false\r\nvar choiceMeh = 0\r\n// var choiceMic = 0\r\nvar choiceBox = 40\r\nvar choiceTextSize = 6\r\nif (savedTextSize != null){\r\n     choiceTextSize = savedTextSize\r\n}\r\nif (savedMeh != null){\r\n     choiceMeh = savedMeh\r\n}\r\nif (savedBox != null){\r\n     choiceBox = savedBox\r\n}\r\n// if (savedMic != null){\r\n//      choiceMic = savedMic\r\n// }\r\n\r\nconst submenuReducer = (state = 1, action) => {\r\n     switch(action.type) {\r\n          case 'SUBMENU_1':\r\n               return 1;\r\n          case 'SUBMENU_2':\r\n               return 2;\r\n          case 'NEXT_PAGE':\r\n               return Math.min(2,state+1);\r\n          case 'PREV_PAGE':\r\n               return Math.max(1,state-1);\r\n          default: return state;\r\n     }\r\n}\r\n\r\nconst onWebspeechReducer = (state = true, action) =>{\r\n     if (action.type == 'FLIP_ON_WEBSPEECH')\r\n          return !state\r\n     else return state\r\n}\r\n\r\nconst textSizeReducer = (state = choiceTextSize, action) => {\r\n     switch (action.type) {\r\n          case 'INCREMENT_TEXTSIZE':\r\n               return state%12 + 1;\r\n          case 'DECREMENT_TEXTSIZE':\r\n               return Math.max(1, state - 1);\r\n          default:\r\n               return state;\r\n     }\r\n}\r\n\r\nconst lineWidthReducer = (state = 10, action) => {\r\n     switch (action.type) {\r\n          case 'INCREMENT_LINEWIDTH':\r\n               return Math.min(10, state + 1)\r\n          case 'DECREMENT_LINEWIDTH':\r\n               return Math.max(1, state - 1);\r\n          default:\r\n               return state;\r\n     }\r\n}\r\n\r\nconst numLinesReducer = (state = choiceBox, action) => {\r\n     switch (action.type) {\r\n          case 'INCREMENT_NUMLINES':\r\n               return Math.min(state + 1,50);\r\n          case 'DECREMENT_NUMLINES':\r\n               return Math.max(1, state - 1);\r\n          default:\r\n               return state;\r\n     }\r\n}\r\n\r\nconst lockScreenReducer = (state = false, action) => {\r\n     if (action.type === 'FLIP_LOCKSCREEN')\r\n          return !state;\r\n     else return state;\r\n}\r\n\r\n\r\n\r\nconst switchMenusReducer = (state = false, action) => {\r\n     if (action.type === 'FLIP_SWITCHMENUS')\r\n          return !state;\r\n     else return state;\r\n}\r\n\r\nconst invertColorsReducer = (state = false, action) => {\r\n     if (action.type === 'FLIP_INVERTCOLORS')\r\n          return !state;\r\n     else return state;\r\n}\r\n\r\nconst recordingReducer = (state = true, action) => {\r\n     if (action.type === 'FLIP_RECORDING')\r\n          return !state\r\n     else return state\r\n}\r\n\r\nconst recordingAzureReducer = (state = true, action) =>{\r\n     if (action.type == 'FLIP_RECORDING_AZURE')\r\n          return !state\r\n     else return state\r\n}\r\n\r\nconst switchToAzureReducer = (state = false, action) => {\r\n     if (action.type == 'SWITCH_TO_AZURE_REDUCER')\r\n          return !state\r\n     else return state\r\n}\r\n\r\nconst enteredKeyReducer = (state = false, action) =>{\r\n     if (action.type == 'FLIP_ENTERED_KEY')\r\n          return !state\r\n     else return state\r\n}\r\n\r\nconst correctAzureKeyReducer = (state = false, action) =>{\r\n     if (action.type == 'FLIP_CORRECT_AZUREKEY')\r\n          return !state\r\n     else return state\r\n}\r\n\r\nconst checkAzureKeyReducer = (state = false, action) =>{\r\n     if (action.type == 'FLIP_CHECK_AZUREKEY')\r\n          return !state\r\n     else return state\r\n}\r\n\r\n\r\nconst enteredRegionReducer = (state = false, action) =>{\r\n     if (action.type == 'FLIP_ENTERED_REGION')\r\n          return !state\r\n     else return state\r\n}\r\n\r\nconst instructionsReducer = (state = false, action) => {\r\n     if (action.type == 'FLIP_INSTRUCTIONS')\r\n          return !state\r\n     else return state\r\n}\r\n\r\nconst menuhideReducer = (state = choiceMeh, action) => {\r\n     if (action.type == 'FLIP_MENUHIDE')\r\n          return (state+1)%2\r\n     else return state\r\n}\r\n\r\nconst invertStereo = (state = 0, action) =>{\r\n     if(action.type === 'FLIP_STEREO')\r\n          return !state;\r\n     else return state;\r\n}\r\n\r\nconst invertStereoVisualReducer = (state = 0, action) =>{\r\n     switch (action.type) {\r\n          case 'FORWARD_STEREOVISUAL':\r\n              return (state + 1)%4;\r\n          case 'BACKWARD_STEREOVISUAL':\r\n               state = state -1;\r\n               if(state < 0){\r\n                    state = 3\r\n               }\r\n               return state;\r\n           default:\r\n                return state;\r\n     }\r\n}\r\n\r\nconst invertMicVisualReducer = (state = 0, action) => {\r\n     switch (action.type) {\r\n          case 'FORWARD_MICVISUAL':\r\n              return (state + 1)%4;\r\n          case 'BACKWARD_MICVISUAL':\r\n               state = state -1;\r\n               if(state < 0){\r\n                    state = 3\r\n               }\r\n               return state;\r\n           default:\r\n                return state;\r\n     }\r\n}\r\n\r\nconst allReducers = combineReducers({\r\n     onWebspeech: onWebspeechReducer,\r\n     switchToAzure: switchToAzureReducer,\r\n     checkAzureKey: checkAzureKeyReducer,\r\n     correctAzureKey: correctAzureKeyReducer,\r\n     enteredRegion: enteredRegionReducer,\r\n     enteredKey: enteredKeyReducer,\r\n     textSize: textSizeReducer,\r\n     lineWidth: lineWidthReducer,\r\n     numLines: numLinesReducer,\r\n     lockScreen: lockScreenReducer,\r\n     invertColors: invertColorsReducer,\r\n     recording: recordingReducer,\r\n     mic: invertMicVisualReducer,\r\n     switchMenus: switchMenusReducer,\r\n     recordingAzure: recordingAzureReducer,\r\n     ins: instructionsReducer,\r\n     meh: menuhideReducer,\r\n     submenu: submenuReducer,\r\n     steromic: invertStereoVisualReducer,\r\n     stereo:invertStereo,\r\n});\r\n\r\nexport default allReducers;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport allReducers from './redux/reducers';\nimport { Provider } from 'react-redux';\n\nconst store = createStore(allReducers);\n\nReactDOM.render(\n     <Provider store={store}>\n          <App />\n     </Provider>,\n     document.getElementById('root')\n);\n\n// AUTOMATIC COMMENT PROVIDED BY NPX:\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = {\n    appId: 'a6852f05-40ef-403b-a3f3-55b5194df447',\n    redirectUri: 'http://localhost:3000',\n    scopes: [\n      'user.read',\n      'calendars.read',\n      'files.read',\n      'files.readwrite'\n    ]\n  };"],"sourceRoot":""}