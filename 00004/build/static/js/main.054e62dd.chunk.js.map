{"version":3,"sources":["store/index.js","components/TopSpace/Options/OnOff/index.js","redux/actions.js","components/TopSpace/Options/Record/index.js","components/TopSpace/Options/Micvisual/index.js","components/TopSpace/Options/Save/index.js","components/AzureTopSpace/AzureOptions/Key/index.js","components/AzureTopSpace/AzureOptions/Region/index.js","components/AzureTopSpace/AzureOptions/Language/index.js","components/AzureTopSpace/AzureOptions/EnterButton/index.js","components/AzureTopSpace/AzureOptions/TargetLanguage/index.js","components/AzureTopSpace/AzureOptions/index.js","components/AzureDrawer/index.js","components/AzureTopSpace/index.js","components/Drawer/index.js","components/PlaceHolder/MenuHider/index.js","components/PopMenu/index.js","components/TopSpace/Options/PlusMinus/index.js","components/TopSpace/Options/SpringModal/index.js","components/TopSpace/Options/index.js","components/Captions/Recognition/index.js","components/AzureCaptions/AzureRecognition/index.js","components/newDrawer/theme.js","components/ButtomNavi/index.js","components/newDrawer/index.js","components/TopSpace/index.js","components/AzureCaptions/Extender/index.js","components/AzureCaptions/index.js","components/Captions/Extender/index.js","components/Captions/index.js","components/MiddleSpace/Loudness/AudioVisualiser.js","components/MiddleSpace/Loudness/AudioAnalyser.js","components/MiddleSpace/Loudness/index.js","components/DnD/Draggable/index.js","components/DnD/Droppable/index.js","components/MiddleSpace/index.js","components/PlaceHolder/index.js","App.js","serviceWorker.js","redux/reducers.js","index.js"],"names":["initialState","inputValue","initialStateRegion","initialStateSuccess","azureKeyReducer","state","action","type","Object","assign","text","store","combineReducers","azureOptions","azureKey","isSuccess","targetLanguage","currentLanguage","createStore","OnOff","props","dispatch","useDispatch","item","className","onChange","increment_textSize","decrement_textSize","increment_numLines","decrement_numLines","flip_invertColors","flip_switchMenus","Record","setting","useSelector","recording","settingAzure","recordingAzure","switchToAzure","isSuccessReducer","IconButton","color","size","onClick","Micvisual","mic","result","Button","variant","Save","textSize","_setting","localStorage","setItem","UserInput","console","log","temp_azure_key","getItem","undefined","value","temp","astr_str","length","substr","Array","join","handleChange","bind","event","this","setState","target","preventDefault","onSubmit","handleSubmit","id","placeholder","React","Component","RegionOptions","selected","LanguageOptions","EnterButton","s","document","getElementById","t","r","currentLanguageReducer","options","selectedIndex","targetLanguageReducer","azureRegionOptionsReducer","TargetLanguage","AzureOptions","Divider","useStyles","makeStyles","list","width","fullList","SwipeableTemporaryDrawer","classes","useState","left","toggleDrawer","anchor","open","key","map","Fragment","SwipeableDrawer","onClose","onOpen","clsx","role","List","AzureTopSpace","style","height","MenuHider","meh","SimpleMenu","anchorEl","setAnchorEl","title","handleClose","submenu","currentTarget","keepMounted","Boolean","MenuItem","PlusMinus","textC","decrement","increment","theme","modal","display","alignItems","justifyContent","paper","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","outline","TransitionsModal","setOpen","Modal","aria-labelledby","aria-describedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","Options","invertColors","ins","fontFamily","button","switchMenus","recognition","window","SpeechRecognition","webkitSpeechRecognition","lang","continuous","interimResults","Recognition","downloadTxtFile","element","createElement","results","push","searchEles","children","i","innerHTML","file","Blob","href","URL","createObjectURL","download","body","appendChild","click","line","targetID","appendLine","start","stop","prevProps","prevState","isRecording","onresult","e","words","from","transcript","charAt","toUpperCase","slice","isFinal","updateCurrentLine","onend","str","capts","isScrolledToBottom","scrollHeight","clientHeight","scrollTop","out","div","textContent","scrollIntoView","behavior","PureComponent","regionOption","targetLang","speechConfig","audioConfig","SpeechSDK","fromDefaultMicrophoneInput","reco","AzureRecognition","fromSubscription","speechRecognitionLanguage","addTargetLanguage","lastRecognized","recognizing","alert","language","translations","get","recognized","canceled","swal","icon","startContinuousRecognitionAsync","stopContinuousRecognitionAsync","close","err","mytheme","createMuiTheme","primary","main","blue","secondary","orange","status","danger","root","flexGrow","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","menuButton","marginRight","hide","drawer","flexShrink","drawerPaperO","drawerPaperB","drawerPaper","drawerHeader","mixins","toolbar","content","contentShift","PersistentDrawerLeft","useTheme","choice","handleDrawerOpen","handleDrawerClose","CssBaseline","ThemeProvider","AppBar","position","Toolbar","aria-label","edge","class","Drawer","direction","TopSpace","h","Extender","bottom","AzureCaptions","lineWidth","numLines","checkAzureKey","correctAzureKey","paddingString","resH","sz","margin","fontSize","overflow","paddingLeft","paddingRight","isCrorrect","checkKey","region","Captions","scrollBottom","AudioVisualiser","canvas","createRef","audioData","current","context","getContext","clearRect","drawLine","drawSpectrum","drawCircular","x","sliceWidth","beginPath","moveTo","y","lineTo","strokeStyle","iscolor","stroke","barHeight","barWidth","fillStyle","fillRect","avg","reduce","previous","rel","Math","cos","PI","sin","x_2","y_2","x_3","y_3","x_4","y_4","x_5","y_5","draw","ref","AudioAnalyser","Uint8Array","tick","audioContext","AudioContext","webkitAudioContext","analyser","createAnalyser","dataArray","frequencyBinCount","source","createMediaStreamSource","audio","connect","rafId","requestAnimationFrame","getByteTimeDomainData","getByteFrequencyData","cancelAnimationFrame","disconnect","Index","stopMicrophone","getMicrophone","ismic","navigator","mediaDevices","getUserMedia","video","getTracks","forEach","track","Draggable","drag","dataTransfer","setData","noAllowDrop","stopPropagation","draggable","onDragStart","onDragOver","Droppable","drop","data","getData","allowDrop","onDrop","Wrapper","styled","MiddleSpace","PlaceHolder","App","enteredKey","enteredRegion","sizeString","isEnteredKey","isEnteredRegion","isCorrectKey","bgColor","location","hostname","match","savedTextSize","choiceTextSize","allReducers","max","min","lockScreen","ReactDOM","render","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.054e62dd.chunk.js","sourcesContent":["import {createStore, combineReducers} from 'redux'\n\n// 7882896e3ffc4fe3b2f4c055f0914d67 <- thats the key!!\n\nconst initialState = {\n    inputValue: 'enter'\n}\n\nconst initialStateRegion = {\n    inputValue: 'enter'\n}\n\nconst initialStateSuccess= {\n    inputValue: 'false'\n}\n\nconst currentLanguage= {\n    inputValue: 'English - US'\n}\n\nconst targetLanguage= {\n    inputValue: 'English - US'\n}\n\nvar currentLanguageReducer = (state = initialState, action) =>{\n    switch(action.type) {\n        case 'INPUT_CURRENT_LANGUAGE':\n            return Object.assign({}, state, {inputValue: action.text });\n\n        default:\n            return state;\n    }\n}\n\nvar targetLanguageReducer = (state = initialState, action) =>{\n\n    switch(action.type) {\n        case 'INPUT_TARGET_LANGUAGE':\n            return Object.assign({}, state, {inputValue: action.text });\n\n        default:\n            return state;\n    }\n}\n\nvar azureKeyReducer = (state = initialState, action) =>{\n\n    switch(action.type) {\n        case 'INPUT_KEY':\n            return Object.assign({}, state, {inputValue: action.text });\n\n        default:\n            return state;\n    }\n}\n\nvar isSuccessReducer = (state = initialStateSuccess, action) =>{\n\n    switch(action.type) {\n        case 'INPUT_SUCCESS':\n            return Object.assign({}, state, {inputValue: action.text });\n        default:\n            return state;\n    }\n}\n\n\n\nvar azureRegionOptionsReducer = (state = initialStateRegion, action) => {\n    switch(action.type) {\n        case 'INPUT_REGION':\n            return Object.assign({}, state, {inputValue: action.text});\n\n        default:\n            return state;\n    }\n}\n\n\nconst allReducers = combineReducers({\n    azureOptions: azureRegionOptionsReducer,\n    azureKey: azureKeyReducer,\n    isSuccess: isSuccessReducer,\n    targetLanguage: targetLanguageReducer,\n    currentLanguage: currentLanguageReducer,\n});\n\n\nconst store = createStore(azureKeyReducer);\n\nexport default store;\n","import React from 'react'\r\nimport './index.css'\r\nimport { /*useSelector, */useDispatch } from 'react-redux'\r\n\r\n// This code only works if the initial state is Off. It's surprisingly way harder\r\n// to get this to work if you want the inital state of the checkbox to be checked.\r\n\r\nexport default function OnOff(props) {\r\n     //const setting = useSelector(props.setting)\r\n     // useDispatch returns the state modifying function, invoked below.\r\n     const dispatch = useDispatch()\r\n\r\n     return (\r\n          <div>\r\n               {props.item}\r\n               <label className=\"switch\">\r\n                    <input type=\"checkbox\" onChange={() => dispatch(props.action())}></input>\r\n                    <span className=\"slider\"></span>\r\n               </label>\r\n          </div>\r\n     )\r\n}\r\n","// Actions are the functions that we call throughout the project to change global state.\r\n\r\nexport const set_screenWidth = (width) => {\r\n     return {\r\n          type: 'SET_SCREENWIDTH',\r\n          value: width\r\n     };\r\n}\r\n\r\nexport const set_screenHeight = (height) => {\r\n     return {\r\n          type: 'SET_SCREENHEIGHT',\r\n          value: height\r\n     };\r\n}\r\n\r\nexport const increment_textSize = () => {\r\n     return { type: 'INCREMENT_TEXTSIZE' };\r\n}\r\n\r\nexport const decrement_textSize = () => {\r\n     return { type: 'DECREMENT_TEXTSIZE' };\r\n}\r\n\r\nexport const increment_lineWidth = () => {\r\n     return { type: 'INCREMENT_LINEWIDTH' };\r\n}\r\n\r\nexport const decrement_lineWidth = () => {\r\n     return { type: 'DECREMENT_LINEWIDTH' };\r\n}\r\n\r\nexport const increment_numLines = () => {\r\n     return { type: 'INCREMENT_NUMLINES' };\r\n}\r\n\r\nexport const decrement_numLines = () => {\r\n     return { type: 'DECREMENT_NUMLINES' };\r\n}\r\n\r\nexport const flip_lockScreen = () => {\r\n     return { type: 'FLIP_LOCKSCREEN' };\r\n}\r\n\r\nexport const flip_invertColors = () => {\r\n     return { type: 'FLIP_INVERTCOLORS' };\r\n}\r\n\r\nexport const flip_switchMenus = () => {\r\n     return { type: 'FLIP_SWITCHMENUS' };\r\n}\r\nexport const flip_recording = () => {\r\n     return { type: 'FLIP_RECORDING' };\r\n}\r\n\r\nexport const flip_recording_azure = () => {\r\n     return {type: 'FLIP_RECORDING_AZURE'}\r\n}\r\n\r\nexport const azure_key = (key) => {\r\n     return {\r\n          type: 'KEY_AZURE',\r\n          key: \"dsfdsf\"\r\n     }\r\n}\r\nexport const azure_region = (region) => {\r\n     return {\r\n          type: 'AZURE_REGION',\r\n          region: \"dsfdsf\"\r\n     }\r\n}\r\nexport const flip_micVisual = () => {\r\n     return { type: 'FLIP_MICVISUAL' };\r\n}\r\nexport const flip_entered_key = () => {\r\n     return { type: 'FLIP_ENTERED_KEY' };\r\n}\r\nexport const flip_entered_region = () => {\r\n     return { type: 'FLIP_ENTERED_REGION' };\r\n}\r\nexport const flip_correct_azureKey = () => {\r\n     return { type: 'FLIP_CORRECT_AZUREKEY' };\r\n}\r\nexport const flip_switch_to_azure = () => {\r\n     return { type: 'FLIP_SWITCH_TO_AZURE' };\r\n}\r\nexport const flip_check_azureKey = () => {\r\n     return { type: 'FLIP_CHECK_AZUREKEY' };\r\n}\r\nexport const flip_instructions = () =>{\r\n     return { type: 'FLIP_INSTRUCTIONS'};\r\n}\r\n\r\nexport const flip_menuhide = () =>{\r\n     return { type: 'FLIP_MENUHIDE'};\r\n}\r\n\r\nexport const submenu1 = () =>{\r\n     return { type: 'SUBMENU_1'}\r\n}\r\nexport const submenu2 = () =>{\r\n     return { type: 'SUBMENU_2'}\r\n}","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport store from '../../../../store'\r\nimport './index.css'\r\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PauseCircleFilledIcon from '@material-ui/icons/PauseCircleFilled';\r\nimport { flip_recording, flip_recording_azure } from '../../../../redux/actions'\r\n\r\nexport default function Record(props) {\r\n     const recording = (state) => state.recording\r\n     const recordingAzure = (state) => state.recordingAzure\r\n     const switchToAzure = (state) => state.switchToAzure\r\n     const setting = useSelector(recording)\r\n     const settingAzure = useSelector(recordingAzure)\r\n     const settingSwitchToAzure = useSelector(switchToAzure)// Get current value of recording.\r\n     // useDispatch returns the state modifying function, invoked below.\r\n     const dispatch = useDispatch()\r\n     // record-btn-wrapper toggles between the two buttons using the TopSpace\r\n     // hidden/shown CSS.\r\n     if (store.isSuccessReducer == 'inProgress') {\r\n       return(\r\n            <div>\r\n                 Listening\r\n                 <IconButton className = \"Play\" color= \"inherit\" size = \"large\"  >\r\n                      <PauseCircleFilledIcon className = \"pause\"/>\r\n                 </IconButton>\r\n            </div>\r\n       )\r\n     } else if (store.isSuccessReducer == 'success') {\r\n       if (settingAzure == true){\r\n          return(\r\n               <div>\r\n                    Listening\r\n                    <IconButton className = \"Play\" color= \"inherit\" size = \"large\" onClick={() => dispatch(flip_recording_azure())} >\r\n                         <PauseCircleFilledIcon className = \"pause\"/>\r\n                    </IconButton>\r\n               </div>\r\n          )\r\n     } else{\r\n          return(\r\n               <div>\r\n                    To Start\r\n                    <IconButton className = \"Play\" color= \"inherit\" size = \"large\" onClick={() => dispatch(flip_recording_azure())}>\r\n                         <PlayCircleFilledIcon className = \"start\"/>\r\n                    </IconButton>\r\n               </div>\r\n          )\r\n     }\r\n     } else {\r\n       \r\n       if (setting == true){\r\n             return(\r\n                  <div>\r\n                       Listening\r\n                       <IconButton className = \"Play\" color= \"inherit\" size = \"large\" onClick={() => dispatch(flip_recording())} >\r\n                            <PauseCircleFilledIcon className = \"pause\"/>\r\n                       </IconButton>\r\n                  </div>\r\n             )\r\n        } else{\r\n             return(\r\n                  <div>\r\n                       To Start\r\n                       <IconButton className = \"Play\" color= \"inherit\" size = \"large\" onClick={() => dispatch(flip_recording())}>\r\n                            <PlayCircleFilledIcon className = \"start\"/>\r\n                       </IconButton>\r\n                  </div>\r\n             )\r\n        }\r\n   }\r\n}\r\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport './index.css'\nimport { flip_micVisual } from '../../../../redux/actions'\nimport { Button } from \"@material-ui/core\"\n\n\n// This code only works if the initial state is Off. It's surprisingly way harder\n// to get this to work if you want the inital state of the checkbox to be checked.\n\nexport default function Micvisual(props) {\n\n    const mic = (state) => state.mic\n    const setting = useSelector(mic) // Get current value of recording.\n    // useDispatch returns the state modifying function, invoked below.\n    const dispatch = useDispatch()\n    let result = \"\"\n    let text = \"\"\n\n    // flip recording when space bar is pressed\n\n     //const setting = useSelector(props.setting)\n     // useDispatch returns the state modifying function, invoked below.\n\n     if (setting == 0){\n         result = \"No Visualization\"\n         text = \"None\"\n     }else if (setting == 1){\n         result = \"Line Visualization\"\n         text = \"Line\"\n     }else if (setting == 2){\n         result = \"Spectrum Visualization\"\n         text = \"Spectrum\"\n     }else{\n         result = \"Circular Visualization\"\n         text = \"Circular\"\n     }\n\n     return (\n          <div>\n              {result}\n               <div className=\"audio_visual\">\n                    <Button className=\"audio_plus\" color = \"inherit\" variant = \"outlined\"\n                         onClick={() => dispatch(flip_micVisual())} >{text}\n                    </Button>\n\n               </div>\n          </div>\n     )\n}\n\n","import React from \"react\"\nimport {useSelector} from 'react-redux'\nimport {Button} from \"@material-ui/core\"\nimport './index.css'\n\nfunction saveData(_setting){\n    localStorage.setItem('text',_setting);\n}\n\n\nexport default function Save() {\n    const textSize = (state) => state.textSize\n    const setting = useSelector(textSize)\n\n\n    return (\n        <div className = 'save-wrapper'>\n            <Button color = 'inherit' variant = 'outlined' onClick = {()=>saveData(setting)}>Save</Button>\n        </div>\n    )\n}","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {connect} from 'react-redux';\nimport store from '../../../../store/';\nimport { flip_entered_key, azure_key } from '../../../../redux/actions'\nimport './index.css'\n\n\nclass UserInput extends React.Component {\n\n\n  constructor(props) {\n\n    super(props);\n    console.log(store.azureKeyReducer)\n    var temp_azure_key = localStorage.getItem('azure_subscription_key');\n    if (store.azureKeyReducer == undefined) {\n    this.state = {value: temp_azure_key};\n    } else {\n      if (store.azureKeyReducer != 'incorrect' && store.azureKeyReducer != 'empty') {\n      var temp = store.azureKeyReducer;\n      var astr_str ='';\n      if (temp.length > 5) {\n      temp = temp.substr(temp.length - 4);\n      astr_str = new Array(store.azureKeyReducer.length - 4).join( '*' );\n    }\n      }\n      this.state = {value: astr_str + temp};\n    }\n    if (this.state != undefined) {\n      if (this.state.value != undefined && this.state.value != \"\") {\n        store.azureKeyReducer = this.state.value;\n      }\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n\n  }\n  handleChange(event) {\n    this.setState({value: event.target.value});\n    store.azureKeyReducer = event.target.value;\n    event.preventDefault();\n    localStorage.setItem('azure_subscription_key', event.target.value);\n  }\n\n\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          <div className = \"keytext\">\n            Enter Azure Key:\n          </div>\n\n          <div className = \"keybox\">\n            <input id= \"azure_key_value\" type=\"text\" placeholder= \"Azure Subscription Key\" value={this.state.value} onChange={this.handleChange} />\n          </div>\n\n        </label>\n\n      </form>\n    );\n  }\n}\nexport default UserInput;\n","import React, { useState } from 'react';\r\nimport onClickOutside from 'react-onclickoutside';\r\nimport store from '../../../../store/';\r\nimport './index.css'\r\n\r\nexport default function RegionOptions(props) {\r\n\r\n    return (\r\n        <div className = \"regionSelect\">\r\n            <select id=\"regionOptions\">\r\n                        <option value=\"westus\">US West</option>\r\n                        <option value=\"westus2\">US West 2</option>\r\n                        <option value=\"ussouthcentral\">US South Central</option>\r\n                        <option value=\"northcentralus\" selected=\"selected\">US West Central</option>\r\n                        <option value=\"useast\">US East</option>\r\n                        <option value=\"useast2\">US East 2</option>\r\n                        <option value=\"europewest\">Europe West</option>\r\n                        <option value=\"europenorth\">Europe North</option>\r\n                        <option value=\"brazilsouth\">South Brazil</option>\r\n                        <option value=\"australiaeast\">East Australia</option>\r\n                        <option value=\"asiasoutheast\">Asia Southeast</option>\r\n                        <option value=\"asiaeast\">Asia East</option>\r\n                    </select>\r\n        </div>\r\n    )\r\n}\n","import React, { useState } from 'react';\nimport onClickOutside from 'react-onclickoutside';\nimport store from '../../../../store/';\nimport './index.css'\n\nexport default function LanguageOptions(props) {\n\n    return (\n        <div className = \"languageSelect\">\n            <select id=\"languageOptions\">\n                        <option value=\"ar-EG\">Arabic - EG</option>\n                        <option value=\"ca-ES\">Catalan - ES</option>\n                        <option value=\"da-DK\">Danish - DK</option>\n                        <option value=\"da-DK\">Danish - DK</option>\n                        <option value=\"de-DE\">German - DE</option>\n                        <option value=\"en-AU\">English - AU</option>\n                        <option value=\"en-CA\">English - CA</option>\n                        <option value=\"en-GB\">English - GB</option>\n                        <option value=\"en-IN\">English - IN</option>\n                        <option value=\"en-NZ\">English - NZ</option>\n                        <option value=\"en-US\" selected=\"selected\">English - US</option>\n                        <option value=\"es-ES\">Spanish - ES</option>\n                        <option value=\"es-MX\">Spanish - MX</option>\n                        <option value=\"fi-FI\">Finnish - FI</option>\n                        <option value=\"fr-CA\">French - CA</option>\n                        <option value=\"fr-FR\">French - FR</option>\n                        <option value=\"hi-IN\">Hindi - IN</option>\n                        <option value=\"it-IT\">Italian - IT</option>\n                        <option value=\"ja-JP\">Japanese - JP</option>\n                        <option value=\"ko-KR\">Korean - KR</option>\n                        <option value=\"nb-NO\">Norwegian - NO</option>\n                        <option value=\"nl-NL\">Dutch - NL</option>\n                        <option value=\"pl-PL\">Polish - PL</option>\n                        <option value=\"pt-BR\">Portuguese - BR</option>\n                        <option value=\"pt-PT\">Portuguese - PT</option>\n                        <option value=\"ru-RU\">Russian - RU</option>\n                        <option value=\"sv-SE\">Swedish - SE</option>\n                        <option value=\"zh-CN\">Chinese - CN</option>\n                        <option value=\"zh-HK\">Chinese - HK</option>\n                        <option value=\"zh-TW\">Chinese - TW</option>\n\n                    </select>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport './index.css'\nimport store from '../../../../store/';\nimport { flip_entered_key} from '../../../../redux/actions'\nimport { Button } from \"@material-ui/core\"\nimport '../Language'\n\n\n// This code only works if the initial state is Off. It's surprisingly way harder\n// to get this to work if you want the inital state of the checkbox to be checked.\n\nexport default function EnterButton(props) {\n    const dispatch = useDispatch()\n    var s = document.getElementById(\"languageOptions\");\n    var t = document.getElementById(\"targetlanguageoptions\");\n    var r = document.getElementById(\"regionOptions\");\n    if (s != null) {\n      store.currentLanguageReducer = s.options[s.selectedIndex].value;\n    } else {\n      store.currentLanguageReducer = 'en-US';\n    }\n\n    if (t != null) {\n      store.targetLanguageReducer = t.options[t.selectedIndex].value;\n    } else {\n      store.targetLanguageReducer = 'en';\n    }\n\n    if (r != null) {\n      store.azureRegionOptionsReducer = r.options[r.selectedIndex].value;\n    } else {\n      store.azureRegionOptionsReducer = 'northcentralus';\n    }\n    console.log(\"in here???\")\n\n    // flip recording when space bar is pressed\n\n     //const setting = useSelector(props.setting)\n     // useDispatch returns the state modifying function, invoked below.\n\n     return (\n          <div>\n               <div className=\"setting-wrapper\">\n                    <div className = \"setting-wrapper2\">\n                        <Button className=\"enter\"\n                        onClick={() => dispatch(flip_entered_key())} >\n                            <div id = \"entertext\">\n                                Enter\n                            </div>\n                        </Button>\n                    </div>\n               </div>\n          </div>\n     )\n}\n","import React, { useState } from 'react';\nimport onClickOutside from 'react-onclickoutside';\nimport store from '../../../../store/';\nimport './index.css'\n\nexport default function TargetLanguage(props) {\n\n    return (\n        <div className = \"targetLanguageSelect\">\n            <select id=\"targetlanguageoptions\">\n                        <option value=\"ar-\">TESTINGTESTSSS</option>\n                        <option value=\"ca\">Catalan - ES</option>\n                        <option value=\"da\">Danish - DK</option>\n                        <option value=\"da\">Danish - DK</option>\n                        <option value=\"de\">German - DE</option>\n                        <option value=\"en\">English - AU</option>\n                        <option value=\"en\">English - CA</option>\n                        <option value=\"en\">English - GB</option>\n                        <option value=\"en\">English - IN</option>\n                        <option value=\"en\">English - NZ</option>\n                        <option value=\"en\" selected=\"selected\">English - US</option>\n                        <option value=\"es\">Spanish - ES</option>\n                        <option value=\"es\">Spanish - MX</option>\n                        <option value=\"fi\">Finnish - FI</option>\n                        <option value=\"fr\">French - CA</option>\n                        <option value=\"fr\">French - FR</option>\n                        <option value=\"hi\">Hindi - IN</option>\n                        <option value=\"it\">Italian - IT</option>\n                        <option value=\"ja\">Japanese - JP</option>\n                        <option value=\"ko\">Korean - KR</option>\n                        <option value=\"nb\">Norwegian - NO</option>\n                        <option value=\"nl\">Dutch - NL</option>\n                        <option value=\"pl\">Polish - PL</option>\n                        <option value=\"pt\">Portuguese - BR</option>\n                        <option value=\"pt\">Portuguese - PT</option>\n                        <option value=\"ru\">Russian - RU</option>\n                        <option value=\"sv\">Swedish - SE</option>\n                        <option value=\"zh\">Chinese - CN</option>\n                        <option value=\"zh\">Chinese - HK</option>\n                        <option value=\"zh\">Chinese - TW</option>\n                    </select>\n        </div>\n    )\n}\n","import React from 'react'\nimport UserInput from './Key'\nimport Dropdown from './Region'\nimport AzureRecord from './AzureRecord'\nimport EnterButton from './EnterButton'\nimport { Divider } from '@material-ui/core';\nimport {\n     flip_switchMenus,\n     flip_invertColors,\n     flip_micVisual,\n     increment_textSize,\n     decrement_textSize,\n     increment_lineWidth,\n     decrement_lineWidth,\n     increment_numLines,\n     decrement_numLines\n} from '../../../redux/actions'\n\nimport store from '../../../store/';\nimport LanguageOptions from './Language'\nimport TargetLanguage from './TargetLanguage'\n\n\n\nexport default function AzureOptions() {\n    // These are functions that take an object and return an element of the object.\n    // They are passed to useSelector, which feeds the global state object into them.\n    return (\n         <div className=\"AzureOptions\" id=\"azure-options-space\">\n             <div className = \"azuremenutext\">\n                    <b>AZURE</b>\n                </div>\n              <div className = \"azuremenutext2\">\n                    <b>OPTIONS</b>\n               </div>\n                  <div className = \"divider\">\n                    <Divider variant=\"middle\" />\n               </div>\n\n\n\n               <div className=\"item-wrapper\">\n                    <UserInput store ={store}/>\n               </div>\n\n               <br></br> <br></br><br></br><br></br>\n               <div>\n                 <div className = \"regionText\">\n                     Region:\n                 </div>\n                 <Dropdown/>\n               </div>\n              <div className=\"item-wrapper\">\n                   <EnterButton />\n              </div>\n              <div>\n                <div className = \"languageText\">\n                    Source Lang:\n                </div>\n                <LanguageOptions/>\n              </div>\n              <div>\n                <div className = \"transLanguageText\">\n                    Translational Lang:\n                </div>\n                <TargetLanguage/>\n              </div>\n\n         </div>\n    );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport { green } from '@material-ui/core/colors';\nimport Options from \"../AzureTopSpace/AzureOptions\"\n\nconst drawerWidth = '22vw';//drawer width\nconst useStyles = makeStyles({\n  list: {\n    width: drawerWidth,\n  },\n  fullList: {\n    width: 'auto',\n  },\n});\n\nexport default function SwipeableTemporaryDrawer() {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    left: false,\n  });\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state, [anchor]: open });\n  };\n\n  const list = (anchor) => (\n    <div\n      className={clsx(classes.list, {\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\n      })}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, true)}\n    >\n      <List>\n        {/* {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))} */}\n        <Options />\n\n      </List>\n      <Divider />\n      <List>\n        {/* {['All mail', 'Trash', 'Spam'].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))} */}\n      </List>\n    </div>\n  );\n  return (\n    <div>\n      {['Try Out Azure'].map((anchor) => (\n        <React.Fragment key={anchor}>\n          <Button onClick={toggleDrawer(anchor, true)} color = \"primary\">{anchor}</Button>\n          <SwipeableDrawer\n            anchor={anchor}\n            open={state[anchor]}\n            onClose={toggleDrawer(anchor, false)}\n            onOpen={toggleDrawer(anchor, true)}\n          >\n            {list(anchor)}\n          </SwipeableDrawer>\n        </React.Fragment>\n      ))}\n    </div>\n  );\n}\n","import React from 'react'\nimport './index.css'\nimport Options from './AzureOptions'\nimport SwipeableTemporaryDrawer from '../../components/AzureDrawer'\n\n\n// JavaScript functions used: setTimeout, clearTimeout, bind, getElementById,\n// addEventListener, removeEventListener\n// React functions used: constructor, setState, componentDidMount, render\nclass AzureTopSpace extends React.Component {\n     // // When options are shown:\n     //      // Clicking in the optionsSpace triggers show() then resetTimeout().\n     //      // Clicking in the hideSpace triggers hide().\n     // // When options are not shown:\n     //      // Clicking anywhere in the outer div triggers show().\n     // // Event listeners enforce these rules in outer and optionsSpace elements.\n     // // hideSpace uses a simple onClick, which only works when the element is shown.\n     //\n     // constructor(props) {\n     //      super(props)\n     //      this.state = {\n     //           shown: true, // Whether the options area is shown. Used in JSX.\n     //           // Set 15 second timeout and when it expires, run this.hide.\n     //           // Immediately store the returned id for later use.\n     //           timeoutId: setTimeout(this.hide.bind(this), 15000)\n     //      }\n     //      // Bind functions so we can use the keyword 'this' inside them.\n     //      this.hide = this.hide.bind(this)\n     //      this.show = this.show.bind(this)\n     //      this.resetTimeout = this.resetTimeout.bind(this)\n     // }\n     //\n     // hide() { // Hide the options area from view.\n     //      this.setState({ shown: false })\n     //      document.getElementById('outer').addEventListener('click', this.show)\n     // }\n     //\n     // show() { // Show the options area. If already shown, just reset timeout.\n     //      this.setState({ shown: true })\n     //      document.getElementById('outer').removeEventListener('click', this.show)\n     //      this.resetTimeout()\n     // }\n     //\n     // resetTimeout() { // Reset the 15 second timer for hiding the options.\n     //      clearTimeout(this.state.timeoutId) // Cancel the timeout set earlier.\n     //      var toId = setTimeout(this.hide, 15000) // Set a new 15 second timeout.\n     //      this.setState({timeoutId: toId}) // Store the id of the new timeout.\n     // }\n     // // The first time the component mounts, add an event listener to the options\n     // // space, so whenever it's clicked, it shows.\n     // componentDidMount() {\n     //      document.getElementById('optionsSpace').addEventListener('click', this.show)\n     // }\n\n     render() {\n          var h = '32vh'; // I don't remember why I set the height like this.\n          // The Options component takes a function as a prop.\n          return (\n               <div className=\"AzureTopSpace\" id=\"outer\" style={{ height: h }}>\n                     <div >\n                    <div className=\"item-wrapper\">\n                        <SwipeableTemporaryDrawer color = \"secondary\"/>\n                    </div>\n                    </div>\n               </div>\n          )\n     }\n}\n\nexport default AzureTopSpace;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport { green } from '@material-ui/core/colors';\nimport Options from \"../TopSpace/Options\"\n\nconst useStyles = makeStyles({\n  list: {\n    width: '20vw',\n  },\n  fullList: {\n    width: 'auto',\n  },\n});\n\nexport default function SwipeableTemporaryDrawer() {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    left: false,\n  });\n\n  const toggleDrawer = (anchor, open) => (event) => {\n\n\n    setState({ ...state, [anchor]: open });\n  };\n\n  const list = (anchor) => (\n    <div\n      className={clsx(classes.list, {\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\n      })}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor,true)}\n    >\n      <List>\n        {/* {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))} */}\n        <Options />\n\n      </List>\n      <Divider />\n      <List>\n        {/* {['All mail', 'Trash', 'Spam'].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))} */}\n      </List>\n    </div>\n  );\n\n  return (\n    <div>\n      {['left'].map((anchor) => (\n        <React.Fragment key={anchor}>\n          <Button onClick={toggleDrawer(anchor, true)} color = \"inherit\">{anchor}</Button>\n          <SwipeableDrawer\n            anchor={anchor}\n            open={state[anchor]}\n            onClose={toggleDrawer(anchor, false)}\n            onOpen={toggleDrawer(anchor, true)}\n          >\n            {list(anchor)}\n          </SwipeableDrawer>\n        </React.Fragment>\n      ))}\n    </div>\n  );\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { flip_menuhide } from '../../../redux/actions'\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nexport default function MenuHider(props){\n    const meh = (state) => state.meh;\n    const setting = useSelector(meh);\n    const dispatch = useDispatch();\n\n    if (setting == false){\n        return (\n            <div>\n                <IconButton className = \"c2\" color = \"inherit\" onClick = {()=>dispatch(flip_menuhide())}>\n                    <ArrowUpwardIcon className = 'c3' />\n                </IconButton>\n            </div>\n        )\n    }else{\n        return (\n            <div>\n                <IconButton className = \"c2\" color = \"inherit\" onClick = {()=>dispatch(flip_menuhide())}>\n                    <ArrowDownwardIcon className = 'c3' />\n                </IconButton>\n            </div>\n        )\n    }\n\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport {useSelector,useDispatch} from 'react-redux';\nimport { submenu1,submenu2 } from '../../redux/actions';\n\n\n \n\n\nexport default function SimpleMenu(props) {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const textContent = props.text;\n  const titleContent = props.title;\n\n  const submenu = (state) => state.submenu;\n  const dispatch = useDispatch();\n  const setting = useSelector(submenu);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div>\n      <IconButton  onClick={handleClick}>\n        <MenuIcon />\n      </IconButton>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <MenuItem onClick={() => dispatch(submenu1())}>item1</MenuItem>\n        <MenuItem onClick={() => dispatch(submenu2())}>item2</MenuItem>\n        {/* <MenuItem>{setting}</MenuItem> */}\n        <MenuItem onClick={handleClose}>return</MenuItem>\n      </Menu>\n    </div>\n  );\n}\n","import React from 'react'\r\nimport './index.css'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport {Button} from \"@material-ui/core\"\r\nimport PopMenu from '../../../PopMenu'\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\n\r\nexport default function PlusMinus(props) {\r\n     const setting = useSelector(props.setting) // Get current value of the setting.\r\n     // useDispatch returns the state modifying function, invoked below.\r\n     const dispatch = useDispatch()\r\n     const textC = props.item + ':' + setting\r\n     return (\r\n          <div>\r\n               {textC}\r\n               <div className = \"setting_wrapper\">\r\n                    <Button className = \"minus\" color = \"inherit\" variant = \"outlined\" size = \"small\"\r\n                      onClick={() => dispatch(props.decrement())}>-</Button>\r\n                    <Button  className = \"plus\" color = \"inherit\" variant = \"outlined\" size = \"small\"\r\n                      onClick={() => dispatch(props.increment())}>+</Button>\r\n              </div>\r\n          </div>\r\n     );\r\n}\r\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport {Button} from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    outline: 'none'\n  },\n}));\n\nexport default function TransitionsModal() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button color = 'inherit' variant = 'outlined' onClick={handleOpen}>\n        Instructions\n      </Button>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n        \n      >\n        <Fade in={open}>\n          <div className={classes.paper}>\n            <h2 id=\"transition-modal-title\">Tutorial</h2>\n            <p id=\"transition-modal-description\">\n                    -The text size button can be used to change size of \n                    text shown in caption space.<br />\n                    -There are 3 different graph can be toggled to help\n                    reflex the surrounding voices by clicking forth button<br />\n                    -For circular graph, try to drag it around.<br />\n                    -To stop captioning just click switch button for Recording. Also \n                    click again to resume captioning.<br />\n                    -To memorize textsize option, click save after choosing a proper size of the text.\n            </p>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  );\n}\n","import React from 'react'\r\nimport OnOff from './OnOff'\r\nimport Record from './Record'\r\nimport store from '../../../store'\r\nimport Micvisual from './Micvisual'\r\nimport Save from './Save'\r\nimport {useSelector} from \"react-redux\"\r\nimport Instru from \"./Instru\"\r\nimport Divider from '@material-ui/core/Divider';\r\nimport AzureTopSpace from '../../AzureTopSpace'\r\nimport './index.css'\r\nimport SwipeableTemporaryDrawer from \"../../Drawer\"\r\nimport MenuHider from '../../PlaceHolder/MenuHider'\r\nimport PlusMinus from './PlusMinus'\r\nimport {Button} from '@material-ui/core';\r\nimport SpringModal from './SpringModal'\r\nimport PopMenu from '../../PopMenu'\r\n\r\nimport {\r\n     flip_switchMenus,\r\n     flip_invertColors,\r\n     flip_micVisual,\r\n     increment_textSize,\r\n     decrement_textSize,\r\n} from '../../../redux/actions'\r\n\r\nexport default function Options() {\r\n     // These are functions that take an object and return an element of the object.\r\n     // They are passed to useSelector, which feeds the global state object into them.\r\n     const textSize = (state) => state.textSize\r\n     const lineWidth = (state) => state.lineWidth\r\n     const numLines = (state) => state.numLines\r\n     const invertColors = (state) => state.invertColors\r\n     const switchMenus = (state) => state.switchMenus\r\n     const ins = (state) => state.ins\r\n     const if_ins = useSelector((state) => state.ins)\r\n     var choice = if_ins ? 'appear' : 'disappear';\r\n\r\n     if (store.isSuccessReducer == 'success') {\r\n       return (\r\n            <div className=\"Options\" id=\"options-space\">\r\n                <h2 style = {{fontFamily:\"Arial\"}}>OPTIONS</h2>\r\n                <Divider/>\r\n                <div className=\"item-wrapper\">\r\n                    <Save />\r\n                 </div>\r\n                 <div className=\"item-wrapper\">\r\n                      <PlusMinus item=\"Text size\" setting={textSize}\r\n                           increment={increment_textSize}\r\n                           decrement={decrement_textSize} />\r\n                 </div>\r\n\r\n                 <div className=\"item-wrapper\">\r\n                      <OnOff item=\"Invert colors\" setting={invertColors}\r\n                           action={flip_invertColors} />\r\n                 </div>\r\n                 <div className=\"item-wrapper\">\r\n                      <Micvisual />\r\n                 </div>\r\n                 <div className=\"item-wrapper\">\r\n                      <Record />\r\n                 </div>\r\n                     <div className = 'item-wrapper'>\r\n                          <SpringModal />\r\n                    </div>\r\n                 <Divider />\r\n            </div>\r\n       );\r\n     } else {\r\n     return (\r\n          <div className=\"Options\" id=\"options-space\">\r\n          <h2 style = {{fontFamily:\"Arial\"}}>OPTIONS</h2>\r\n          <Divider/>\r\n               <div className=\"item-wrapper\">\r\n                      <Save />\r\n               </div>\r\n               <div className=\"item-wrapper\">\r\n                    <PlusMinus item=\"Text size\" setting={textSize}\r\n                         increment={increment_textSize}\r\n                         decrement={decrement_textSize} />\r\n               </div>\r\n               <div className=\"item-wrapper\">\r\n                    <OnOff item=\"Invert colors\" setting={invertColors}\r\n                         action={flip_invertColors} />\r\n               </div>\r\n               <div className=\"item-wrapper\">\r\n                    <Micvisual />\r\n               </div>\r\n               <div className=\"item-wrapper\">\r\n                    <Record />\r\n               </div>\r\n               <div className = 'item-wrapper'>\r\n                    <SpringModal />\r\n               </div>\r\n               <div className=\"item-wrapper\">\r\n                    <AzureTopSpace button=\"Switch To Azure\" setting={switchMenus}\r\n                         action={flip_switchMenus} />\r\n               </div>\r\n          </div>\r\n     );\r\n   }\r\n}\r\n","import React from 'react'\r\nimport store from '../../../store/';\r\n\r\nimport $ from 'jquery';\r\nimport ScrollButton from 'react-scroll-button'\r\nimport ScrollToBottom from 'react-scroll-to-bottom';\r\n\r\n\r\nconst SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition\r\nconst recognition = new SpeechRecognition()\r\n\r\nrecognition.lang = 'en-US'\r\nrecognition.continuous = false\r\nrecognition.interimResults = true\r\n\r\n// In this document, a 'line' is more like a sentence.\r\n// this.state.line is like a buffer of text held at the end of the page. When the line\r\n// is finished, the buffer is flushed: a new div is appended to the 'out' div and\r\n// this.state.line is reset for the next line.\r\n\r\n\r\n\r\n\r\nexport class Recognition extends React.PureComponent {\r\n     constructor() {\r\n          super()\r\n          this.state = {\r\n               line: '',\r\n               targetID: 'curr'\r\n               //recording: true\r\n          }\r\n          this.appendLine = this.appendLine.bind(this)\r\n          this.start = this.start.bind(this)\r\n          this.stop = this.stop.bind(this)\r\n     }\r\n\r\n     componentDidMount() {\r\n        if (store.azureKeyReducer == undefined) {\r\n          this.start()\r\n        }  else {\r\n          this.stop()\r\n        }\r\n     }\r\n\r\n     // Global state 'recording' is passed as a prop. componentDidUpdate is invoked\r\n     // when props change, therefore also when 'recording' changes.\r\n     componentDidUpdate(prevProps, prevState) {\r\n          if (prevProps.isRecording === this.props.isRecording)\r\n               return\r\n          if (this.props.isRecording)\r\n               this.start()\r\n          else this.stop()\r\n     }\r\n\r\n     start() {\r\n          recognition.start()\r\n          // Map the complex recognition result object to a string. You can explore\r\n          // the full object with console.log(e).\r\n          recognition.onresult = (e) => {\r\n               let words = Array.from(e.results)\r\n                 .map(result => result[0])\r\n                 .map(result => result.transcript)\r\n                 .join('');\r\n               words = words.charAt(0).toUpperCase() + words.slice(1)\r\n               if (e.results[0].isFinal) // if line is final\r\n                    this.appendLine(words + '.') // flush buffer\r\n               else this.updateCurrentLine(words) // update state\r\n          }\r\n          // By default, recognition stops when it gets a final result.\r\n          recognition.onend = recognition.start // override this behavior\r\n     }\r\n\r\n     downloadTxtFile = () => {\r\n       const element = document.createElement(\"a\");\r\n\r\n\r\n       var results = [];\r\n       results.push(\"transcript History \\n\\n\\n\\n\");\r\n       var searchEles = document.getElementById(\"out\").children;\r\n       console.log(searchEles);\r\n\r\n       for(var i = 0; i < searchEles.length; i++) {\r\n         console.log(searchEles[i].innerHTML[1,searchEles[i].innerHTML.length-2]);\r\n         results.push(searchEles[i].innerHTML + '\\n');\r\n       }\r\n\r\n       // const file = new Blob([document.getElementById('out').value],\r\n       //             {type: 'text/plain;charset=utf-8'});\r\n       const file = new Blob([results],\r\n                   {type: 'text/plain;charset=utf-8'});\r\n       element.href = URL.createObjectURL(file);\r\n       element.download = \"Script.txt\";\r\n       document.body.appendChild(element);\r\n       element.click();\r\n     }\r\n\r\n     stop() {\r\n          recognition.onresult = () => {} // do nothing with results\r\n          recognition.onend = () => {} // don't restart when ending\r\n          recognition.stop()\r\n     }\r\n\r\n     updateCurrentLine(str) {\r\n          const capts = document.getElementById('captionsSpace')\r\n          var isScrolledToBottom = capts.scrollHeight - capts.clientHeight <= capts.scrollTop + 1\r\n          this.setState({ line: str })\r\n          if (isScrolledToBottom)\r\n               capts.scrollTop = capts.scrollHeight - capts.clientHeight\r\n     }\r\n\r\n     appendLine(str) {\r\n          const capts = document.getElementById('captionsSpace')\r\n          const out = document.getElementById('out')\r\n          var isScrolledToBottom = capts.scrollHeight - capts.clientHeight <= capts.scrollTop + 1\r\n          var div = document.createElement('div') // create new div\r\n          div.textContent = str // set new div's text to the updated current line\r\n          out.appendChild(div) // add the new div to the document inside 'out' element\r\n          this.setState({ line: '' }) // reset line\r\n          if (isScrolledToBottom)\r\n               capts.scrollTop = capts.scrollHeight - capts.clientHeight // scroll to bottom\r\n     }\r\n\r\n     scrollBottom() {\r\n       var element = document.getElementById(\"curr\");\r\n       element.scrollIntoView({behavior: \"smooth\"});\r\n     }\r\n\r\n     render() {\r\n          // out holds all past lines. curr holds the current line.\r\n          return (\r\n               <div>\r\n                    <div id='out'></div>\r\n                    <div id='curr'>{this.state.line}</div>\r\n               </div>\r\n          )\r\n     }\r\n}\r\n\r\nexport default Recognition\r\n","import React from 'react'\r\nimport { isPureish } from '@babel/types';\r\nimport * as SpeechSDK from 'microsoft-cognitiveservices-speech-sdk'\r\nimport AzureKey from '../../AzureTopSpace/AzureOptions/Key';\r\nimport store from '../../../store/';\r\nimport swal from 'sweetalert';\r\n\r\nimport $ from 'jquery';\r\nimport ScrollButton from 'react-scroll-button'\r\nimport ScrollToBottom from 'react-scroll-to-bottom';\r\n\r\nimport {useSelector, connect} from 'react-redux'\r\nimport {bindActionCreators} from \"redux\"\r\nvar key = 'empty';\r\n//const key = this.props.key;\r\nvar regionOption = 'northcentralus';\r\nvar lang = 'en-US';\r\nvar targetLang = 'en';\r\nvar speechConfig = null;\r\nconst audioConfig = SpeechSDK.AudioConfig.fromDefaultMicrophoneInput();\r\nvar reco = null;\r\nexport class AzureRecognition extends React.PureComponent {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n           line: '',\r\n        }\r\n        this.appendLine = this.appendLine.bind(this)\r\n        this.start = this.start.bind(this)\r\n        this.stop = this.stop.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.start();\r\n    }\r\n    scrollBottom() {\r\n      var element = document.getElementById(\"curr\");\r\n      element.scrollIntoView({behavior: \"smooth\"});\r\n    }\r\n\r\n    appendLine(str) {\r\n     const capts = document.getElementById('captionsSpace')\r\n     const out = document.getElementById('out')\r\n     var isScrolledToBottom = capts.scrollHeight - capts.clientHeight <= capts.scrollTop + 1\r\n     var div = document.createElement('div') // create new div\r\n     div.textContent = str // set new div's text to the updated current line\r\n     out.appendChild(div) // add the new div to the document inside 'out' element\r\n     this.setState({ line: '' }) // reset line\r\n     if (isScrolledToBottom)\r\n          capts.scrollTop = capts.scrollHeight - capts.clientHeight // scroll to bottom\r\n}\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.isRecording === this.props.isRecording)\r\n             return\r\n      if (this.props.isRecording)\r\n             this.start()\r\n        else this.stop()\r\n   }\r\n    start() {\r\n        console.log(store.isSuccessReducer)\r\n        if (store.isSuccessReducer != 'success') {\r\n        store.isSuccessReducer = 'inProgress';\r\n        if (store.azureKeyReducer == undefined || store.azureRegionOptionsReducer == undefined || store.azureKeyReducer == '' || store.azureRegionOptionsReducer == '') {\r\n          store.azureKeyReducer = 'empty'\r\n          store.azureRegionOptionsReducer = 'empty'\r\n        } else {\r\n          key = store.azureKeyReducer;\r\n          regionOption = store.azureRegionOptionsReducer;\r\n        }\r\n          speechConfig = SpeechSDK.SpeechTranslationConfig.fromSubscription(key, regionOption);\r\n          lang = store.currentLanguageReducer;\r\n          targetLang = store.targetLanguageReducer;\r\n          speechConfig.speechRecognitionLanguage = lang;\r\n          speechConfig.addTargetLanguage(targetLang);\r\n          reco = new SpeechSDK.TranslationRecognizer(speechConfig, audioConfig);\r\n        }\r\n\r\n        var out = document.getElementById('out');\r\n        var lastRecognized = out.innerHTML;\r\n\r\n        reco.recognizing = function(s, e) {\r\n            if (store.isSuccessReducer != 'success') {\r\n              alert(\"Success\")\r\n            }\r\n            store.isSuccessReducer = 'success';\r\n            var language = targetLang;\r\n            out.innerHTML = lastRecognized + e.result.translations.get(language);\r\n            const capts = document.getElementById('captionsSpace')\r\n            capts.scrollTop = capts.scrollHeight - capts.clientHeight // scroll to bottom\r\n        }\r\n\r\n        reco.recognized = function (s,e) {\r\n            window.console.log(e);\r\n            var language = targetLang;\r\n            lastRecognized += e.result.translations.get(language) + \"\\r\\n\";\r\n            out.innerHTML = lastRecognized;\r\n        }\r\n        reco.canceled = function (s, e) {\r\n          store.isSuccessReducer = 'failure'\r\n          store.azureRegionOptionsReducer = 'incorrect'\r\n          store.azureKeyReducer = 'incorrect'\r\n          swal({\r\n              title: \"Warning!\",\r\n              text: \"Wrong key or region!\",\r\n              icon: \"warning\",\r\n            })\r\n            this.stop()\r\n        };\r\n        reco.startContinuousRecognitionAsync();\r\n    }\r\n    stop() {\r\n        reco.stopContinuousRecognitionAsync(\r\n            function() {\r\n                reco.close();\r\n                reco = undefined;\r\n            },\r\n            function (err) {\r\n                reco.close();\r\n                reco = undefined;\r\n            }\r\n        )\r\n    }\r\n    render() {\r\n        // out holds all past lines. curr holds the current line.\r\n        return (\r\n             <div>\r\n                  <div id='out'></div>\r\n                    <p>{this.props.key}</p>\r\n             </div>\r\n        )\r\n   }\r\n}\r\nexport default AzureRecognition\r\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport grey from '@material-ui/core/colors/grey';\nimport blue from '@material-ui/core/colors/blue';\nimport orange from '@material-ui/core/colors/orange';\n\n\nconst mytheme = createMuiTheme({\n  palette: {\n    primary: {\n        main:blue[900]\n    },\n    secondary: {\n        main:orange[800]\n    },\n  },\n  status: {\n    danger: 'orange',\n  },\n});\n\nexport default mytheme;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Options from '../TopSpace/Options'\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default function ButtomNavi() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <TabPanel value={value} index={0}>\n        <Options />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        ...\n      </TabPanel>\n      {/* <TabPanel value={value} index={2}>\n        ...\n      </TabPanel> */}\n      <div style = {{position:'absolute', top:'93vh'}}>\n      <AppBar position=\"static\">\n        <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\n          <Tab label=\"Item One\" {...a11yProps(0)} />\n          <Tab label=\"Item Two\" {...a11yProps(1)} />\n          {/* <Tab label=\"Item Three\" {...a11yProps(2)} /> */}\n        </Tabs>\n      </AppBar>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport store from '../../store'\nimport './index.css';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport Options from \"../TopSpace/Options\";\nimport {ThemeProvider} from \"@material-ui/core/styles\";\nimport { Button } from \"@material-ui/core\"\nimport Recognition from \"../Captions/Recognition\"\nimport AzureRecognition from \"../AzureCaptions/AzureRecognition\"\nimport mytheme from './theme'\nimport blue from \"@material-ui/core/colors/blue\"\nimport orange from \"@material-ui/core/colors/orange\"\nimport ButtomNavi from '../ButtomNavi'\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport {useSelector,useDispatch} from 'react-redux';\nimport { submenu1,submenu2 } from '../../redux/actions';\nimport PopMenu from '../PopMenu'\n\nconst drawerWidth = '21vw';//drawer width\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaperO: {\n    width: drawerWidth,\n    background: orange[800],\n  },\n  drawerPaperB: {\n    width: drawerWidth,\n    background: blue[800],\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n}));\n\nexport default function PersistentDrawerLeft(props) {\n  const submenu = (state) => state.submenu;\n  const dispatch = useDispatch();\n  const setting = useSelector(submenu);\n\n  const classes = useStyles();\n  const theme = useTheme();\n  var bgColor = props.color;\n  var choice = \"primary\";\n  if (bgColor == \"black\"){\n    choice = \"primary\";\n  }else{\n    choice = \"secondary\";\n  }\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  // if (store.isSuccessReducer == 'success') {\n  //   if (setting == 1){\n  //     return (\n  //         <div className={classes.root}>\n  //           <CssBaseline />\n  //           <ThemeProvider theme = {mytheme}>\n  //           <AppBar\n  //             position=\"fixed\"\n  //             className={clsx(classes.appBar, {\n  //               [classes.appBarShift]: open,\n  //             })}\n  //             color = {choice}\n  //           >\n  //             <Toolbar >\n  //               <IconButton\n  //                 color=\"inherit\"\n  //                 aria-label=\"open drawer\"\n  //                 onClick={handleDrawerOpen}\n  //                 edge=\"start\"\n  //                 className={clsx(classes.menuButton, open && classes.hide)}\n  //               >\n  //                 <MenuIcon />\n  //               </IconButton>\n  //               <div class=\"border d-table w-100\">\n  //           <h2 class=\"d-table-cell tar2\">Welcome to ScribeAR</h2>\n  //           <div class=\"d-table-cell tar\">\n  //             <Button variant=\"contained\" variant=\"text\" color=\"secondary\" onClick={new AzureRecognition().downloadTxtFile} startIcon={<SaveAltIcon/>}>Download transcript</Button>\n  //           </div>\n  //         </div>\n  //             </Toolbar>\n  //           </AppBar>\n  //\n  //           <Drawer\n  //             className={classes.drawer}\n  //             width = \"50%\"\n  //             variant=\"persistent\"\n  //             anchor=\"left\"\n  //             open={open}\n  //             classes = {{paper:classes.drawerPaper}}\n  //           >\n  //             <div className={classes.drawerHeader}>\n  //               <PopMenu />\n  //               <IconButton onClick={handleDrawerClose} color = \"inherit\">\n  //                 {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n  //               </IconButton>\n  //\n  //             </div>\n  //             <Options />\n  //           </Drawer>\n  //           <main\n  //             className={clsx(classes.content, {\n  //               [classes.contentShift]: open,\n  //             })}\n  //           >\n  //             <div className={classes.drawerHeader} />\n  //\n  //           </main>\n  //           </ThemeProvider>\n  //         </div>\n  //     );\n  //   }else{\n  //     return (\n  //         <div className={classes.root}>\n  //         <CssBaseline />\n  //         <ThemeProvider theme = {mytheme}>\n  //         <AppBar\n  //           position=\"fixed\"\n  //           className={clsx(classes.appBar, {\n  //             [classes.appBarShift]: open,\n  //           })}\n  //           color = {choice}\n  //         >\n  //           <Toolbar >\n  //             <IconButton\n  //               color=\"inherit\"\n  //               aria-label=\"open drawer\"\n  //               onClick={handleDrawerOpen}\n  //               edge=\"start\"\n  //               className={clsx(classes.menuButton, open && classes.hide)}\n  //             >\n  //               <MenuIcon />\n  //             </IconButton>\n  //             <div class=\"border d-table w-100\">\n  //           <h2 class=\"d-table-cell tar2\">Welcome to ScribeAR</h2>\n  //           <div class=\"d-table-cell tar\">\n  //             <Button variant=\"contained\" variant=\"text\" color=\"secondary\" onClick={new AzureRecognition().downloadTxtFile} startIcon={<SaveAltIcon/>}>Download transcript</Button>\n  //           </div>\n  //         </div>\n  //           </Toolbar>\n  //         </AppBar>\n  //\n  //         <Drawer\n  //           className={classes.drawer}\n  //           width = \"50%\"\n  //           variant=\"persistent\"\n  //           anchor=\"left\"\n  //           open={open}\n  //           classes = {{paper:classes.drawerPaper}}\n  //         >\n  //           <div className={classes.drawerHeader}>\n  //             <PopMenu />\n  //             <IconButton onClick={handleDrawerClose} color = \"inherit\">\n  //               {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n  //             </IconButton>\n  //\n  //           </div>\n  //           <div>...</div>\n  //         </Drawer>\n  //         <main\n  //           className={clsx(classes.content, {\n  //             [classes.contentShift]: open,\n  //           })}\n  //         >\n  //           <div className={classes.drawerHeader} />\n  //\n  //         </main>\n  //         </ThemeProvider>\n  //         </div>\n  //     )\n  //   }\n  // } else {\n  if (setting == 1){\n    return (\n        <div className={classes.root}>\n          <CssBaseline />\n          <ThemeProvider theme = {mytheme}>\n          <AppBar\n            position=\"fixed\"\n            className={clsx(classes.appBar, {\n              [classes.appBarShift]: open,\n            })}\n            color = {choice}\n          >\n            <Toolbar >\n              <IconButton\n                color=\"inherit\"\n                aria-label=\"open drawer\"\n                onClick={handleDrawerOpen}\n                edge=\"start\"\n                className={clsx(classes.menuButton, open && classes.hide)}\n              >\n                <MenuIcon />\n              </IconButton>\n              <div class=\"border d-table w-100\">\n          <h2 class=\"d-table-cell tar2\">Welcome to ScribeAR</h2>\n          <div class=\"d-table-cell tar\">\n            <Button variant=\"contained\" variant=\"text\" color=\"secondary\" onClick={new Recognition().downloadTxtFile} startIcon={<SaveAltIcon/>}>Download transcript</Button>\n          </div>\n        </div>\n            </Toolbar>\n          </AppBar>\n\n          <Drawer\n            className={classes.drawer}\n            width = \"50%\"\n            variant=\"persistent\"\n            anchor=\"left\"\n            open={open}\n            classes = {{paper:classes.drawerPaper}}\n          >\n            <div className={classes.drawerHeader}>\n              <PopMenu />\n              <IconButton onClick={handleDrawerClose} color = \"inherit\">\n                {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n              </IconButton>\n\n            </div>\n            <Options />\n          </Drawer>\n          <main\n            className={clsx(classes.content, {\n              [classes.contentShift]: open,\n            })}\n          >\n            <div className={classes.drawerHeader} />\n\n          </main>\n          </ThemeProvider>\n        </div>\n    );\n  }else{\n    return (\n        <div className={classes.root}>\n        <CssBaseline />\n        <ThemeProvider theme = {mytheme}>\n        <AppBar\n          position=\"fixed\"\n          className={clsx(classes.appBar, {\n            [classes.appBarShift]: open,\n          })}\n          color = {choice}\n        >\n          <Toolbar >\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={handleDrawerOpen}\n              edge=\"start\"\n              className={clsx(classes.menuButton, open && classes.hide)}\n            >\n              <MenuIcon />\n            </IconButton>\n            <div class=\"border d-table w-100\">\n          <h2 class=\"d-table-cell tar2\">Welcome to ScribeAR</h2>\n          <div class=\"d-table-cell tar\">\n            <Button variant=\"contained\" variant=\"text\" color=\"secondary\" onClick={new Recognition().downloadTxtFile} startIcon={<SaveAltIcon/>}>Download transcript</Button>\n          </div>\n        </div>\n          </Toolbar>\n        </AppBar>\n\n        <Drawer\n          className={classes.drawer}\n          width = \"50%\"\n          variant=\"persistent\"\n          anchor=\"left\"\n          open={open}\n          classes = {{paper:classes.drawerPaper}}\n        >\n          <div className={classes.drawerHeader}>\n            <PopMenu />\n            <IconButton onClick={handleDrawerClose} color = \"inherit\">\n              {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n            </IconButton>\n\n          </div>\n          <div>...</div>\n        </Drawer>\n        <main\n          className={clsx(classes.content, {\n            [classes.contentShift]: open,\n          })}\n        >\n          <div className={classes.drawerHeader} />\n\n        </main>\n        </ThemeProvider>\n        </div>\n    )\n  }\n//}\n}\n","import React from 'react'\r\nimport './index.css'\r\nimport '../MiddleSpace/index.css'\r\nimport PersistentDrawerLeft from '../newDrawer'\r\nimport {useSelector} from 'react-redux'\r\n\r\n// JavaScript functions used: setTimeout, clearTimeout, bind, getElementById,\r\n// addEventListener, removeEventListener\r\n// React functions used: constructor, setState, componentDidMount, render\r\nexport default function TopSpace(props){\r\n\r\n          var h = props.height; // I don't remember why I set the height like this.\r\n          // The Options component takes a function as a prop.\r\n          const meh = (state) => state.meh\r\n          const setting = useSelector(meh)\r\n          var choice = setting ? \"none\" : \"block\"\r\n          return (\r\n               <div className=\"TopSpace\" id=\"outer\" style={{ height: h , display:choice}}>\r\n                    <div >\r\n                          <div className=\"item-wrapper\" >\r\n                              <PersistentDrawerLeft color = {props.color}/>\r\n                         </div>\r\n\r\n                    </div>\r\n               </div>\r\n          )\r\n}\r\n","import React from 'react'\nimport {IconButton} from '@material-ui/core'\nimport { useSelector, useDispatch } from 'react-redux'\n// import ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\n// import ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport ExpandLessSharpIcon from '@material-ui/icons/ExpandLessSharp';\nimport ExpandMoreSharpIcon from '@material-ui/icons/ExpandMoreSharp';\n\nexport default function Extender(props){\n    const dispatch = useDispatch()\n    return (\n          <div style = {{\n              bottom:0,\n          }}>\n                <IconButton color = 'inherit' onClick={() => dispatch(props.increment())}>\n                    <ExpandLessSharpIcon />\n                </IconButton>\n                <IconButton color = 'inherit' onClick={() => dispatch(props.decrement())}>\n                    <ExpandMoreSharpIcon />\n                </IconButton>\n            </div>\n    )\n}","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport './index.css'\nimport AzureRecognition from './AzureRecognition'\nimport Extender from './Extender'\nimport { Button } from \"@material-ui/core\"\nimport ScrollButton from 'react-scroll-button'\nimport store from '../../store'\nimport keys from '../AzureTopSpace/AzureOptions/Key'\nimport { increment_numLines,\ndecrement_numLines, flip_correct_azureKey, flip_check_azureKey } from '../../redux/actions'\n\n\n\nexport default function AzureCaptions(props) {\n    console.log(store.azureRegionOptionsReducer);\n     const dispatch = useDispatch()\n     const lineWidth = useSelector((state) => state.lineWidth)\n    const numLines = useSelector((state) => state.numLines)\n     const recording = useSelector((state) => state.recordingAzure)\n     const checkAzureKey = useSelector((state) => state.checkAzureKey)\n     const correctAzureKey = useSelector((state) => state.correctAzureKey)\n     // Sloppy styling. Please change.\n     var paddingString = (11 - lineWidth) * 3 + 'vw'\n     var h = numLines + 'vh'\n     var resH = (43 - numLines) + 'vh'\n     var sz = props.textSize\n\n       return ( <div>\n                      <div style = {{\n                           height : resH,\n                           margin : '0.5vh',\n                      }}>\n                      <Extender\n                                          increment={increment_numLines}\n                                          decrement={decrement_numLines}  />\n                      </div>\n                      <div className=\"captionsSpace\" id=\"captionsSpace\"\n                      style={{\n                      fontSize: sz,\n                      height: h,\n                      width: \"100vw\",\n                      overflow: \"auto\",\n                      paddingLeft: paddingString,\n                      paddingRight: paddingString }}>\n\n                           <AzureRecognition isRecording = {recording} isCrorrect = {correctAzureKey} checkKey = {checkAzureKey}\n                            key = {store.azureKeyReducer} region = {store.azureRegionOptionsReducer} />\n                      </div>\n                </div> )\n  }\n","import React from 'react'\nimport {IconButton} from '@material-ui/core'\nimport { useSelector, useDispatch } from 'react-redux'\n// import ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\n// import ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport ExpandLessSharpIcon from '@material-ui/icons/ExpandLessSharp';\nimport ExpandMoreSharpIcon from '@material-ui/icons/ExpandMoreSharp';\n\nexport default function Extender(props){\n    const dispatch = useDispatch()\n    return (\n          <div style = {{\n              bottom:0,\n          }}>\n                <IconButton color = 'inherit' onClick={() => dispatch(props.increment())}>\n                    <ExpandLessSharpIcon />\n                </IconButton>\n                <IconButton color = 'inherit' onClick={() => dispatch(props.decrement())}>\n                    <ExpandMoreSharpIcon />\n                </IconButton>\n            </div>\n    )\n}","import React from 'react'\r\nimport { useSelector , useDispatch} from 'react-redux'\r\nimport './index.css'\r\nimport Recognition from './Recognition'\r\nimport { Button } from \"@material-ui/core\"\r\nimport mytheme from '../newDrawer/theme'\r\nimport Extender from './Extender'\r\nimport {ThemeProvider} from \"@material-ui/core/styles\";\r\nimport ScrollButton from 'react-scroll-button'\r\nimport {\r\n     increment_numLines,\r\n     decrement_numLines,\r\n} from '../../redux/actions'\r\n\r\n\r\nexport default function Captions(props) {\r\n     const lineWidth = useSelector((state) => state.lineWidth)\r\n     const numLines = useSelector((state) => state.numLines)\r\n     const recording = useSelector((state) => state.recording)\r\n     // Sloppy styling. Please change.\r\n     var paddingString = (11 - lineWidth) * 3 + 'vw'\r\n     var h = numLines + 'vh'\r\n     var resH = (43 - numLines) + 'vh'\r\n     var sz = props.textSize\r\n\r\n     return ( <div>\r\n                    <div style = {{\r\n                         height : resH,\r\n                         margin : '0.5vh',\r\n                    }}>\r\n                    <Extender\r\n                                        increment={increment_numLines}\r\n                                        decrement={decrement_numLines}  />\r\n                    </div>\r\n                     <Button className=\"scroll\" variant=\"outlined\" onClick= {new Recognition().scrollBottom} color=\"secondary\">Scroll to Bottom</Button>\r\n                    <div className=\"captionsSpace\" id=\"captionsSpace\"\r\n                    style={{\r\n                    fontSize: sz,\r\n                    height: h,\r\n                    width: \"100vw\",\r\n                    overflow: \"auto\",\r\n                    paddingLeft: paddingString,\r\n                    paddingRight: paddingString }}>\r\n                         Welcome to ScribeAR<br />\r\n                         There are some tips for you to start to use ScribeAR,<br />\r\n                         Click button on the upperleft to open the menu.<br />\r\n                         Detailed instructions can be found in option menu.<br />\r\n                         <Recognition isRecording={recording} />\r\n                    </div>\r\n              </div> )\r\n}\r\n","import React, { Component } from 'react';\n\n\n\nclass AudioVisualiser extends Component {\n\n  constructor(props) {\n    super(props);\n    this.canvas = React.createRef();\n  }\n  draw() {\n      const { audioData } = this.props;\n      const canvas = this.canvas.current;\n      const height = canvas.height;\n      const width = canvas.width;\n      const context = canvas.getContext('2d');\n      context.clearRect(0, 0, width, height);\n\n      if (this.props.mic == 1){ // Line visualization\n          this.drawLine(audioData,context,height,width);\n      }\n      else if (this.props.mic == 2){// Spectrum visualization\n          this.drawSpectrum(audioData,context,height,width);\n      }\n      else if (this.props.mic == 3){// Circular visualization\n          this.drawCircular(audioData,context,height,width);\n      }\n\n\n}\n\ndrawLine(audioData,context,height,width){\n       let x = 0;\n       const sliceWidth = (width * 1.0) / audioData.length;\n      context.lineWidth = 2;\n      context.beginPath();\n      context.moveTo(0, height / 2);\n      for (const item of audioData) {\n          const y = (item / 255.0) * height;\n          context.lineTo(x, y);\n          x += sliceWidth;\n      }\n      context.lineTo(x, height / 2);\n      context.strokeStyle = this.props.iscolor ? '#000000' : '#F8F8FF';\n      context.stroke();\n}\n\ndrawSpectrum(audioData,context,height,width){\n      let x = 0;\n      const barWidth = (width / audioData.length) * 2.5;\n      let barHeight;\n      for(const item of audioData) {\n          barHeight = item/2;\n          context.fillStyle = this.props.iscolor ? '#000000' : '#F8F8FF';\n          context.fillRect(x,height/2-barHeight/2,barWidth,barHeight);\n          x += barWidth + 1;\n          }\n\n}\n\ndrawCircular(audioData,context,height,width){\n      const RADIUS = 80;\n      const POINTS = 360;\n      let sum = audioData.reduce((previous, current) => current += previous);\n      let avg = sum / audioData.length;\n\n      for(let i = 0; i < POINTS; i++) {\n          let rel = ~~(i * (POINTS/audioData.length));\n          let x = width/2 + RADIUS * Math.cos( (i * 2 * Math.PI) / POINTS );\n          let y = height/2 + RADIUS * -Math.sin( (i * 2 * Math.PI) / POINTS );\n          let x_2 = x + (audioData[rel]/4) * Math.cos( (i * 2 * Math.PI) / POINTS );\n          let y_2 = y + (audioData[rel]/4) * -Math.sin( (i * 2 * Math.PI) / POINTS );\n          let x_3 = width/2 + 1 *  avg * Math.cos((i * 2 * Math.PI) / POINTS );\n          let y_3 = height/2 + 1 * avg * -Math.sin((i * 2 * Math.PI) / POINTS );\n          let x_4 = x_3 - 0.5 *  avg * Math.cos((i * 2 * Math.PI) / POINTS );\n          let y_4 = y_3 - 0.5 * avg * -Math.sin((i * 2 * Math.PI) / POINTS );\n          let x_5 = x - 0.3  * Math.cos((i * 2 * Math.PI) / POINTS );\n          let y_5 = y - 0.3  * -Math.sin((i * 2 * Math.PI) / POINTS);\n          //draw the circular spectrum\n          context.beginPath();\n          context.moveTo(x, y);\n          context.lineTo(x_2, y_2);\n          context.strokeStyle = this.props.iscolor ? '#000000' : '#F8F8FF';\n          context.stroke();\n          //draw the margin circle\n          context.beginPath();\n          context.moveTo(x,y);\n          context.lineTo(x_5,y_5);\n          context.stroke();\n          //draw the inner circlew\n          context.beginPath();\n          context.moveTo(x_4,y_4);\n          context.lineTo(x_3,y_3);\n          if(y_4 - y_3 > 10){\n              context.strokeStyle = '#ff0000';\n          }\n          context.stroke();\n          }\n\n}\ncomponentDidUpdate() {\n    this.draw();\n  }\n\n  render() {\n      let width = \"1700vw\"\n      if (this.props.mic == 1){\n          width = \"1800vw\"\n      }else if (this.props.mic == 2){\n          width = \"1600vw\"\n      }else if (this.props.mic == 3){\n          width = \"400vw\"\n\n      }\n\n    return <canvas width={width} height=\"300vh\" ref={this.canvas} />;\n  }\n\n}\n\nexport default AudioVisualiser;\n","import React, {Component } from 'react';\nimport AudioVisualiser from './AudioVisualiser'\n\n\n/*global Unit8Array*/\n\n\nclass AudioAnalyser extends Component {\n\n     constructor(props) {\n          super(props);\n          this.state = {\n                audioData : new Uint8Array(0)\n          };\n          this.tick = this.tick.bind(this);\n     }\n\n     componentDidMount() {\n     this.audioContext = new (window.AudioContext ||\n       window.webkitAudioContext)();\n     this.analyser = this.audioContext.createAnalyser();\n     this.dataArray = new Uint8Array(this.analyser.frequencyBinCount);\n     this.source = this.audioContext.createMediaStreamSource(this.props.audio);\n     this.source.connect(this.analyser);\n     this.rafId = requestAnimationFrame(this.tick);\n   }\n\n     tick() {\n         if (this.props.mic == 1){\n             //console.log(\"1\");n\n             this.analyser.getByteTimeDomainData(this.dataArray);\n         }else if (this.props.mic == 2){\n             //console.log(\"2\");\n             this.analyser.getByteFrequencyData(this.dataArray);\n         }else if (this.props.mic == 3){\n             this.analyser.getByteFrequencyData(this.dataArray);\n             //this.analyser.getByteTimeDomainData(this.dataArray);\n         }\n     this.setState({ audioData: this.dataArray });\n     this.rafId = requestAnimationFrame(this.tick);\n   }\n\n   componentWillUnmount() {\n    cancelAnimationFrame(this.rafId);\n    this.analyser.disconnect();\n    this.source.disconnect();\n  }\n\n  render() {\n      return <AudioVisualiser audioData={this.state.audioData} iscolor = {this.props.iscolor} mic = {this.props.mic}/>;\n    }\n\n\n}\n\nexport default AudioAnalyser;\n","import React from 'react';\nimport AudioAnalyser from './AudioAnalyser';\n\n\nclass Index extends React.PureComponent {\n  constructor() {\n   super()\n   this.state = {\n     audio: null\n   };\n\n  //this.toggleMicrophone = this.toggleMicrophone.bind(this);\n  this.stopMicrophone = this.stopMicrophone.bind(this);\n  this.getMicrophone = this.getMicrophone.bind(this);\n }\n\n\n\n componentDidUpdate(prevProps,prevState) {\n   if(prevProps.ismic === this.props.ismic)\n      return\n   if(this.props.ismic > 0){\n      this.getMicrophone()\n    }\n   else this.stopMicrophone()\n }\n\n async getMicrophone() {\n    const audio = await navigator.mediaDevices.getUserMedia({\n      audio: true,\n      video: false\n    });\n    this.setState({ audio });\n  }\n\n  stopMicrophone() {\n     this.state.audio.getTracks().forEach(track => track.stop());\n     this.setState({ audio: null });\n   }\n\n\n  render() {\n     return (\n\n         <div className=\"controls\" >\n           {this.state.audio ? <AudioAnalyser audio={this.state.audio}  iscolor = {this.props.iscolor}  mic = {this.props.ismic}/> : ''}\n         </div>\n\n     );\n   }\n}\n\nexport default Index;\n\n// <button onClick={this.toggleMicrophone} style = {{\n//   position:\"fixed\",\n//   top:\"35vh\",\n//   left:\"65vw\",\n//   width:\"10vw\",\n//   height:\"10vh\",\n//   fontSize: \"1.5vw\",\n//   textAlign: \"left\"\n// }}>\n//   {this.state.audio ? 'Stop MIC' : 'Get MIC input'}\n// </button>\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class Draggable extends React.Component{\n\n    drag = (e) => {\n        e.dataTransfer.setData('transfer',e.target.id);\n    }\n\n    noAllowDrop = (e) => {\n        e.stopPropagation();\n    }\n\n    render(){\n        return (\n            <div id= {this.props.id} draggable = \"true\" onDragStart={this.drag} \n            onDragOver= {this.noAllowDrop} style = {this.props.style}>\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nDraggable.propTypes = {\n    id : PropTypes.string,\n    style: PropTypes.object,\n    children: PropTypes.node,\n}","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class Droppable extends React.Component{\n    drop = (e) =>{\n        e.preventDefault();\n        const data = e.dataTransfer.getData('transfer');\n        e.target.appendChild(document.getElementById(data));\n    }\n\n    allowDrop = (e) =>{\n        e.preventDefault();\n    }\n\n    render(){\n        return (\n            <div id = {this.props.id} onDrop = {this.drop} onDragOver = {this.allowDrop} style = {this.props.style}>\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nDroppable.propTypes = {\n    id : PropTypes.string,\n    style: PropTypes.object,\n    children: PropTypes.node,\n}","import React from 'react'\nimport Index from './Loudness/index'\nimport './index.css'\nimport { useSelector } from 'react-redux'\nimport styled from 'styled-components'\nimport Draggable from '../DnD/Draggable'\nimport Droppable from '../DnD/Droppable'\nimport './index.css'\n\n\nconst Wrapper = styled.div`\n    width:100%;\n    padding:2px;\n    display:flex;\n    justify-content: center;\n`;\n\n\nconst droppableStyle = {\n    backgroundColor: '#555',\n    width:'50vw',\n    height: '32vh',\n    margin: '1px'\n};\n \nexport default function MiddleSpace(props) {\n  var h = props.height\n  const mic = useSelector((state) => state.mic)\n  const color = useSelector((state) => state.invertColors)\n //  var wid = \"calc(100vh - 2 * \" + paddingString + \")\"\n //  if(window.innerHeight > window.innerWidth) {\n //    wid = \"calc(100vw - 2 * \" + paddingString + \")\"\n //  }\n\n  if (props.color == 'black'){\n      return ( <div className=\"MiddleSpace\">    \n            <Wrapper>\n                  <Droppable className = \"d1\" id = \"dr1\" style = {{\n                    width:'25vw',\n                    height: '34vh',\n                    margin: '1px'}}>\n                    <div className = \"show1\">\n                      <Draggable id = \"item1\" style = {{margin:'0.5px'}}>\n                        \n                          <Index ismic = {mic} iscolor = {color} style={{\n                          position:\"relative\",\n                          }}/> \n                       \n                      </Draggable>\n                      </div>\n                  </Droppable>\n                  <Droppable className = \"d1\" id = \"dr2\" style = {{\n\n                    width:'25vw',\n                    height: '34vh',\n                    margin: '1px'}}>\n                      <div className = \"show1\"></div>\n                  </Droppable>\n                  <Droppable className = \"d1\" id = \"dr2\" style = {{\n                    width:'25vw',\n                    height: '34vh',\n                    margin: '1px'}}>\n                      <div className = \"show1\"></div>\n                  </Droppable>\n                  <Droppable className = \"d1\" id = \"dr2\" style = {{\n                    width:'25vw',\n\n                    height: '34vh',\n                    margin: '1px'}}>\n                      <div className = \"show1\"></div>\n                  </Droppable>\n              </Wrapper>\n          </div> )\n  }else{\n    return ( <div className=\"MiddleSpace\">    \n            <Wrapper>\n                  <Droppable className = \"d2\" id = \"dr1\" style = {{\n                    width:'25vw',\n                    height: '34vh',\n                    margin: '1px'}}>\n                    <div className = \"show1\">      \n\n                      <Draggable id = \"item1\" style = {{margin:'0.5px'}}><Index ismic = {mic} iscolor = {color} style={{\n                        position:\"relative\",\n                      }}/> \n                    </Draggable>\n                    </div>\n                  </Droppable>\n                  <Droppable className = \"d2\" id = \"dr2\" style = {{\n                    width:'25vw',\n                    height: '34vh',\n                    margin: '1px'}}>\n                      <div className = \"show1\"></div>\n                  </Droppable>\n                  <Droppable className = \"d2\" id = \"dr2\" style = {{\n                    width:'25vw',\n                    height: '34vh',\n                    margin: '1px'}}>\n                      <div className = \"show1\"></div>\n                  </Droppable>\n                  <Droppable className = \"d2\" id = \"dr2\" style = {{\n                    width:'25vw',\n                    height: '34vh',\n                    margin: '1px'}}>\n                      <div className = \"show1\"></div>\n\n                  </Droppable>\n              </Wrapper>\n          </div> )\n  }\n}\n","import React from 'react'\nimport './index.css'\nimport MenuHider from './MenuHider'\nimport {useSelector} from 'react-redux'\n\n\n\nexport default function PlaceHolder(props){\n        var sz = props.textSize;\n        const meh = (state) => state.meh\n        const setting = useSelector(meh)\n        var h = setting ? '23vh' : '14vh';\n        return <div className = \"PlaceHolder\" style = {\n            {\n                // fontSize:sz,\n                height:h,\n            }\n        }>\n            <MenuHider />\n        </div>\n}","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport TopSpace from './components/TopSpace'\nimport AzureTopSpace from './components/AzureTopSpace'\nimport AzureCaptions from './components/AzureCaptions'\nimport Captions from './components/Captions'\nimport MiddleSpace from './components/MiddleSpace'\nimport PlaceHolder from \"./components/PlaceHolder\"\nimport { flip_recording, flip_switch_to_azure,\n         flip_switchMenus, flip_entered_key,\n         flip_correct_azureKey,\n         flip_check_azureKey,\n         flip_entered_region } from './redux/actions'\nimport store from './store'\nimport './App.css'\n\nexport default function App() {\n     const dispatch = useDispatch()\n     const enteredKey = useSelector((state) => state.enteredKey)\n     const enteredRegion = useSelector((state) => state.enteredRegion)\n     const correctAzureKey = useSelector((state) => state.correctAzureKey)\n     const checkAzureKey = useSelector((state) => state.checkAzureKey)\n     // Get global state from Redux. See the React Redux tutorial.\n     const textSize = useSelector((state) => state.textSize)\n     const recording = useSelector((state) => state.recording)\n     const numLines = useSelector((state) => state.numLines)\n     const invertColors = useSelector((state) => state.invertColors)\n     const switchMenus = useSelector((state)=> state.switchMenus)\n     const switchToAzure = useSelector((state) => state.switchToAzure)\n     // Convert variables to CSS-friendly strings.\n     var sizeString = textSize + 'vh'\n     // Size of bottom space (text area) relative to text size and number of lines.\n     var botHeight = 43 + 'vh'\n     var topHeight = 9 + 'vh'\n     var placeHeight = 5 + 'vh'\n     var midHeight = 34 + 'vh'\n     //----------------------\n     // var topHeight = 9 + 'vh'\n     // var placeHeight = 5 + 'vh'\n     // var midHeight = 34 + 'vh'\n     //-----------------------\n     // topHeight + botHeight should always = 100vh because we don't want the full\n     // page to scroll (we only want the individual areas to scroll).\n     //------------------------\n     //checkAzureKey is changed changed HERE in normal return\n     //isCorrectKey is done in AzureCaptions\n     //azureKeyEntered is done in enter button\n\n     var isRecording = recording ? true : false\n     var switchmenus = switchMenus ? false : true\n     var isEnteredKey = enteredKey ? true : false\n     var isEnteredRegion = enteredRegion ? true : false\n     var isCorrectKey = correctAzureKey ? true : false\n     var isChecking = checkAzureKey ? true : false\n     var wantsAzure = switchToAzure ? true : false\n\n\n     var bgColor = invertColors ? 'white': 'black'\n     var color = invertColors ? 'black' : 'white'\n\n     if (store.azureKeyReducer == 'incorrect' && checkAzureKey == true) {\n       store.azureKeyReducer = 'empty'\n       dispatch(flip_entered_key())\n       dispatch(flip_entered_region())\n       dispatch(flip_check_azureKey())\n     }\n     if (store.isSuccessReducer == 'success' && isCorrectKey == false) {\n       dispatch(flip_correct_azureKey())\n     }\n     if (bgColor == 'black') {\n     if (checkAzureKey == true || isCorrectKey == true) {\n       if (isRecording == true) {\n         dispatch(flip_recording())\n       }\n         return (\n              <div className=\"App-1\" style={{\n                   backgroundColor: 'black',\n                   color: 'white',\n                   overflow: 'hidden',\n                  }}>\n                   <TopSpace color = {bgColor} height={topHeight} />\n                   <PlaceHolder height = {placeHeight} color = {bgColor} textSize = {sizeString}/>\n                   <MiddleSpace height={midHeight} color = {bgColor}/>\n                   <AzureCaptions height={botHeight} textSize={sizeString} />\n                   <Captions height={0} textSize={sizeString} />\n              </div>\n         )\n      }\n    } else {\n      if (checkAzureKey == true || isCorrectKey == true) {\n      if (isRecording == true) {\n        dispatch(flip_recording())\n      }\n        return (\n             <div className=\"App-2\" style={{\n                  backgroundColor: 'white',\n                  color: 'black',\n                  overflow: 'hidden',\n                 }}>\n                  <TopSpace height={topHeight} />\n                  <PlaceHolder color = {bgColor} textSize = {sizeString}/>\n                  <MiddleSpace height={midHeight} color = {bgColor}/>\n                  <AzureCaptions height={botHeight} textSize={sizeString} />\n                  <Captions height={0} textSize={sizeString} />\n                  {/* <DNDTest /> */}\n             </div>\n        )\n     }\n   }\n      // cases where azureKey is false but isrecording is not????\n\n      if (bgColor == 'black') {\n        if (isEnteredKey == true || isEnteredRegion == true) {\n          dispatch(flip_check_azureKey())\n          if (isRecording == true) {\n            dispatch(flip_recording())\n          }\n        }\n        return (\n            <div className=\"App-1\" style={{\n                 backgroundColor: 'black',\n                 color: 'white',\n                 overflow: 'hidden',\n\n                }}>\n                 <TopSpace color = {bgColor}/>\n                 <PlaceHolder color = {bgColor} textSize = {sizeString}/>\n                 <MiddleSpace color = {bgColor}/>\n                 <Captions height={botHeight} textSize={sizeString} />\n\n\n                 {/* <DNDTest /> */}\n            </div>\n       )\n     } else {\n       return (\n            <div className=\"App-2\" style={{\n                 backgroundColor: 'white',\n                 color: 'black',\n                 overflow: 'hidden',\n\n                }}>\n                 <TopSpace color = {bgColor} />\n                 <PlaceHolder color = {bgColor} textSize = {sizeString}/>\n                 <MiddleSpace color = {bgColor}/>\n                 <Captions height={botHeight} textSize={sizeString} />\n                 {/* <DNDTest /> */}\n            </div>\n       )\n     }\n     // You can't comment in JSX.\n     // The style tag is the easiest way to set style based on JS variables.\n\n}\n","// THIS ENTIRE FILE, INCLUDING COMMENTS EXCEPT FOR THIS ONE, IS AUTOMATICALLY PROVIDED BY NPX\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\r\n\r\nvar savedTextSize = localStorage.getItem('text')\r\nvar choiceTextSize = 6\r\nif (savedTextSize != null){\r\n     choiceTextSize = savedTextSize\r\n}\r\n\r\nconst submenuReducer = (state = 1, action) => {\r\n     switch(action.type) {\r\n          case 'SUBMENU_1':\r\n               return 1;\r\n          case 'SUBMENU_2':\r\n               return 2;\r\n          default: return state;\r\n     }\r\n}\r\n\r\nconst textSizeReducer = (state = choiceTextSize, action) => {\r\n     switch (action.type) {\r\n          case 'INCREMENT_TEXTSIZE':\r\n               state++;\r\n               return state;\r\n          case 'DECREMENT_TEXTSIZE':\r\n               return Math.max(1, state - 1);\r\n          default:\r\n               return state;\r\n     }\r\n}\r\n\r\nconst lineWidthReducer = (state = 10, action) => {\r\n     switch (action.type) {\r\n          case 'INCREMENT_LINEWIDTH':\r\n               return Math.min(10, state + 1)\r\n          case 'DECREMENT_LINEWIDTH':\r\n               return Math.max(1, state - 1);\r\n          default:\r\n               return state;\r\n     }\r\n}\r\n\r\nconst numLinesReducer = (state = 35, action) => {\r\n     switch (action.type) {\r\n          case 'INCREMENT_NUMLINES':\r\n               return Math.min(state + 1,40);\r\n          case 'DECREMENT_NUMLINES':\r\n               return Math.max(1, state - 1);\r\n          default:\r\n               return state;\r\n     }\r\n}\r\n\r\nconst lockScreenReducer = (state = false, action) => {\r\n     if (action.type === 'FLIP_LOCKSCREEN')\r\n          return !state;\r\n     else return state;\r\n}\r\n\r\nconst invertMicVisualReducer = (state = 0, action) => {\r\n  if (action.type === 'FLIP_MICVISUAL'){\r\n       state = state + 1;\r\n       if (state == 4) {\r\n            state = 0;\r\n       }\r\n  }\r\n  return state;\r\n}\r\n\r\nconst switchMenusReducer = (state = false, action) => {\r\n     if (action.type === 'FLIP_SWITCHMENUS')\r\n          return !state;\r\n     else return state;\r\n}\r\n\r\nconst invertColorsReducer = (state = false, action) => {\r\n     if (action.type === 'FLIP_INVERTCOLORS')\r\n          return !state;\r\n     else return state;\r\n}\r\n\r\nconst recordingReducer = (state = true, action) => {\r\n     if (action.type === 'FLIP_RECORDING')\r\n          return !state\r\n     else return state\r\n}\r\n\r\nconst recordingAzureReducer = (state = true, action) =>{\r\n     if (action.type == 'FLIP_RECORDING_AZURE')\r\n          return !state\r\n     else return state\r\n}\r\n\r\nconst switchToAzureReducer = (state = false, action) => {\r\n     if (action.type == 'SWITCH_TO_AZURE_REDUCER')\r\n          return !state\r\n     else return state\r\n}\r\n\r\nconst enteredKeyReducer = (state = false, action) =>{\r\n     if (action.type == 'FLIP_ENTERED_KEY')\r\n          return !state\r\n     else return state\r\n}\r\n\r\nconst correctAzureKeyReducer = (state = false, action) =>{\r\n     if (action.type == 'FLIP_CORRECT_AZUREKEY')\r\n          return !state\r\n     else return state\r\n}\r\n\r\nconst checkAzureKeyReducer = (state = false, action) =>{\r\n     if (action.type == 'FLIP_CHECK_AZUREKEY')\r\n          return !state\r\n     else return state\r\n}\r\n\r\n\r\nconst enteredRegionReducer = (state = false, action) =>{\r\n     if (action.type == 'FLIP_ENTERED_REGION')\r\n          return !state\r\n     else return state\r\n}\r\n\r\nconst instructionsReducer = (state = false, action) => {\r\n     if (action.type == 'FLIP_INSTRUCTIONS')\r\n          return !state\r\n     else return state\r\n}\r\n\r\nconst menuhideReducer = (state = false, action) => {\r\n     if (action.type == 'FLIP_MENUHIDE')\r\n          return !state\r\n     else return state\r\n}\r\n\r\nconst allReducers = combineReducers({\r\n     switchToAzure: switchToAzureReducer,\r\n     checkAzureKey: checkAzureKeyReducer,\r\n     correctAzureKey: correctAzureKeyReducer,\r\n     enteredRegion: enteredRegionReducer,\r\n     enteredKey: enteredKeyReducer,\r\n     textSize: textSizeReducer,\r\n     lineWidth: lineWidthReducer,\r\n     numLines: numLinesReducer,\r\n     lockScreen: lockScreenReducer,\r\n     invertColors: invertColorsReducer,\r\n     recording: recordingReducer,\r\n     mic: invertMicVisualReducer,\r\n     switchMenus: switchMenusReducer,\r\n     recordingAzure: recordingAzureReducer,\r\n     ins: instructionsReducer,\r\n     meh: menuhideReducer,\r\n     submenu: submenuReducer,\r\n});\r\n\r\nexport default allReducers;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport allReducers from './redux/reducers';\nimport { Provider } from 'react-redux';\n\nconst store = createStore(allReducers);\n\nReactDOM.render(\n     <Provider store={store}>\n          <App />\n     </Provider>,\n     document.getElementById('root')\n);\n\n// AUTOMATIC COMMENT PROVIDED BY NPX:\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}