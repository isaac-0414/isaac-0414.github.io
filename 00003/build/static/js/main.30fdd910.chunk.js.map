{"version":3,"sources":["components/TopSpace/Options/OnOff/index.js","components/TopSpace/Options/PlusMinus/index.js","redux/actions.js","components/TopSpace/Options/Record/index.js","components/TopSpace/Options/Micvisual/index.js","components/TopSpace/Options/Instru/index.js","components/TopSpace/Options/Save/index.js","components/PlaceHolder/MenuHider/index.js","components/TopSpace/Options/index.js","components/newDrawer/theme.js","components/newDrawer/index.js","components/TopSpace/index.js","components/Captions/Recognition/index.js","components/Captions/index.js","components/MiddleSpace/Loudness/AudioVisualiser.js","components/MiddleSpace/Loudness/AudioAnalyser.js","components/MiddleSpace/Loudness/index.js","components/DnD/Draggable/index.js","components/DnD/Droppable/index.js","components/MiddleSpace/index.js","components/PlaceHolder/index.js","App.js","serviceWorker.js","redux/reducers.js","index.js"],"names":["OnOff","props","dispatch","useDispatch","item","className","type","onChange","action","PlusMinus","setting","useSelector","Button","color","variant","size","onClick","decrement","increment","increment_textSize","decrement_textSize","flip_invertColors","flip_instructions","Record","state","recording","document","body","onkeyup","e","keyCode","IconButton","Micvisual","mic","result","text","Instru","Save","textSize","_setting","localStorage","setItem","MenuHider","meh","Options","choice","ins","id","style","fontFamily","Divider","invertColors","margin","mytheme","createMuiTheme","palette","primary","main","blue","secondary","orange","status","danger","useStyles","makeStyles","theme","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaperO","background","drawerPaperB","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","PersistentDrawerLeft","classes","useTheme","React","useState","open","setOpen","CssBaseline","ThemeProvider","AppBar","position","clsx","Toolbar","aria-label","edge","Typography","noWrap","Drawer","anchor","paper","direction","List","TopSpace","height","recognition","window","SpeechRecognition","webkitSpeechRecognition","lang","continuous","interimResults","Recognition","line","appendLine","bind","start","stop","this","prevProps","prevState","isRecording","onresult","words","Array","from","results","map","transcript","join","charAt","toUpperCase","slice","isFinal","updateCurrentLine","onend","str","capts","getElementById","isScrolledToBottom","scrollHeight","clientHeight","scrollTop","setState","out","div","createElement","textContent","appendChild","PureComponent","Captions","lineWidth","paddingString","h","sz","fontSize","overflow","paddingLeft","paddingRight","AudioVisualiser","canvas","createRef","audioData","current","context","getContext","clearRect","drawLine","drawSpectrum","drawCircular","x","sliceWidth","length","beginPath","moveTo","y","lineTo","strokeStyle","iscolor","stroke","barHeight","barWidth","fillStyle","fillRect","avg","reduce","previous","i","rel","Math","cos","PI","sin","x_2","y_2","x_3","y_3","x_4","y_4","x_5","y_5","draw","ref","Component","AudioAnalyser","Uint8Array","tick","audioContext","AudioContext","webkitAudioContext","analyser","createAnalyser","dataArray","frequencyBinCount","source","createMediaStreamSource","audio","connect","rafId","requestAnimationFrame","getByteTimeDomainData","getByteFrequencyData","cancelAnimationFrame","disconnect","Index","stopMicrophone","getMicrophone","ismic","navigator","mediaDevices","getUserMedia","video","getTracks","forEach","track","Draggable","drag","dataTransfer","setData","target","noAllowDrop","stopPropagation","draggable","onDragStart","onDragOver","children","Droppable","drop","preventDefault","data","getData","allowDrop","onDrop","Wrapper","styled","MiddleSpace","PlaceHolder","App","sizeString","bgColor","backgroundColor","Boolean","location","hostname","match","savedTextSize","getItem","allReducers","combineReducers","max","min","numLines","lockScreen","store","createStore","ReactDOM","render","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.30fdd910.chunk.js","sourcesContent":["import React from 'react'\r\nimport './index.css'\r\nimport { useDispatch } from 'react-redux'\r\n\r\n// This code only works if the initial state is Off. It's surprisingly way harder\r\n// to get this to work if you want the inital state of the checkbox to be checked.\r\n\r\nexport default function OnOff(props) {\r\n     //const setting = useSelector(props.setting)\r\n     // useDispatch returns the state modifying function, invoked below.\r\n     const dispatch = useDispatch()\r\n\r\n     return (\r\n          <div>\r\n               {props.item}\r\n               <label className=\"switch\">\r\n                    <input type=\"checkbox\" onChange={() => dispatch(props.action())}></input>\r\n                    <span className=\"slider\"></span>\r\n               </label>\r\n          </div>\r\n     )\r\n}\r\n","import React from 'react'\r\nimport './index.css'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport {Button} from \"@material-ui/core\"\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\n\r\nexport default function PlusMinus(props) {\r\n     const setting = useSelector(props.setting) // Get current value of the setting.\r\n     // useDispatch returns the state modifying function, invoked below.\r\n     const dispatch = useDispatch()\r\n     return (\r\n          <div>\r\n               {props.item}:\r\n               {setting}\r\n               <div className = \"setting_wrapper\">\r\n                    <Button className = \"minus\" color = \"inherit\" variant = \"outlined\" size = \"small\"\r\n                      onClick={() => dispatch(props.decrement())}>-</Button>\r\n                    <Button  className = \"plus\" color = \"inherit\" variant = \"outlined\" size = \"small\"\r\n                      onClick={() => dispatch(props.increment())}>+</Button>\r\n              </div>\r\n          </div>\r\n     );\r\n}\r\n","// Actions are the functions that we call throughout the project to change global state.\r\n\r\nexport const set_screenWidth = (width) => {\r\n     return {\r\n          type: 'SET_SCREENWIDTH',\r\n          value: width\r\n     };\r\n}\r\n\r\nexport const set_screenHeight = (height) => {\r\n     return {\r\n          type: 'SET_SCREENHEIGHT',\r\n          value: height\r\n     };\r\n}\r\n\r\nexport const increment_textSize = () => {\r\n     return { type: 'INCREMENT_TEXTSIZE' };\r\n}\r\n\r\nexport const decrement_textSize = () => {\r\n     return { type: 'DECREMENT_TEXTSIZE' };\r\n}\r\n\r\nexport const increment_lineWidth = () => {\r\n     return { type: 'INCREMENT_LINEWIDTH' };\r\n}\r\n\r\nexport const decrement_lineWidth = () => {\r\n     return { type: 'DECREMENT_LINEWIDTH' };\r\n}\r\n\r\nexport const increment_numLines = () => {\r\n     return { type: 'INCREMENT_NUMLINES' };\r\n}\r\n\r\nexport const decrement_numLines = () => {\r\n     return { type: 'DECREMENT_NUMLINES' };\r\n}\r\n\r\nexport const flip_lockScreen = () => {\r\n     return { type: 'FLIP_LOCKSCREEN' };\r\n}\r\n\r\nexport const flip_invertColors = () => {\r\n     return { type: 'FLIP_INVERTCOLORS' };\r\n}\r\n\r\nexport const flip_recording = () => {\r\n     return { type: 'FLIP_RECORDING' };\r\n}\r\n\r\nexport const flip_micVisual = () => {\r\n     return { type: 'FLIP_MICVISUAL' };\r\n}\r\n\r\nexport const flip_instructions = () =>{\r\n     return { type: 'FLIP_INSTRUCTIONS'};\r\n}\r\n\r\nexport const flip_menuhide = () =>{\r\n     return { type: 'FLIP_MENUHIDE'};\r\n}\r\n","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport './index.css'\r\nimport { flip_recording } from '../../../../redux/actions'\r\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PauseCircleFilledIcon from '@material-ui/icons/PauseCircleFilled';\r\nexport default function Record(props) {\r\n\r\n     const recording = (state) => state.recording\r\n     const setting = useSelector(recording) // Get current value of recording.\r\n     // useDispatch returns the state modifying function, invoked below.\r\n     const dispatch = useDispatch()\r\n\r\n     // flip recording when space bar is pressed\r\n     document.body.onkeyup = function(e) { // run function when any key is pressed\r\n          if (e.keyCode === 32) // keyCode 32 is the space bar\r\n               dispatch(flip_recording())\r\n     }\r\n     // record-btn-wrapper toggles between the two buttons using the TopSpace\r\n     // hidden/shown CSS.\r\n     // return (\r\n     //      <div>\r\n     //           {setting ? \"Recording\" : \"Record\"}\r\n     //           <div className=\"record-btn-wrapper\">\r\n     //                <div className={setting ? \"record-btn hidden\" : \"record-btn shown\"}\r\n     //                     onClick={() => dispatch(flip_recording())} />\r\n     //                <div className={setting ? \"stop-btn shown\" : \"stop-btn hidden\"}\r\n     //                     onClick={() => dispatch(flip_recording())} />\r\n     //           </div>\r\n     //      </div>\r\n     // )\r\n     if (setting == true){\r\n          return(\r\n               <div>\r\n                    Recording\r\n                    <IconButton className = \"Play\" color= \"inherit\" size = \"large\" onClick={() => dispatch(flip_recording())} >\r\n                         <PauseCircleFilledIcon className = \"pause\"/>\r\n                    </IconButton>\r\n               </div>\r\n          )\r\n     }else{\r\n          return(\r\n               <div>\r\n                    To Record\r\n                    <IconButton className = \"Play\" color= \"inherit\" size = \"large\" onClick={() => dispatch(flip_recording())}>\r\n                         <PlayCircleFilledIcon className = \"start\"/>\r\n                    </IconButton>\r\n               </div>\r\n          )\r\n     }\r\n}\r\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport './index.css'\nimport { flip_micVisual } from '../../../../redux/actions'\nimport { Button } from \"@material-ui/core\"\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\n\n\n// This code only works if the initial state is Off. It's surprisingly way harder\n// to get this to work if you want the inital state of the checkbox to be checked.\n\nexport default function Micvisual(props) {\n\n    const mic = (state) => state.mic\n    const setting = useSelector(mic) // Get current value of recording.\n    // useDispatch returns the state modifying function, invoked below.\n    const dispatch = useDispatch()\n    let result = \"\"\n    let text = \"\"\n\n    // flip recording when space bar is pressed\n\n     //const setting = useSelector(props.setting)\n     // useDispatch returns the state modifying function, invoked below.\n\n     if (setting == 0){\n         result = \"No Visualization\"\n         text = \"None\"\n     }else if (setting == 1){\n         result = \"Line Visualization\"\n         text = \"Line\"\n     }else if (setting == 2){\n         result = \"Spectrum Visualization\"\n         text = \"Spectrum\"\n     }else{\n         result = \"Circular Visualization\"\n         text = \"Circular\"\n     }\n\n     return (\n          <div>\n              {result}\n               <div className=\"audio_visual\">\n                    <Button className=\"audio_plus\" color = \"inherit\"  variant = \"outlined\" size = \"large\"\n                         onClick={() => dispatch(flip_micVisual())} >{text}\n                    </Button>\n\n\n               </div>\n          </div>\n     )\n}\n\n","import React from 'react'\nimport './index.css'\nimport { useDispatch } from 'react-redux'\n\n// This code only works if the initial state is Off. It's surprisingly way harder\n// to get this to work if you want the inital state of the checkbox to be checked.\n\nexport default function Instru(props) {\n     //const setting = useSelector(props.setting)\n     // useDispatch returns the state modifying function, invoked below.\n     const dispatch = useDispatch()\n\n     return (\n          <div>\n               {props.item}\n               <label className=\"switch\">\n                    <input type=\"checkbox\" onChange={() => dispatch(props.action())}></input>\n                    <span className=\"slider\"></span>\n               </label>\n          </div>\n     )\n}\n","import React from \"react\"\nimport {useSelector} from 'react-redux'\nimport {Button} from \"@material-ui/core\"\nimport './index.css'\n\nfunction saveData(_setting){\n    localStorage.setItem('text',_setting);\n}\n\n\nexport default function Save() {\n    const textSize = (state) => state.textSize\n    const setting = useSelector(textSize)\n\n\n    return (\n        <div className = 'save-wrapper'>\n            <Button color = 'inherit' variant = 'outlined' onClick = {()=>saveData(setting)}>Save</Button>\n        </div>\n    )\n}","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport './index.css'\nimport { flip_menuhide } from '../../../redux/actions'\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nexport default function MenuHider(props){\n    const meh = (state) => state.meh;\n    const setting = useSelector(meh);\n    const dispatch = useDispatch();\n\n    if (setting == false){\n        return (\n            <div>\n                <IconButton className = \"c2\" color = \"inherit\" onClick = {()=>dispatch(flip_menuhide())}>\n                    <ArrowUpwardIcon className = 'c3' />\n                </IconButton>\n            </div>\n        )\n    }else{\n        return (\n            <div>\n                <IconButton className = \"c2\" color = \"inherit\" onClick = {()=>dispatch(flip_menuhide())}>\n                    <ArrowDownwardIcon className = 'c3' />\n                </IconButton>\n            </div>\n        )\n    }\n\n}","import React from 'react'\r\nimport OnOff from './OnOff'\r\nimport PlusMinus from './PlusMinus'\r\nimport Record from './Record'\r\nimport Micvisual from './Micvisual'\r\nimport Instru from \"./Instru\"\r\nimport Save from './Save'\r\nimport Divider from '@material-ui/core/Divider';\r\nimport './index.css'\r\nimport {useSelector} from \"react-redux\"\r\nimport {\r\n     flip_invertColors,\r\n     flip_micVisual,\r\n     increment_textSize,\r\n     decrement_textSize,\r\n     flip_instructions,\r\n} from '../../../redux/actions'\r\nimport MenuHider from '../../PlaceHolder/MenuHider'\r\n\r\nexport default function Options() {\r\n     // These are functions that take an object and return an element of the object.\r\n     // They are passed to useSelector, which feeds the global state object into them.\r\n     const textSize = (state) => state.textSize\r\n     const invertColors = (state) => state.invertColors\r\n     const ins = (state) => state.ins\r\n     const if_ins = useSelector((state) => state.ins)\r\n     var choice = if_ins ? 'appear' : 'disappear';\r\n\r\n     return (\r\n          <div className=\"Options\" id=\"options-space\">\r\n               <h2 style = {{fontFamily:\"Arial\"}}>OPTIONS</h2>\r\n               <Divider/>\r\n               <div className=\"item-wrapper\">\r\n                    <Save />\r\n               </div>\r\n               <div className=\"item-wrapper\">\r\n                    <PlusMinus item=\"Text size\" setting={textSize}\r\n                         increment={increment_textSize}\r\n                         decrement={decrement_textSize} />\r\n               </div>\r\n\r\n               <div className=\"item-wrapper\">\r\n                    <OnOff item=\"Invert colors\" setting={invertColors}\r\n                         action={flip_invertColors} />\r\n               </div>\r\n               <div className= \"item-wrapper\">\r\n                    <Instru item=\"Instructions\" setting = {ins}\r\n                     action = {flip_instructions} />\r\n               </div>\r\n               <div className=\"item-wrapper\">\r\n                    <Micvisual />\r\n               </div>\r\n               <div className=\"item-wrapper\">\r\n                    <Record />\r\n               </div>\r\n               <Divider />\r\n               <div className = {choice}>\r\n                    <p style = {{margin:0}}>-The text size button can be used to change size of \r\n                    text shown in caption space.</p>\r\n                    <p style = {{margin:0}}>-There are 3 different graph can be toggled to help\r\n                    reflex the surrounding voices by clicking forth button</p>\r\n                    <p style = {{margin:0}}>-For circular graph, try to drag it around.</p>\r\n                    <p style = {{margin:0}}>-To stop captioning just click switch button for Recording. Also \r\n                    click again to resume captioning.</p>\r\n                    <p style = {{margin:0}}>-To memorize textsize option, click save after chose a proper size of the text.</p>\r\n               </div>\r\n\r\n          </div>\r\n     );\r\n}\r\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport grey from '@material-ui/core/colors/grey';\nimport blue from '@material-ui/core/colors/blue';\nimport orange from '@material-ui/core/colors/orange';\n\n\nconst mytheme = createMuiTheme({\n  palette: {\n    primary: {\n        main:blue[900]\n    },\n    secondary: {\n        main:orange[800]\n    },\n  },\n  status: {\n    danger: 'orange',\n  },\n});\n\nexport default mytheme;","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport Options from \"../TopSpace/Options\";\nimport {ThemeProvider} from \"@material-ui/core/styles\";\nimport mytheme from './theme'\nimport blue from \"@material-ui/core/colors/blue\"\nimport orange from \"@material-ui/core/colors/orange\"\n\n\nconst drawerWidth = '20vw';//drawer width\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaperO: {\n    width: drawerWidth,\n    background: orange[800],\n  },\n  drawerPaperB: {\n    width: drawerWidth,\n    background: blue[800],\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n}));\n\nexport default function PersistentDrawerLeft(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  var bgColor = props.color;\n  var choice = \"primary\";\n  if (bgColor == \"black\"){\n    choice = \"primary\";\n  }else{\n    choice = \"secondary\";\n  }\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    \n      <div className={classes.root}>\n        <CssBaseline />\n        <ThemeProvider theme = {mytheme}>\n        <AppBar\n          position=\"fixed\"\n          className={clsx(classes.appBar, {\n            [classes.appBarShift]: open,\n          })}\n          color = {choice}\n        >\n          <Toolbar >\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={handleDrawerOpen}\n              edge=\"start\"\n              className={clsx(classes.menuButton, open && classes.hide)}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" noWrap>\n              Welcome to ScribeAR\n            </Typography>\n          </Toolbar>\n        </AppBar>\n\n        <Drawer\n          className={classes.drawer}\n          width = \"50%\"\n          variant=\"persistent\"\n          anchor=\"left\"\n          open={open}\n          // classes={bgColor == 'black' ? {\n          //   paper: classes.drawerPaperO,\n          // }:{\n          //   paper: classes.drawerPaperB,\n          // }}\n          classes = {{paper:classes.drawerPaper}}\n        >\n          <div className={classes.drawerHeader}>\n            <IconButton onClick={handleDrawerClose} color = \"inherit\">\n              {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n            </IconButton>\n          </div>\n\n          <List>\n              <Options />\n\n          </List>\n\n          <List>\n\n          </List>\n        </Drawer>\n        <main\n          className={clsx(classes.content, {\n            [classes.contentShift]: open,\n          })}\n        >\n          <div className={classes.drawerHeader} />\n\n        </main>\n        </ThemeProvider>\n      </div>\n  );\n}\n","import React from 'react'\r\nimport './index.css'\r\nimport '../MiddleSpace/index.css'\r\nimport PersistentDrawerLeft from '../newDrawer'\r\nimport {useSelector} from 'react-redux'\r\n\r\n// JavaScript functions used: setTimeout, clearTimeout, bind, getElementById,\r\n// addEventListener, removeEventListener\r\n// React functions used: constructor, setState, componentDidMount, render\r\nexport default function TopSpace(props){\r\n          var h = '9vh'; // I don't remember why I set the height like this.\r\n          // The Options component takes a function as a prop.\r\n          const meh = (state) => state.meh\r\n          const setting = useSelector(meh)\r\n          var choice = setting ? \"hidden\" : \"visible\"\r\n          return (\r\n               <div className= {setting ? \"TopSpace hidden\" : \"TopSpace shown\"} id=\"outer\" style={{ height: h }}>\r\n                    <div >\r\n                          <div className=\"item-wrapper\" >\r\n                              <PersistentDrawerLeft color = {props.color}/>\r\n                         </div>\r\n\r\n                    </div>\r\n               </div>\r\n          )\r\n}\r\n","import React from 'react'\r\n\r\nconst SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition\r\nconst recognition = new SpeechRecognition()\r\nrecognition.lang = 'en-US'\r\nrecognition.continuous = false\r\nrecognition.interimResults = true\r\n\r\n// In this document, a 'line' is more like a sentence.\r\n// this.state.line is like a buffer of text held at the end of the page. When the line\r\n// is finished, the buffer is flushed: a new div is appended to the 'out' div and\r\n// this.state.line is reset for the next line.\r\n\r\nclass Recognition extends React.PureComponent {\r\n     constructor() {\r\n          super()\r\n          this.state = {\r\n               line: '',\r\n               //recording: true\r\n          }\r\n          this.appendLine = this.appendLine.bind(this)\r\n          this.start = this.start.bind(this)\r\n          this.stop = this.stop.bind(this)\r\n     }\r\n\r\n     componentDidMount() {\r\n          this.start()\r\n     }\r\n\r\n     // Global state 'recording' is passed as a prop. componentDidUpdate is invoked\r\n     // when props change, therefore also when 'recording' changes.\r\n     componentDidUpdate(prevProps, prevState) {\r\n          if (prevProps.isRecording === this.props.isRecording)\r\n               return\r\n          if (this.props.isRecording)\r\n               this.start()\r\n          else this.stop()\r\n     }\r\n\r\n     start() {\r\n          recognition.start()\r\n          // Map the complex recognition result object to a string. You can explore\r\n          // the full object with console.log(e).\r\n          recognition.onresult = (e) => {\r\n               let words = Array.from(e.results)\r\n                 .map(result => result[0])\r\n                 .map(result => result.transcript)\r\n                 .join('');\r\n               words = words.charAt(0).toUpperCase() + words.slice(1)\r\n               if (e.results[0].isFinal) // if line is final\r\n                    this.appendLine(words + '.') // flush buffer\r\n               else this.updateCurrentLine(words) // update state\r\n          }\r\n          // By default, recognition stops when it gets a final result.\r\n          recognition.onend = recognition.start // override this behavior\r\n     }\r\n\r\n     stop() {\r\n          recognition.onresult = () => {} // do nothing with results\r\n          recognition.onend = () => {} // don't restart when ending\r\n          recognition.stop()\r\n     }\r\n\r\n     updateCurrentLine(str) {\r\n          const capts = document.getElementById('captionsSpace')\r\n          var isScrolledToBottom = capts.scrollHeight - capts.clientHeight <= capts.scrollTop + 1\r\n          this.setState({ line: str })\r\n          if (isScrolledToBottom)\r\n               capts.scrollTop = capts.scrollHeight - capts.clientHeight\r\n     }\r\n\r\n     appendLine(str) {\r\n          const capts = document.getElementById('captionsSpace')\r\n          const out = document.getElementById('out')\r\n          var isScrolledToBottom = capts.scrollHeight - capts.clientHeight <= capts.scrollTop + 1\r\n          var div = document.createElement('div') // create new div\r\n          div.textContent = str // set new div's text to the updated current line\r\n          out.appendChild(div) // add the new div to the document inside 'out' element\r\n          this.setState({ line: '' }) // reset line\r\n          if (isScrolledToBottom)\r\n               capts.scrollTop = capts.scrollHeight - capts.clientHeight // scroll to bottom\r\n     }\r\n\r\n     render() {\r\n          // out holds all past lines. curr holds the current line.\r\n          return (\r\n               <div>\r\n                    <div id='out'></div>\r\n                    <div id='curr'>{this.state.line}</div>\r\n               </div>\r\n          )\r\n     }\r\n}\r\n\r\nexport default Recognition\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport './index.css'\r\nimport Recognition from './Recognition'\r\n\r\nexport default function Captions(props) {\r\n     const lineWidth = useSelector((state) => state.lineWidth)\r\n     const recording = useSelector((state) => state.recording)\r\n     // Sloppy styling. Please change.\r\n     var paddingString = (11 - lineWidth) * 3 + 'vw'\r\n     var h = props.height\r\n     var sz = props.textSize\r\n     return ( <div className=\"captionsSpace\" id=\"captionsSpace\"\r\n          style={{\r\n            fontSize: sz,\r\n            height: h,\r\n            width: \"90vw\",\r\n            overflow: \"auto\",\r\n            paddingLeft: paddingString,\r\n            paddingRight: paddingString }}>\r\n               <p className = \"tutorial\">Welcome to ScribeAR</p>\r\n               <p className = \"tutorial\">There are some tips for you to start to use ScribeAR,</p> \r\n               <p className = \"tutorial\">Click button on the upperleft to open the menu.</p>\r\n               <p className = \"tutorial\">Detailed instructions can be found in option menu.</p>\r\n               <Recognition isRecording={recording} />\r\n          </div> )\r\n}\r\n","import React, { Component } from 'react';\n\n\n\nclass AudioVisualiser extends Component {\n\n  constructor(props) {\n    super(props);\n    this.canvas = React.createRef();\n  }\n  draw() {\n      const { audioData } = this.props;\n      const canvas = this.canvas.current;\n      const height = canvas.height;\n      const width = canvas.width;\n      const context = canvas.getContext('2d');\n      context.clearRect(0, 0, width, height);\n\n      if (this.props.mic == 1){ // Line visualization\n          this.drawLine(audioData,context,height,width);\n      }\n      else if (this.props.mic == 2){// Spectrum visualization\n          this.drawSpectrum(audioData,context,height,width);\n      }\n      else if (this.props.mic == 3){// Circular visualization\n          this.drawCircular(audioData,context,height,width);\n      }\n\n\n}\n\ndrawLine(audioData,context,height,width){\n       let x = 0;\n       const sliceWidth = (width * 1.0) / audioData.length;\n      context.lineWidth = 2;\n      context.beginPath();\n      context.moveTo(0, height / 2);\n      for (const item of audioData) {\n          const y = (item / 255.0) * height;\n          context.lineTo(x, y);\n          x += sliceWidth;\n      }\n      context.lineTo(x, height / 2);\n      context.strokeStyle = this.props.iscolor ? '#000000' : '#F8F8FF';\n      context.stroke();\n}\n\ndrawSpectrum(audioData,context,height,width){\n      let x = 0;\n      const barWidth = (width / audioData.length) * 2.5;\n      let barHeight;\n      for(const item of audioData) {\n          barHeight = item/2;\n          context.fillStyle = this.props.iscolor ? '#000000' : '#F8F8FF';\n          context.fillRect(x,height/2-barHeight/2,barWidth,barHeight);\n          x += barWidth + 1;\n          }\n\n}\n\ndrawCircular(audioData,context,height,width){\n      const RADIUS = 80;\n      const POINTS = 360;\n      let sum = audioData.reduce((previous, current) => current += previous);\n      let avg = sum / audioData.length;\n\n      for(let i = 0; i < POINTS; i++) {\n          let rel = ~~(i * (POINTS/audioData.length));\n          let x = width/2 + RADIUS * Math.cos( (i * 2 * Math.PI) / POINTS );\n          let y = height/2 + RADIUS * -Math.sin( (i * 2 * Math.PI) / POINTS );\n          let x_2 = x + (audioData[rel]/4) * Math.cos( (i * 2 * Math.PI) / POINTS );\n          let y_2 = y + (audioData[rel]/4) * -Math.sin( (i * 2 * Math.PI) / POINTS );\n          let x_3 = width/2 + 1 *  avg * Math.cos((i * 2 * Math.PI) / POINTS );\n          let y_3 = height/2 + 1 * avg * -Math.sin((i * 2 * Math.PI) / POINTS );\n          let x_4 = x_3 - 0.5 *  avg * Math.cos((i * 2 * Math.PI) / POINTS );\n          let y_4 = y_3 - 0.5 * avg * -Math.sin((i * 2 * Math.PI) / POINTS );\n          let x_5 = x - 0.3  * Math.cos((i * 2 * Math.PI) / POINTS );\n          let y_5 = y - 0.3  * -Math.sin((i * 2 * Math.PI) / POINTS);\n          //draw the circular spectrum\n          context.beginPath();\n          context.moveTo(x, y);\n          context.lineTo(x_2, y_2);\n          context.strokeStyle = this.props.iscolor ? '#000000' : '#F8F8FF';\n          context.stroke();\n          //draw the margin circle\n          context.beginPath();\n          context.moveTo(x,y);\n          context.lineTo(x_5,y_5);\n          context.stroke();\n          //draw the inner circlew\n          context.beginPath();\n          context.moveTo(x_4,y_4);\n          context.lineTo(x_3,y_3);\n          if(y_4 - y_3 > 10){\n              context.strokeStyle = '#ff0000';\n          }\n          context.stroke();\n          }\n\n}\ncomponentDidUpdate() {\n    this.draw();\n  }\n\n  render() {\n      let width = \"1700vw\"\n      if (this.props.mic == 1){\n          width = \"1800vw\"\n      }else if (this.props.mic == 2){\n          width = \"1600vw\"\n      }else if (this.props.mic == 3){\n          width = \"400vw\"\n      }\n\n    return <canvas width={width} height=\"300vh\" ref={this.canvas} />;\n  }\n\n}\n\nexport default AudioVisualiser;\n","import React, {Component } from 'react';\nimport AudioVisualiser from './AudioVisualiser'\n\n\n/*global Unit8Array*/\n\n\nclass AudioAnalyser extends Component {\n\n     constructor(props) {\n          super(props);\n          this.state = {\n                audioData : new Uint8Array(0)\n          };\n          this.tick = this.tick.bind(this);\n     }\n\n     componentDidMount() {\n     this.audioContext = new (window.AudioContext ||\n       window.webkitAudioContext)();\n     this.analyser = this.audioContext.createAnalyser();\n     this.dataArray = new Uint8Array(this.analyser.frequencyBinCount);\n     this.source = this.audioContext.createMediaStreamSource(this.props.audio);\n     this.source.connect(this.analyser);\n     this.rafId = requestAnimationFrame(this.tick);\n   }\n\n     tick() {\n         if (this.props.mic == 1){\n             //console.log(\"1\");n\n             this.analyser.getByteTimeDomainData(this.dataArray);\n         }else if (this.props.mic == 2){\n             //console.log(\"2\");\n             this.analyser.getByteFrequencyData(this.dataArray);\n         }else if (this.props.mic == 3){\n             this.analyser.getByteFrequencyData(this.dataArray);\n             //this.analyser.getByteTimeDomainData(this.dataArray);\n         }\n     this.setState({ audioData: this.dataArray });\n     this.rafId = requestAnimationFrame(this.tick);\n   }\n\n   componentWillUnmount() {\n    cancelAnimationFrame(this.rafId);\n    this.analyser.disconnect();\n    this.source.disconnect();\n  }\n\n  render() {\n      return <AudioVisualiser audioData={this.state.audioData} iscolor = {this.props.iscolor} mic = {this.props.mic}/>;\n    }\n\n\n}\n\nexport default AudioAnalyser;\n","import React from 'react';\nimport AudioAnalyser from './AudioAnalyser';\n\n\nclass Index extends React.PureComponent {\n  constructor() {\n   super()\n   this.state = {\n     audio: null\n   };\n\n  //this.toggleMicrophone = this.toggleMicrophone.bind(this);\n  this.stopMicrophone = this.stopMicrophone.bind(this);\n  this.getMicrophone = this.getMicrophone.bind(this);\n }\n\n\n\n componentDidUpdate(prevProps,prevState) {\n   if(prevProps.ismic === this.props.ismic)\n      return\n   if(this.props.ismic > 0){\n      this.getMicrophone()\n    }\n   else this.stopMicrophone()\n }\n\n async getMicrophone() {\n    const audio = await navigator.mediaDevices.getUserMedia({\n      audio: true,\n      video: false\n    });\n    this.setState({ audio });\n  }\n\n  stopMicrophone() {\n     this.state.audio.getTracks().forEach(track => track.stop());\n     this.setState({ audio: null });\n   }\n\n\n  render() {\n     return (\n\n         <div className=\"controls\" >\n           {this.state.audio ? <AudioAnalyser audio={this.state.audio}  iscolor = {this.props.iscolor}  mic = {this.props.ismic}/> : ''}\n         </div>\n\n     );\n   }\n}\n\nexport default Index;\n\n// <button onClick={this.toggleMicrophone} style = {{\n//   position:\"fixed\",\n//   top:\"35vh\",\n//   left:\"65vw\",\n//   width:\"10vw\",\n//   height:\"10vh\",\n//   fontSize: \"1.5vw\",\n//   textAlign: \"left\"\n// }}>\n//   {this.state.audio ? 'Stop MIC' : 'Get MIC input'}\n// </button>\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class Draggable extends React.Component{\n\n    drag = (e) => {\n        e.dataTransfer.setData('transfer',e.target.id);\n    }\n\n    noAllowDrop = (e) => {\n        e.stopPropagation();\n    }\n\n    render(){\n        return (\n            <div id= {this.props.id} draggable = \"true\" onDragStart={this.drag} \n            onDragOver= {this.noAllowDrop} style = {this.props.style}>\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nDraggable.propTypes = {\n    id : PropTypes.string,\n    style: PropTypes.object,\n    children: PropTypes.node,\n}","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class Droppable extends React.Component{\n    drop = (e) =>{\n        e.preventDefault();\n        const data = e.dataTransfer.getData('transfer');\n        e.target.appendChild(document.getElementById(data));\n    }\n\n    allowDrop = (e) =>{\n        e.preventDefault();\n    }\n\n    render(){\n        return (\n            <div id = {this.props.id} onDrop = {this.drop} onDragOver = {this.allowDrop} style = {this.props.style}>\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nDroppable.propTypes = {\n    id : PropTypes.string,\n    style: PropTypes.object,\n    children: PropTypes.node,\n}","import React from 'react'\nimport Index from './Loudness/index'\nimport './index.css'\nimport { useSelector } from 'react-redux'\nimport styled from 'styled-components'\nimport Draggable from '../DnD/Draggable'\nimport Droppable from '../DnD/Droppable'\nimport './index.css'\n\n\nconst Wrapper = styled.div`\n    width:100%;\n    padding:2px;\n    display:flex;\n    justify-content: center;\n`;\n\n\nconst droppableStyle = {\n    backgroundColor: '#555',\n    width:'50vw',\n    height: '32vh',\n    margin: '0px'\n};\n \nexport default function MiddleSpace(props) {\n  var h = props.height\n  const mic = useSelector((state) => state.mic)\n  const color = useSelector((state) => state.invertColors)\n //  var wid = \"calc(100vh - 2 * \" + paddingString + \")\"\n //  if(window.innerHeight > window.innerWidth) {\n //    wid = \"calc(100vw - 2 * \" + paddingString + \")\"\n //  }\n\n  if (props.color == 'black'){\n      return ( <div className=\"MiddleSpace\">    \n            <Wrapper>\n                  <Droppable className = \"d1\" id = \"dr1\" style = {{\n                    width:'25vw',\n                    height: '34vh',\n                    margin: '1px'}}>\n                    <div className = \"show1\">\n                      <Draggable id = \"item1\" style = {{margin:'0.5px'}}>\n                        \n                          <Index ismic = {mic} iscolor = {color} style={{\n                          position:\"relative\",\n                          }}/> \n                       \n                      </Draggable>\n                      </div>\n                  </Droppable>\n                  <Droppable className = \"d1\" id = \"dr2\" style = {{\n                    width:'25vw',\n                    height: '34vh',\n                    margin: '1px'}}>\n                      <div className = \"show1\"></div>\n                  </Droppable>\n                  <Droppable className = \"d1\" id = \"dr2\" style = {{\n                    width:'25vw',\n                    height: '34vh',\n                    margin: '1px'}}>\n                      <div className = \"show1\"></div>\n                  </Droppable>\n                  <Droppable className = \"d1\" id = \"dr2\" style = {{\n                    width:'25vw',\n                    height: '34vh',\n                    margin: '1px'}}>\n                      <div className = \"show1\"></div>\n                  </Droppable>\n\n              </Wrapper>\n          </div> )\n  }else{\n    return ( <div className=\"MiddleSpace\">    \n            <Wrapper>\n                  <Droppable className = \"d2\" id = \"dr1\" style = {{\n                    width:'25vw',\n                    height: '34vh',\n                    margin: '1px'}}>\n                    <div className = \"show1\">      \n                      <Draggable id = \"item1\" style = {{margin:'0.5px'}}><Index ismic = {mic} iscolor = {color} style={{\n                        position:\"relative\",\n                      }}/> \n                    </Draggable>\n                    </div>\n                  </Droppable>\n                  <Droppable className = \"d2\" id = \"dr2\" style = {{\n                    width:'25vw',\n                    height: '34vh',\n                    margin: '1px'}}>\n                      <div className = \"show1\"></div>\n                  </Droppable>\n                  <Droppable className = \"d2\" id = \"dr2\" style = {{\n                    width:'25vw',\n                    height: '34vh',\n                    margin: '1px'}}>\n                      <div className = \"show1\"></div>\n                  </Droppable>\n                  <Droppable className = \"d2\" id = \"dr2\" style = {{\n                    width:'25vw',\n                    height: '34vh',\n                    margin: '1px'}}>\n                      <div className = \"show1\"></div>\n                  </Droppable>\n\n              </Wrapper>\n          </div> )\n  }\n}\n","import React from 'react'\nimport './index.css'\nimport MenuHider from './MenuHider'\n\n\nexport default function PlaceHolder(props){\n        var sz = props.textSize;\n        return <div className = \"PlaceHolder\" style = {\n            {\n                fontSize:sz,\n            }\n        }>\n            <MenuHider />\n        </div>\n}","import React from 'react';\nimport { useSelector } from 'react-redux'\nimport TopSpace from './components/TopSpace'\nimport Captions from './components/Captions'\nimport MiddleSpace from './components/MiddleSpace'\nimport PlaceHolder from \"./components/PlaceHolder\"\nimport './App.css'\n\nexport default function App() {\n     // const darkMode = getComputedStyle(document.documentElement).getPropertyValue('--primary'); // #999999\n     // Get global state from Redux. See the React Redux tutorial.\n     const textSize = useSelector((state) => state.textSize)\n     // const numLines = useSelector((state) => state.numLines)\n     const invertColors = useSelector((state) => state.invertColors)\n     // Convert variables to CSS-friendly strings.\n     var sizeString = textSize + 'vh'\n     // Size of bottom space (text area) relative to text size and number of lines.\n     var botHeight = 43 + 'vh'\n     // topHeight + botHeight should always = 100vh because we don't want the full\n     // page to scroll (we only want the individual areas to scroll).\n     var bgColor = invertColors ? 'white': 'black'\n     // var color = invertColors ? 'black' : 'white'\n     if (bgColor == 'black') {\n       return (\n            <div className=\"App-1\" style={{\n                 backgroundColor: 'black',\n                 color: 'white',\n                 overflow: 'hidden',\n                }}>\n                 <TopSpace color = {bgColor}/>\n                 <PlaceHolder color = {bgColor} textSize = {sizeString}/>\n                 <MiddleSpace color = {bgColor}/>\n                 <Captions height={botHeight} textSize={sizeString} />\n         \n            </div>\n       )\n     } else {\n       return (\n            <div className=\"App-2\" style={{\n                 backgroundColor: 'white',\n                 color: 'black',\n                 overflow: 'hidden',\n                }}>\n                 <TopSpace  color = {bgColor}/>\n                 <PlaceHolder color = {bgColor} textSize = {sizeString}/>\n                 <MiddleSpace color = {bgColor}/>\n                 <Captions height={botHeight} textSize={sizeString} />\n            \n            </div>\n       )\n     }\n     // You can't comment in JSX.\n     // The style tag is the easiest way to set style based on JS variables.\n\n}\n","// THIS ENTIRE FILE, INCLUDING COMMENTS EXCEPT FOR THIS ONE, IS AUTOMATICALLY PROVIDED BY NPX\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\r\n\r\nvar savedTextSize = localStorage.getItem('text')\r\nvar choiceTextSize = 6\r\nif (savedTextSize != null){\r\n     choiceTextSize = savedTextSize\r\n}\r\n\r\nconst textSizeReducer = (state = savedTextSize, action) => {\r\n     switch (action.type) {\r\n          case 'INCREMENT_TEXTSIZE':\r\n               return (state) % 12+1;\r\n          case 'DECREMENT_TEXTSIZE':\r\n               return Math.max(1, state - 1);\r\n          default:\r\n               return state;\r\n     }\r\n}\r\n\r\nconst lineWidthReducer = (state = 10, action) => {\r\n     switch (action.type) {\r\n          case 'INCREMENT_LINEWIDTH':\r\n               return Math.min(10, state + 1)\r\n          case 'DECREMENT_LINEWIDTH':\r\n               return Math.max(1, state - 1);\r\n          default:\r\n               return state;\r\n     }\r\n}\r\n\r\nconst numLinesReducer = (state = 4, action) => {\r\n     switch (action.type) {\r\n          case 'INCREMENT_NUMLINES':\r\n               return state + 1;\r\n          case 'DECREMENT_NUMLINES':\r\n               return Math.max(1, state - 1);\r\n          default:\r\n               return state;\r\n     }\r\n}\r\n\r\nconst lockScreenReducer = (state = false, action) => {\r\n     if (action.type === 'FLIP_LOCKSCREEN')\r\n          return !state;\r\n     else return state;\r\n}\r\n\r\nconst invertMicVisualReducer = (state = 0, action) => {\r\n  if (action.type === 'FLIP_MICVISUAL'){\r\n       state = state + 1;\r\n       if (state == 4) {\r\n            state = 0;\r\n       }\r\n  }\r\n  return state;\r\n}\r\n\r\nconst invertColorsReducer = (state = false, action) => {\r\n     if (action.type === 'FLIP_INVERTCOLORS')\r\n          return !state;\r\n     else return state;\r\n}\r\n\r\nconst recordingReducer = (state = true, action) => {\r\n     if (action.type === 'FLIP_RECORDING')\r\n          return !state\r\n     else return state\r\n}\r\n\r\nconst instructionsReducer = (state = false, action) => {\r\n     if (action.type == 'FLIP_INSTRUCTIONS')\r\n          return !state\r\n     else return state\r\n}\r\n\r\nconst menuhideReducer = (state = false, action) => {\r\n     if (action.type == 'FLIP_MENUHIDE')\r\n          return !state\r\n     else return state\r\n}\r\nconst allReducers = combineReducers({\r\n     textSize: textSizeReducer,\r\n     lineWidth: lineWidthReducer,\r\n     numLines: numLinesReducer,\r\n     lockScreen: lockScreenReducer,\r\n     invertColors: invertColorsReducer,\r\n     recording: recordingReducer,\r\n     mic: invertMicVisualReducer,\r\n     ins: instructionsReducer,\r\n     meh: menuhideReducer,\r\n});\r\n\r\nexport default allReducers;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport allReducers from './redux/reducers';\nimport { Provider } from 'react-redux';\n\nconst store = createStore(allReducers);\n\nReactDOM.render(\n     <Provider store={store}>\n          <App />\n     </Provider>,\n     document.getElementById('root')\n);\n\n// AUTOMATIC COMMENT PROVIDED BY NPX:\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}