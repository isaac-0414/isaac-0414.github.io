{"version":3,"sources":["components/LogIn/Config.js","components/TopSpace/Options/BoxSpring/pic/fulltext.png","components/TopSpace/Options/BoxSpring/pic/55.png","components/TopSpace/Options/BoxSpring/pic/subtitle.png","components/TopSpace/Options/ColorSpring/black.png","components/TopSpace/Options/ColorSpring/white.png","store/index.js","redux/actions.js","components/TopSpace/Options/Record/index.js","components/TopSpace/Options/PlusMinus/index.js","components/TopSpace/Options/SpringModal/index.js","components/TopSpace/Options/ColorSpring/index.js","components/TopSpace/Options/BoxSpring/index.js","components/SwitchAPI/index.js","components/TopSpace/Options/index.js","components/newDrawer/theme.js","components/ButtomNavi/index.js","components/LogIn/AuthNavItem.js","components/LogIn/graphService.js","components/LogIn/Welcome.js","components/LogIn/LogIn.js","components/Captions/Recognition/index.js","components/AzureTopSpace/AzureOptions/Key/index.js","components/AzureCaptions/AzureRecognition/index.js","components/AzureTopSpace/AzureOptions/Region/index.js","components/AzureTopSpace/AzureOptions/Language/index.js","components/AzureTopSpace/AzureOptions/EnterButton/index.js","components/AzureTopSpace/AzureOptions/TargetLanguage/index.js","components/AzureTopSpace/AzureOptions/index.js","components/PopMenu/MenuSwitch/index.js","components/PlaceHolder/MenuHider/index.js","components/TopSpace/Options/Micvisual/index.js","components/TopSpace/Options/Stereo/index.js","components/AudioOption/AdvanceMicSetting/index.js","components/AudioOption/index.js","components/newDrawer/index.js","components/TopSpace/index.js","components/AzureDrawer/index.js","components/AzureTopSpace/index.js","components/AzureCaptions/Extender/index.js","components/AzureCaptions/index.js","components/Captions/index.js","components/MiddleSpace/Loudness/AudioVisualiser.js","components/MiddleSpace/Loudness/AudioAnalyser.js","components/MiddleSpace/Loudness/index.js","components/DnD/Draggable/index.js","components/DnD/Droppable/index.js","components/MiddleSpace/Stereo/StereoVisualiser.js","components/MiddleSpace/Stereo/StereoAnalyser.js","components/MiddleSpace/Stereo/index.js","components/MiddleSpace/index.js","components/PlaceHolder/index.js","App.js","serviceWorker.js","redux/reducers.js","index.js"],"names":["module","exports","appId","redirectUri","scopes","initialState","inputValue","initialStateRegion","initialStateSuccess","azureKeyReducer","state","action","type","Object","assign","text","store","combineReducers","desiredAPI","azureOptions","azureKey","isSuccess","targetLanguage","currentLanguage","createStore","increment_textSize","decrement_textSize","increment_numLines","decrement_numLines","next_page","prev_page","increase_sensitivity","decrease_sensitivity","Record","props","setting","useSelector","recording","settingAzure","recordingAzure","dispatch","switchToAzure","useDispatch","isSuccessReducer","IconButton","className","color","size","onClick","PlusMinus","textC","item","parseFloat","toFixed","Button","variant","decrement","increment","useStyles","makeStyles","theme","modal","display","alignItems","justifyContent","paper","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","outline","TransitionsModal","classes","React","useState","open","setOpen","Modal","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","id","invertColors","handleOpen","handleClose","src","black_pic","alt","height","width","disableRipple","white_pic","BoxSpring","bot_size","botsize","full_pic","half_pic","sub_pic","SwitchAPI","wantsWebspeech","onWebspeech","Options","textSize","ins","audioVis","mic","style","fontFamily","Divider","mytheme","createMuiTheme","primary","main","blue","secondary","orange","status","danger","root","flexGrow","AuthNavItem","isAuthenticated","aria-controls","aria-haspopup","authButtonMethod","graph","require","getAuthenticatedClient","accessToken","Client","init","authProvider","done","getUserDetails","a","client","api","get","user","getFolders","folders","WelcomeContent","email","Component","recognition","window","SpeechRecognition","webkitSpeechRecognition","lang","continuous","interimResults","Recognition","console","log","downloadTxtFile","element","document","createElement","results","push","searchEles","getElementById","children","i","length","innerHTML","file","Blob","href","URL","createObjectURL","download","body","appendChild","click","line","targetID","appendLine","bind","start","stop","this","prevProps","prevState","isRecording","onresult","e","words","Array","from","map","result","transcript","join","charAt","toUpperCase","slice","isFinal","updateCurrentLine","onend","str","capts","isScrolledToBottom","scrollHeight","clientHeight","scrollTop","setState","out","div","textContent","scrollIntoView","behavior","PureComponent","UserInput","temp_azure_key","localStorage","getItem","undefined","value","temp","astr_str","substr","handleChange","event","target","preventDefault","setItem","onSubmit","handleSubmit","placeholder","onChange","key","regionOption","targetLang","speechConfig","audioConfig","SpeechSDK","fromDefaultMicrophoneInput","reco","AzureRecognition","azureRegionOptionsReducer","fromSubscription","currentLanguageReducer","targetLanguageReducer","speechRecognitionLanguage","addTargetLanguage","setProfanity","lastRecognized","sessionStarted","s","swal","title","icon","timer","recognizing","language","translations","recognized","canceled","startContinuousRecognitionAsync","stopContinuousRecognitionAsync","close","err","contenteditable","RegionOptions","selected","LanguageOptions","EnterButton","t","r","options","selectedIndex","TargetLanguage","AzureOptions","MenuSwitch","MenuHider","meh","Micvisual","lineColor","spectrumColor","circularColor","FormControlLabel","control","fontSize","label","labelPlacement","Stereovisual","barColor","AdvanceMicSetting","sens","AudioOption","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","menuButton","marginRight","hide","show","drawer","flexShrink","drawerPaperO","drawerPaperB","drawerPaper","drawerHeader","mixins","toolbar","content","contentShift","PersistentDrawerLeft","submenu","shouldShow","pick","useTheme","choice","handleDrawerOpen","handleDrawerClose","anchorEl","setAnchorEl","handleClick","currentTarget","CssBaseline","ThemeProvider","AppBar","position","clsx","Toolbar","aria-label","edge","class","keepMounted","Boolean","Tooltip","TransitionComponent","arrow","MenuItem","EmailShareButton","subject","startIcon","Drawer","anchor","left","right","direction","TopSpace","h","list","fullList","SwipeableTemporaryDrawer","toggleDrawer","Fragment","SwipeableDrawer","onOpen","role","List","Extender","bottom","AzureCaptions","lineWidth","numLines","checkAzureKey","correctAzureKey","paddingString","resH","sz","wantWebspeech","switchOffAzure","margin","scrollBottom","overflow","paddingLeft","paddingRight","isCrorrect","checkKey","region","Captions","maxHeight","setMaxHeight","visible","setVisible","DisTop","azureCaptionSuccess","onScroll","AudioVisualiser","canvas","createRef","audioData","current","context","getContext","clearRect","drawLine","drawSpectrum","drawCircular","x","sliceWidth","beginPath","moveTo","y","lineTo","strokeStyle","iscolor","stroke","barHeight","barWidth","fillStyle","fillRect","avg","reduce","previous","rel","Math","cos","PI","sin","x_2","y_2","x_3","y_3","x_4","y_4","x_5","y_5","draw","ref","AudioAnalyser","Uint8Array","tick","audioContext","AudioContext","webkitAudioContext","analyser","createAnalyser","dataArray","frequencyBinCount","source","createMediaStreamSource","audio","connect","rafId","requestAnimationFrame","getByteTimeDomainData","getByteFrequencyData","cancelAnimationFrame","disconnect","Index","stopMicrophone","getMicrophone","ismic","navigator","mediaDevices","getUserMedia","video","getTracks","forEach","track","Draggable","drag","dataTransfer","setData","noAllowDrop","stopPropagation","draggable","onDragStart","onDragOver","Droppable","drop","data","getData","allowDrop","onDrop","StereoVisualiser","audioDataL","audioDataR","drawRectangle","drawDoubleSpectrum","POINTS","avgL","avgR","RightVal","LeftVal","cir","StereoAnalyser","createMediaElementSource","splitter","createChannelSplitter","analyserL","analyserR","dataArrayL","dataArrayR","Stereo","querySelector","autoplay","crossOrigin","controls","Wrapper","styled","MiddleSpace","PlaceHolder","App","enteredKey","enteredRegion","bot_mode","switchMenus","sizeString","midHeight","isEnteredKey","isEnteredRegion","isCorrectKey","bgColor","setInterval","checkIfStillHere","myTime","isTimerStarted","confirmButtonText","then","isConfirm","buttons","clearTimeout","setTimeout","location","reload","hostname","match","savedTextSize","savedBox","savedMeh","choiceMeh","choiceBox","choiceTextSize","allReducers","max","min","lockScreen","azuresw","ReactDOM","render","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7f35d6c2.chunk.js","sourcesContent":["module.exports = {\n    appId: 'a6852f05-40ef-403b-a3f3-55b5194df447',\n    redirectUri: 'http://localhost:3000',\n    scopes: [\n      'user.read',\n      'calendars.read',\n      'files.read',\n      'files.readwrite'\n    ]\n  };","module.exports = __webpack_public_path__ + \"static/media/fulltext.205e5ca2.png\";","module.exports = __webpack_public_path__ + \"static/media/55.cfc151b9.png\";","module.exports = __webpack_public_path__ + \"static/media/subtitle.066a6ed0.png\";","module.exports = __webpack_public_path__ + \"static/media/black.ada0d4d7.png\";","module.exports = __webpack_public_path__ + \"static/media/white.3c08bf28.png\";","import {createStore, combineReducers} from 'redux'\n\n// 7882896e3ffc4fe3b2f4c055f0914d67 <- thats the key!!\n\nconst initialState = {\n    inputValue: 'enter'\n}\n\nconst initialStateRegion = {\n    inputValue: 'enter'\n}\n\nconst initialStateSuccess= {\n    inputValue: 'false'\n}\n\nconst currentLanguage= {\n    inputValue: 'English - US'\n}\n\nconst targetLanguage= {\n    inputValue: 'English - US'\n}\n\nconst desiredAPI= {\n    inputValue: 'webspeech'\n}\nvar currentLanguageReducer = (state = initialState, action) =>{\n    switch(action.type) {\n        case 'INPUT_CURRENT_LANGUAGE':\n            return Object.assign({}, state, {inputValue: action.text });\n\n        default:\n            return state;\n    }\n}\n\nvar targetLanguageReducer = (state = initialState, action) =>{\n\n    switch(action.type) {\n        case 'INPUT_TARGET_LANGUAGE':\n            return Object.assign({}, state, {inputValue: action.text });\n\n        default:\n            return state;\n    }\n}\n\nvar azureKeyReducer = (state = initialState, action) =>{\n\n    switch(action.type) {\n        case 'INPUT_KEY':\n            return Object.assign({}, state, {inputValue: action.text });\n\n        default:\n            return state;\n    }\n}\nvar desiredAPIReducer = (state = initialState, action) =>{\n\n    switch(action.type) {\n        case 'INPUT_DESIRED_API':\n            return Object.assign({}, state, {inputValue: action.text });\n        default:\n            return state;\n    }\n}\n\nvar isSuccessReducer = (state = initialStateSuccess, action) =>{\n\n    switch(action.type) {\n        case 'INPUT_SUCCESS':\n            return Object.assign({}, state, {inputValue: action.text });\n        default:\n            return state;\n    }\n}\n\n\n\nvar azureRegionOptionsReducer = (state = initialStateRegion, action) => {\n    switch(action.type) {\n        case 'INPUT_REGION':\n            return Object.assign({}, state, {inputValue: action.text});\n\n        default:\n            return state;\n    }\n}\n\n\nconst allReducers = combineReducers({\n    desiredAPI : desiredAPIReducer,\n    azureOptions: azureRegionOptionsReducer,\n    azureKey: azureKeyReducer,\n    isSuccess: isSuccessReducer,\n    targetLanguage: targetLanguageReducer,\n    currentLanguage: currentLanguageReducer,\n});\n\n\nconst store = createStore(azureKeyReducer);\n\nexport default store;\n","// Actions are the functions that we call throughout the project to change global state.\r\n\r\nexport const set_screenWidth = (width) => {\r\n     return {\r\n          type: 'SET_SCREENWIDTH',\r\n          value: width\r\n     };\r\n}\r\n\r\nexport const set_screenHeight = (height) => {\r\n     return {\r\n          type: 'SET_SCREENHEIGHT',\r\n          value: height\r\n     };\r\n}\r\n\r\nexport const increment_textSize = () => {\r\n     return { type: 'INCREMENT_TEXTSIZE' };\r\n}\r\n\r\nexport const decrement_textSize = () => {\r\n     return { type: 'DECREMENT_TEXTSIZE' };\r\n}\r\n\r\nexport const increment_lineWidth = () => {\r\n     return { type: 'INCREMENT_LINEWIDTH' };\r\n}\r\n\r\nexport const decrement_lineWidth = () => {\r\n     return { type: 'DECREMENT_LINEWIDTH' };\r\n}\r\n\r\nexport const increment_numLines = () => {\r\n     return { type: 'INCREMENT_NUMLINES' };\r\n}\r\n\r\nexport const decrement_numLines = () => {\r\n     return { type: 'DECREMENT_NUMLINES' };\r\n}\r\n\r\nexport const flip_lockScreen = () => {\r\n     return { type: 'FLIP_LOCKSCREEN' };\r\n}\r\n\r\nexport const flip_invertColors = () => {\r\n     return { type: 'FLIP_INVERTCOLORS' };\r\n}\r\n\r\nexport const flip_switchMenus = () => {\r\n     return { type: 'FLIP_SWITCHMENUS' };\r\n}\r\nexport const flip_recording = () => {\r\n     return { type: 'FLIP_RECORDING' };\r\n}\r\n\r\nexport const flip_on_webspeech = () =>{\r\n     return { type: 'FLIP_ON_WEBSPEECH'};\r\n}\r\n\r\n\r\nexport const flip_recording_azure = () => {\r\n     return {type: 'FLIP_RECORDING_AZURE'}\r\n}\r\n\r\nexport const azure_key = (key) => {\r\n     return {\r\n          type: 'KEY_AZURE',\r\n          key: \"dsfdsf\"\r\n     }\r\n}\r\nexport const azure_region = (region) => {\r\n     return {\r\n          type: 'AZURE_REGION',\r\n          region: \"dsfdsf\"\r\n     }\r\n}\r\n\r\nexport const flip_entered_key = () => {\r\n     return { type: 'FLIP_ENTERED_KEY' };\r\n}\r\nexport const flip_entered_region = () => {\r\n     return { type: 'FLIP_ENTERED_REGION' };\r\n}\r\nexport const flip_correct_azureKey = () => {\r\n     return { type: 'FLIP_CORRECT_AZUREKEY' };\r\n}\r\nexport const flip_switch_to_azure = () => {\r\n     return { type: 'FLIP_SWITCH_TO_AZURE' };\r\n}\r\nexport const flip_check_azureKey = () => {\r\n     return { type: 'FLIP_CHECK_AZUREKEY' };\r\n}\r\nexport const flip_instructions = () =>{\r\n     return { type: 'FLIP_INSTRUCTIONS'};\r\n}\r\n\r\nexport const flip_menuhide = () =>{\r\n     return { type: 'FLIP_MENUHIDE'};\r\n}\r\n\r\nexport const pick_black = () => {\r\n     return { type: 'PICK_BLACK'};\r\n}\r\n\r\nexport const pick_white = () => {\r\n     return { type: 'PICK_WHITE'}\r\n}\r\n\r\nexport const submenu1 = () =>{\r\n     return { type: 'SUBMENU_1'}\r\n}\r\nexport const submenu2 = () =>{\r\n     return { type: 'SUBMENU_2'}\r\n}\r\nexport const submenu3 = () =>{\r\n     return { type: 'SUBMENU_3'}\r\n}\r\nexport const next_page = () => {\r\n     return { type: 'NEXT_PAGE'}\r\n}\r\nexport const prev_page = () => {\r\n     return {type: 'PREV_PAGE'}\r\n}\r\nexport const flip_stereo = () =>{\r\n     return { type: 'FLIP_STEREO'};\r\n}\r\nexport const forward_stereoVisual = () => {\r\n     return {type: 'FORWARD_STEREOVISUAL'};\r\n}\r\nexport const backward_stereoVisual = () => {\r\n     return {type: 'BACKWARD_STEREOVISUAL'};\r\n}\r\nexport const forward_micVisual = () => {\r\n     return { type: 'FORWARD_MICVISUAL' };\r\n}\r\nexport const backward_micVisual = () => {\r\n     return {type: 'BACKWARD_MICVISUAL'};\r\n}\r\nexport const audiovis_flip = () => {\r\n     return {type: 'AUDIOVIS_FLIP'}\r\n}\r\nexport const mono_line = () => {\r\n     return {type: 'MONO_LINE'}\r\n}\r\nexport const mono_spectrum = () => {\r\n     return {type: 'MONO_SPECTRUM'}\r\n}\r\nexport const mono_circular = () => {\r\n     return {type: 'MONO_CIRCULAR'}\r\n}\r\nexport const stereo_circular = () => {\r\n     return {type: 'STEREO_CIRCULAR'}\r\n}\r\nexport const stereo_rectangular = () => {\r\n     return {type: 'STEREO_RECTANGULAR'}\r\n}\r\nexport const stereo_spectrum = () => {\r\n     return {type: 'STEREO_SPECTRUM'}\r\n}\r\nexport const audiovis_off = () => {\r\n     return {type: 'AUDIOVIS_OFF'}\r\n}\r\nexport const bot_1 = () => {\r\n     return { type: 'BOT_1' }\r\n}\r\nexport const bot_2 = () =>{\r\n     return { type: 'BOT_2'}\r\n}\r\nexport const bot_3 = () => {\r\n     return { type: 'BOT_3'}\r\n}\r\nexport const increase_sensitivity = () => {\r\n     return {type: 'INCREASE_SENSITIVITY'}\r\n}\r\nexport const decrease_sensitivity = () => {\r\n     return {type: 'DECREASE_SENSITIVITY'}\r\n}\r\n","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport store from '../../../../store'\r\nimport './index.css'\r\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PauseCircleFilledIcon from '@material-ui/icons/PauseCircleFilled';\r\nimport { flip_recording, flip_recording_azure } from '../../../../redux/actions'\r\n\r\nexport default function Record(props) {\r\n     const recording = (state) => state.recording\r\n     const recordingAzure = (state) => state.recordingAzure\r\n     const switchToAzure = (state) => state.switchToAzure\r\n     const setting = useSelector(recording)\r\n     const settingAzure = useSelector(recordingAzure)\r\n     const settingSwitchToAzure = useSelector(switchToAzure)// Get current value of recording.\r\n     // useDispatch returns the state modifying function, invoked below.\r\n     const dispatch = useDispatch()\r\n     // record-btn-wrapper toggles between the two buttons using the TopSpace\r\n     // hidden/shown CSS.\r\n     if (store.isSuccessReducer == 'inProgress') {\r\n       return(\r\n            <div>\r\n                 Listening\r\n                 <IconButton className = \"Play\" color= \"inherit\" size = \"large\"  >\r\n                      <PauseCircleFilledIcon className = \"pause\"/>\r\n                 </IconButton>\r\n            </div>\r\n       )\r\n     } else if (store.desiredAPI == 'azure') {\r\n       if (settingAzure == true){\r\n          return(\r\n               <div>\r\n                    Listening\r\n                    <IconButton className = \"Play\" color= \"inherit\" size = \"large\" onClick={() => dispatch(flip_recording_azure())} >\r\n                         <PauseCircleFilledIcon className = \"pause\"/>\r\n                    </IconButton>\r\n               </div>\r\n          )\r\n     } else{\r\n          return(\r\n               <div>\r\n                    To Start\r\n                    <IconButton className = \"Play\" color= \"inherit\" size = \"large\" onClick={() => dispatch(flip_recording_azure())}>\r\n                         <PlayCircleFilledIcon className = \"start\"/>\r\n                    </IconButton>\r\n               </div>\r\n          )\r\n     }\r\n     } else {\r\n       if (setting == true){\r\n             return(\r\n                  <div>\r\n                       Listening\r\n                       <IconButton className = \"Play\" color= \"inherit\" size = \"large\" onClick={() => dispatch(flip_recording())} >\r\n                            <PauseCircleFilledIcon className = \"pause\"/>\r\n                       </IconButton>\r\n                  </div>\r\n             )\r\n        } else{\r\n             return(\r\n                  <div>\r\n                       To Start\r\n                       <IconButton className = \"Play\" color= \"inherit\" size = \"large\" onClick={() => dispatch(flip_recording())}>\r\n                            <PlayCircleFilledIcon className = \"start\"/>\r\n                       </IconButton>\r\n                  </div>\r\n             )\r\n        }\r\n   }\r\n}\r\n","import React from 'react'\r\nimport './index.css'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport {Button} from \"@material-ui/core\"\r\nimport PopMenu from '../../../PopMenu'\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\n\r\nexport default function PlusMinus(props) {\r\n     const setting = useSelector(props.setting) // Get current value of the setting.\r\n     // useDispatch returns the state modifying function, invoked below.\r\n     const dispatch = useDispatch()\r\n     const textC = props.item + ':' + parseFloat(setting).toFixed(1)\r\n     return (\r\n          <div className= \"textsize-wrapper\">\r\n               {textC}\r\n               <div className = \"setting_wrapper\">\r\n                    <Button className = \"minus\" color = \"inherit\" variant = \"outlined\" size = \"small\"\r\n                      onClick={() => dispatch(props.decrement())}>-</Button>\r\n                    <Button  className = \"plus\" color = \"inherit\" variant = \"outlined\" size = \"small\"\r\n                      onClick={() => dispatch(props.increment())}>+</Button>\r\n              </div>\r\n          </div>\r\n     );\r\n}\r\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport {Button} from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    outline: 'none'\n  },\n}));\n\nexport default function TransitionsModal() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button color = 'inherit' variant = 'outlined' onClick={handleOpen}>\n        Instructions\n      </Button>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n\n      >\n        <Fade in={open}>\n          <div className={classes.paper}>\n            <h2 id=\"transition-modal-title\">Tutorial</h2>\n            <p id=\"transition-modal-description\">\n                    -The text size button can be used to change size of\n                    text shown in caption space.<br />\n                    -There are 3 different graph can be toggled to help\n                    reflex the surrounding voices by clicking forth button<br />\n                    -For circular graph, try to drag it around.<br />\n                    -To stop captioning just click switch button for Recording. Also\n                    click again to resume captioning.<br />\n                    -To memorize textsize option, click save after choosing a proper size of the text.\n            </p>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport {Button} from '@material-ui/core';\nimport black_pic from './black.png';\nimport white_pic from './white.png';\nimport {useSelector,useDispatch} from 'react-redux';\nimport {IconButton} from \"@material-ui/core\"\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport './index.css'\nimport {\n        pick_black,\n        pick_white} from '../../../../redux/actions'\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    outline: 'none'\n  },\n}));\n\nexport default function TransitionsModal() {\n  const invertColors = useSelector((state) => state.invertColors)\n  const dispatch = useDispatch()\n\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  if (invertColors == 0){\n    return (\n        <div>\n          <Button color = 'inherit' variant = 'text' onClick={handleOpen}>\n            Choose Theme\n          </Button>\n\n          <div className = 'abv_pic'>\n            <IconButton onClick = {handleOpen}>\n                <img id=\"transition-modal-description\" src = {black_pic} alt = 'black' height = '30vh' width = '30vw'>\n                </img>\n            </IconButton>          \n\n          </div>\n\n          <Modal\n            aria-labelledby=\"transition-modal-title\"\n            aria-describedby=\"transition-modal-description\"\n            className={classes.modal}\n            open={open}\n            onClose={handleClose}\n            closeAfterTransition\n            BackdropComponent={Backdrop}\n            BackdropProps={{\n              timeout: 500,\n            }}\n            \n          >\n            <Fade in={open}>\n              <div className={classes.paper}>\n                <h2 id=\"transition-modal-title\">Theme</h2>\n                <div className = 'wrper'>\n                    <IconButton disableRipple = {true} onClick = {()=>dispatch(pick_black())}>\n                        <img id=\"transition-modal-description\" src = {black_pic} alt = 'black' height = '120vh' width = '200vw'>\n                        </img>\n                    </IconButton>\n                    <IconButton color = 'inherit' onClick = {()=>dispatch(pick_black())}>\n                        <CheckCircleIcon />\n                    </IconButton>\n                </div> \n                <div className = 'wrper'>\n                    <IconButton disableRipple = {true} onClick = {()=>dispatch(pick_white())}>\n                        <img id=\"transition-modal-description\" src = {white_pic} alt = 'white' height = '120vh' width = '200vw'>\n                        </img>\n                    </IconButton>\n                    <IconButton color = 'inherit' onClick = {()=>dispatch(pick_white())}>\n                        <CheckCircleOutlineIcon />\n                    </IconButton>\n                </div>     \n              </div>\n            </Fade>\n          </Modal>\n        </div>\n      );\n  }else{\n    return (\n        <div>\n          <Button color = 'inherit' variant = 'text' onClick={handleOpen}>\n            Choose Theme\n          </Button>\n          \n            <div className = 'abv_pic'>        \n                <IconButton onClick = {handleOpen}>\n                    <img id=\"transition-modal-description\" src = {white_pic} alt = 'white' height = '30vh' width = '30vw'>\n                    </img>\n                </IconButton>  \n            </div>\n\n\n          <Modal\n            aria-labelledby=\"transition-modal-title\"\n            aria-describedby=\"transition-modal-description\"\n            className={classes.modal}\n            open={open}\n            onClose={handleClose}\n            closeAfterTransition\n            BackdropComponent={Backdrop}\n            BackdropProps={{\n              timeout: 500,\n            }}\n            \n          >\n            <Fade in={open}>\n              <div className={classes.paper}>\n                <h2 id=\"transition-modal-title\">Theme</h2>\n                <div className = 'wrper'>\n                    <IconButton disableRipple = {true} onClick = {()=>dispatch(pick_black())}>\n                        <img id=\"transition-modal-description\" src = {black_pic} alt = 'black' height = '120vh' width = '200vw'>\n                        </img>\n                    </IconButton>\n                    <IconButton color = 'inherit' onClick = {()=>dispatch(pick_black())}>\n                        <CheckCircleOutlineIcon />\n                    </IconButton>\n                </div> \n                <div className = 'wrper'>\n                    <IconButton disableRipple = {true} onClick = {()=>dispatch(pick_white())}>\n                        <img id=\"transition-modal-description\" src = {white_pic} alt = 'white' height = '120vh' width = '200vw'>\n                        </img>\n                    </IconButton>\n                    <IconButton color = 'inherit' onClick = {()=>dispatch(pick_white())}>\n                        <CheckCircleIcon />\n                    </IconButton>\n                </div>     \n              </div>\n            </Fade>\n          </Modal>\n        </div>\n      );\n  }\n\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport {Button} from '@material-ui/core';\nimport {useSelector,useDispatch} from 'react-redux';\nimport {IconButton} from \"@material-ui/core\"\nimport full_pic from './pic/fulltext.png'\nimport half_pic from './pic/55.png'\nimport sub_pic from './pic/subtitle.png'\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport './index.css'\nimport {\n        bot_1,\n        bot_2,\n        bot_3} from '../../../../redux/actions'\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    outline: 'none'\n  },\n}));\n\nexport default function BoxSpring() {\n  const bot_size = useSelector((state) => state.botsize)\n  const dispatch = useDispatch()\n\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  if (bot_size === 0){\n      return (\n          <div>\n            <Button color = 'inherit' variant = 'text' onClick={handleOpen}>\n              Caption Size\n            </Button>\n\n            <div className = 'abv_pic'>\n              <IconButton onClick = {handleOpen}>\n                <img id=\"transition-modal-description\" src = {full_pic} alt = 'full' height = '30vh' width = '30vw'>\n                </img>\n              </IconButton>\n\n            </div>\n\n            <Modal\n              aria-labelledby=\"transition-modal-title\"\n              aria-describedby=\"transition-modal-description\"\n              className={classes.modal}\n              open={open}\n              onClose={handleClose}\n              closeAfterTransition\n              BackdropComponent={Backdrop}\n              BackdropProps={{\n                timeout: 500,\n              }}\n\n            >\n              <Fade in={open}>\n                <div className={classes.paper}>\n                  <h2 id=\"transition-modal-title\">Caption Size</h2>\n                  <div className = 'wrper'>\n                      <IconButton disableRipple = {true} onClick = {()=>dispatch(bot_1())}>\n                          <img id=\"transition-modal-description\" src = {full_pic} alt = 'full' height = '120vh' width = '200vw'>\n                          </img>\n                      </IconButton>\n                      <IconButton color = 'inherit' onClick = {()=>dispatch(bot_1())}>\n                          <CheckCircleIcon />\n                      </IconButton>\n                  </div>\n                  <div className = 'wrper'>\n                      <IconButton disableRipple = {true} onClick = {()=>dispatch(bot_2())}>\n                          <img id=\"transition-modal-description\" src = {half_pic} alt = 'half' height = '120vh' width = '200vw'>\n                          </img>\n                      </IconButton>\n                      <IconButton color = 'inherit' onClick = {()=>dispatch(bot_2())}>\n                          <CheckCircleOutlineIcon />\n                      </IconButton>\n                  </div>\n                  <div className = 'wrper'>\n                      <IconButton disableRipple = {true} onClick = {()=>dispatch(bot_3())}>\n                          <img id=\"transition-modal-description\" src = {sub_pic} alt = 'sub' height = '120vh' width = '200vw'>\n                          </img>\n                      </IconButton>\n                      <IconButton color = 'inherit' onClick = {()=>dispatch(bot_3())}>\n                          <CheckCircleOutlineIcon />\n                      </IconButton>\n                  </div>\n                </div>\n              </Fade>\n            </Modal>\n          </div>\n        );\n  }else if (bot_size === 1){\n    return(\n      <div>\n      <Button color = 'inherit' variant = 'text' onClick={handleOpen}>\n        Caption Size\n      </Button>\n\n      <div className = 'abv_pic'>\n        <IconButton onClick = {handleOpen}>\n          <img id=\"transition-modal-description\" src = {half_pic} alt = 'half' height = '30vh' width = '30vw'>\n          </img>\n        </IconButton>\n\n      </div>\n\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n\n      >\n        <Fade in={open}>\n          <div className={classes.paper}>\n            <h2 id=\"transition-modal-title\">Caption Size</h2>\n            <div className = 'wrper'>\n                <IconButton disableRipple = {true} onClick = {()=>dispatch(bot_1())}>\n                    <img id=\"transition-modal-description\" src = {full_pic} alt = 'full' height = '120vh' width = '200vw'>\n                    </img>\n                </IconButton>\n                <IconButton color = 'inherit' onClick = {()=>dispatch(bot_1())}>\n                   <CheckCircleOutlineIcon />\n                </IconButton>\n            </div>\n            <div className = 'wrper'>\n                <IconButton disableRipple = {true} onClick = {()=>dispatch(bot_2())}>\n                    <img id=\"transition-modal-description\" src = {half_pic} alt = 'half' height = '120vh' width = '200vw'>\n                    </img>\n                </IconButton>\n                <IconButton color = 'inherit' onClick = {()=>dispatch(bot_2())}>\n                   <CheckCircleIcon />\n                </IconButton>\n            </div>\n            <div className = 'wrper'>\n                <IconButton disableRipple = {true} onClick = {()=>dispatch(bot_3())}>\n                    <img id=\"transition-modal-description\" src = {sub_pic} alt = 'sub' height = '120vh' width = '200vw'>\n                    </img>\n                </IconButton>\n                <IconButton color = 'inherit' onClick = {()=>dispatch(bot_3())}>\n                    <CheckCircleOutlineIcon />\n                </IconButton>\n            </div>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n    );\n  }else{\n    return(\n      <div>\n      <Button color = 'inherit' variant = 'text' onClick={handleOpen}>\n        Caption Size\n      </Button>\n\n      <div className = 'abv_pic'>\n        <IconButton onClick = {handleOpen}>\n          <img id=\"transition-modal-description\" src = {sub_pic} alt = 'sub' height = '30vh' width = '30vw'>\n          </img>\n        </IconButton>\n\n      </div>\n\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n\n      >\n        <Fade in={open}>\n          <div className={classes.paper}>\n            <h2 id=\"transition-modal-title\">Caption Size</h2>\n            <div className = 'wrper'>\n                <IconButton disableRipple = {true} onClick = {()=>dispatch(bot_1())}>\n                    <img id=\"transition-modal-description\" src = {full_pic} alt = 'full' height = '120vh' width = '200vw'>\n                    </img>\n                </IconButton>\n                <IconButton color = 'inherit' onClick = {()=>dispatch(bot_1())}>\n                   <CheckCircleOutlineIcon />\n                </IconButton>\n            </div>\n            <div className = 'wrper'>\n                <IconButton disableRipple = {true} onClick = {()=>dispatch(bot_2())}>\n                    <img id=\"transition-modal-description\" src = {half_pic} alt = 'half' height = '120vh' width = '200vw'>\n                    </img>\n                </IconButton>\n                <IconButton color = 'inherit' onClick = {()=>dispatch(bot_2())}>\n                   <CheckCircleOutlineIcon />\n                </IconButton>\n            </div>\n            <div className = 'wrper'>\n                <IconButton disableRipple = {true} onClick = {()=>dispatch(bot_3())}>\n                    <img id=\"transition-modal-description\" src = {sub_pic} alt = 'sub' height = '120vh' width = '200vw'>\n                    </img>\n                </IconButton>\n                <IconButton color = 'inherit' onClick = {()=>dispatch(bot_3())}>\n                    <CheckCircleIcon />\n                </IconButton>\n            </div>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n    )\n  }\n}\n","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport store from '../../store'\r\nimport './index.css'\r\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Button from '@material-ui/core/Button';\r\nimport PauseCircleFilledIcon from '@material-ui/icons/PauseCircleFilled';\r\nimport { flip_on_webspeech } from '../../redux/actions'\r\nimport PopAPI from './PopAPI'\r\n\r\nexport default function SwitchAPI(props) {\r\n     const onWebspeech = (state) => state.onWebspeech\r\n     const wantsWebspeech = useSelector(onWebspeech)// Get current value of recording.\r\n     // useDispatch returns the state modifying function, invoked below.\r\n     const dispatch = useDispatch()\r\n     // record-btn-wrapper toggles between the two buttons using the TopSpace\r\n     // hidden/shown CSS.\r\n     if (wantsWebspeech == false) {\r\n        return(\r\n            <div className = 'item-wrap-sw'>\r\n                Source\r\n                  <Button className = 'Switch' color= \"inherit\" size = \"medium\" variant = 'outlined' onClick={() => dispatch(flip_on_webspeech())} >\r\n                        Azure\r\n                  </Button>\r\n            </div>\r\n        )\r\n     } else {\r\n        return(\r\n            <div className = 'item-wrap-sw'>\r\n                Source\r\n                  <Button className = 'Switch' color= \"inherit\" size = \"medium\" variant = 'outlined' onClick={() => dispatch(flip_on_webspeech())}>\r\n                        WebSpeech\r\n                  </Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport Record from './Record'\r\nimport store from '../../../store'\r\nimport Save from './Save'\r\nimport {useSelector, useDispatch} from \"react-redux\"\r\nimport Divider from '@material-ui/core/Divider';\r\nimport './index.css'\r\nimport PlusMinus from './PlusMinus'\r\nimport {Button, IconButton} from '@material-ui/core';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport SpringModal from './SpringModal'\r\nimport ColorSpring from './ColorSpring'\r\nimport BoxSpring from './BoxSpring'\r\nimport SwitchAPI from '../../SwitchAPI'\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';//----------------------------------------------------------\r\n// import OnOff from './OnOff'\r\n// import PopMenu from '../../PopMenu'\r\n// import MenuSwitch from '../../PopMenu/MenuSwitch'\r\n// import AzureOption from '../../AzureTopSpace/AzureOptions'\r\n// import AzureSwitch from './AzureSwitch'\r\n// import SwipeableTemporaryDrawer from \"../../Drawer\"\r\n// import MenuHider from '../../PlaceHolder/MenuHider'\r\n// import AzureTopSpace from '../../AzureTopSpace'\r\n// import Instru from \"./Instru\"\r\n\r\n\r\n\r\nimport {\r\n    flip_switchMenus,\r\n    flip_invertColors,\r\n    increment_textSize,\r\n    decrement_textSize,\r\n    prev_page,\r\n    next_page,\r\n    submenu3,\r\n    submenu2,\r\n    audiovis_flip,\r\n} from '../../../redux/actions'\r\n\r\nimport PauseCircleFilledIcon from \"@material-ui/icons/PauseCircleFilled\";\r\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\r\n\r\nexport default function Options() {\r\n    // These are functions that take an object and return an element of the object.\r\n    // They are passed to useSelector, which feeds the global state object into them.\r\n    const textSize = (state) => state.textSize\r\n    const lineWidth = (state) => state.lineWidth\r\n    const numLines = (state) => state.numLines\r\n    const invertColors = (state) => state.invertColors\r\n    const switchMenus = (state) => state.switchMenus\r\n    const ins = (state) => state.ins\r\n    const if_ins = useSelector((state) => state.ins)\r\n    const dispatch = useDispatch()\r\n    var choice = if_ins ? 'appear' : 'disappear';\r\n\r\n    const stereoSwitch = (state) => state.mic\r\n    const audioVis = useSelector(stereoSwitch)\r\n\r\n    if (store.isSuccessReducer == 'success') {\r\n        return (\r\n            <div className=\"Options\" id=\"options-space\">\r\n                <h2 style={{fontFamily: \"Arial\"}}>OPTIONS</h2>\r\n                <h3>\r\n                    Source\r\n                    <IconButton size = 'small' onClick={() => dispatch(submenu2())}>\r\n                        <MoreHorizIcon />\r\n                    </IconButton>\r\n                </h3>\r\n                <Divider/>\r\n                <div className='item-wrapper'>\r\n                    <SwitchAPI/>\r\n                </div>\r\n                <div className='item-wrapper'>\r\n                    <Record/>\r\n                </div>\r\n                <h3>Display</h3>\r\n                <Divider/>\r\n                <div className=\"item-wrapper\">\r\n                    <PlusMinus item=\"Text size\" setting={textSize}\r\n                               increment={increment_textSize}\r\n                               decrement={decrement_textSize}/>\r\n                </div>\r\n                <div className='item-wrapper'>\r\n                    <ColorSpring/>\r\n                </div>\r\n                <div className='item-wrapper'>\r\n                    <BoxSpring/>\r\n                </div>\r\n                <h3>\r\n                    Audio Visulization\r\n                     <IconButton size = 'small' onClick={() => dispatch(submenu3())}>\r\n                        <MoreHorizIcon />\r\n                    </IconButton>\r\n                </h3>\r\n                <Divider/>\r\n\r\n                <div className=\"item-wrapper-record\">\r\n                    {audioVis ? \"On\" : \"Off\"}\r\n                    <IconButton className=\"Play\" color=\"inherit\" size=\"large\" onClick={() => dispatch(audiovis_flip())}>\r\n                        {audioVis ? <PauseCircleFilledIcon className=\"pause\"/> :\r\n                            <PlayCircleFilledIcon className=\"start\"/>}\r\n                    </IconButton>\r\n                </div>\r\n                <h3>Instruction</h3>\r\n                <Divider/>\r\n                <div className='item-wrapper instruction'>\r\n                    <SpringModal/>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div className=\"Options\" id=\"options-space\">\r\n                <h2 style={{fontFamily: \"Arial\"}}>OPTIONS</h2>\r\n                <h3>\r\n                    Source\r\n                    <IconButton size = 'small' onClick={() => dispatch(submenu2())}>\r\n                        <MoreHorizIcon />\r\n                    </IconButton>\r\n                </h3>\r\n\r\n                <Divider/>\r\n\r\n                <div className='item-wrapper'>\r\n                    <Record/>\r\n                </div>\r\n                <h3>Display</h3>\r\n                <Divider/>\r\n                <div className=\"item-wrapper\">\r\n                    <PlusMinus item=\"Text size\" setting={textSize}\r\n                               increment={increment_textSize}\r\n                               decrement={decrement_textSize}/>\r\n                </div>\r\n                <div className='item-wrapper'>\r\n                    <ColorSpring/>\r\n                </div>\r\n                <div className='item-wrapper'>\r\n                    <BoxSpring/>\r\n                </div>\r\n                <h3>\r\n                    Audio Visulization\r\n                     <IconButton size = 'small' onClick={() => dispatch(submenu3())}>\r\n                        <MoreHorizIcon />\r\n                    </IconButton>\r\n                </h3>\r\n                <Divider/>\r\n                <div className=\"item-wrapper-record\">\r\n                    {audioVis ? \"On\" : \"Off\"}\r\n                    <IconButton className=\"Play\" color=\"inherit\" size=\"large\" onClick={() => dispatch(audiovis_flip())}>\r\n                        {audioVis ? <PauseCircleFilledIcon className=\"pause\"/> :\r\n                            <PlayCircleFilledIcon className=\"start\"/>}\r\n                    </IconButton>\r\n                </div>\r\n\r\n                <h3>Instruction</h3>\r\n                <Divider/>\r\n                <div className='item-wrapper instruction'>\r\n                    <SpringModal/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport grey from '@material-ui/core/colors/grey';\nimport blue from '@material-ui/core/colors/blue';\nimport orange from '@material-ui/core/colors/orange';\n\n\nconst mytheme = createMuiTheme({\n  palette: {\n    primary: {\n        main:blue[900]\n    },\n    secondary: {\n        main:orange[800]\n    },\n  },\n  status: {\n    danger: 'orange',\n  },\n});\n\nexport default mytheme;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Options from '../TopSpace/Options'\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default function ButtomNavi() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <TabPanel value={value} index={0}>\n        <Options />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        ...\n      </TabPanel>\n      {/* <TabPanel value={value} index={2}>\n        ...\n      </TabPanel> */}\n      <div style = {{position:'absolute', top:'93vh'}}>\n      <AppBar position=\"static\">\n        <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\n          <Tab label=\"Item One\" {...a11yProps(0)} />\n          <Tab label=\"Item Two\" {...a11yProps(1)} />\n          {/* <Tab label=\"Item Three\" {...a11yProps(2)} /> */}\n        </Tabs>\n      </AppBar>\n      </div>\n    </div>\n  );\n}\n","import * as React from 'react';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport {\n    Collapse,\n    Container,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink,\n    UncontrolledDropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem } from 'reactstrap';\nimport { Button } from \"@material-ui/core\"\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\n\n\n\n\nfunction UserAvatar(props) {\n    // If a user avatar is available, return an img tag with the pic\n    if (props.user.avatar) {\n        return <img\n                src={props.user.avatar} alt=\"user\"\n                className=\"rounded-circle align-self-center mr-2\"\n                style={{width: '32px'}}></img>;\n    }\n\n    // No avatar available, return a default icon\n    return <i\n            className=\"far fa-user-circle fa-lg rounded-circle align-self-center mr-2\"\n            style={{width: '32px'}}></i>;\n    }\n\n\n\nexport function AuthNavItem(props) {\n    if (props.isAuthenticated) {\n        return (\n            <Button aria-controls=\"simple-menu\"\n        aria-haspopup=\"true\" variant=\"contained\"\n        variant=\"text\" color=\"inherit\"\n        onClick={props.authButtonMethod}\n        startIcon={<EmojiEmotionsIcon/>}>Log Out\n        </Button>\n\n        //   <UncontrolledDropdown>\n        //     <DropdownToggle nav caret>\n        //         {/* <UserAvatar user={props.user}/> */}\n        //     </DropdownToggle>\n        //     <DropdownMenu right>\n        //       <h5 className=\"dropdown-item-text mb-0\">{props.user.displayName}</h5>\n        //       <p className=\"dropdown-item-text text-muted mb-0\">{props.user.email}</p>\n        //       <DropdownItem divider />\n        //       <DropdownItem onClick={props.authButtonMethod}>Sign Out</DropdownItem>\n        //     </DropdownMenu>\n        //   </UncontrolledDropdown>\n        );\n      }\n\n      // Not authenticated, return a sign in link\n      return (\n        // <NavItem>\n\n\n\n        <Button aria-controls=\"simple-menu\"\n        aria-haspopup=\"true\" variant=\"contained\"\n        variant=\"text\" color=\"inherit\"\n        onClick={props.authButtonMethod}\n        startIcon={<AccountCircleIcon/>}>Sign In\n        </Button>\n\n        // </NavItem>\n      );\n};\n\nexport default AuthNavItem;\n","var graph = require('@microsoft/microsoft-graph-client');\n\n\nexport function getAuthenticatedClient(accessToken) {\n  // Initialize Graph client\n  const client = graph.Client.init({\n    // Use the provided access token to authenticate\n    // requests\n    authProvider: (done) => {\n      done(null, accessToken.accessToken);\n    }\n  });\n\n  return client;\n}\n\nexport async function getUserDetails(accessToken) {\n  const client = getAuthenticatedClient(accessToken);\n\n  const user = await client.api('/me').get();\n  return user;\n}\n\n\nexport async function upload123(accessToken, blob) {\n\n\n    var date = new Date().getDate(); //Current Date\n    var month = new Date().getMonth() + 1; //Current Month\n    var year = new Date().getFullYear(); //Current Year\n    const client = getAuthenticatedClient(accessToken);\n    \n    var date = month + '-' + date + '-' + year\n    var full_name = 'Transcript History_' + date + '.txt';\n    const upload =  await client.api('/me/drive/root:/' + full_name + ':/content')\n    .put(blob);\n    \n    return upload;\n}\n\nexport async function getFolders(accessToken) {\n\n  const client = getAuthenticatedClient(accessToken);\n  const folders = await client.api('/me/drive/root/children').get();\n  return folders;\n}\n ","import React from 'react';\nimport {\n  Button,\n  Jumbotron } from 'reactstrap';\n\n\n\nfunction WelcomeContent(props) {\n  // If authenticated, greet the user\n  if (props.isAuthenticated) {\n    return (\n      <div>\n        <h4> Hello {props.user.email}!</h4>\n      </div>\n    );\n  }\n\n  // Not authenticated, present a sign in button\n  return null;\n}\n\nexport default class Welcome extends React.Component{\n  render() {\n    return (\n      <Jumbotron>\n        <WelcomeContent\n          isAuthenticated={this.props.isAuthenticated}\n          user={this.props.user}/>\n      </Jumbotron>\n    );\n  }\n}","import React, { Component } from 'react'\nimport AuthNavItem from './AuthNavItem';\nimport config from './Config';\nimport { UserAgentApplication } from 'msal';\nimport {getUserDetails, getFolders} from './graphService';\nimport Welcome from './Welcome';\nimport { Button } from 'reactstrap';\n\n\nexport default class LogIn extends Component {\n    constructor(props) {\n        super(props);\n\n\n        this.userAgentApplication = new UserAgentApplication({\n            auth: {\n                clientId: config.appId,\n                redirectUri: config.redirectUri,\n            },\n            cache: {\n                cacheLocation: 'localStorage',\n                storeAuthStateInCookie: true\n            }\n        });\n\n\n\n        var user = this.userAgentApplication.getAccount();\n\n\n        this.state = {\n            isAuthenticated : (user !== null),\n            user : {},\n            error: null,\n            items: []\n        }\n        this.normalizeError = this.normalizeError.bind(this)\n\n        if (user) {\n            this.getUserProfile();\n        }\n    }\n\n    normalizeError(error) {\n      var normalizedError = {};\n      if (typeof(error) === 'string') {\n        var errParts = error.split('|');\n        normalizedError = errParts.length > 1 ?\n          { message: errParts[1], debug: errParts[0] } :\n          { message: error };\n      } else {\n        normalizedError = {\n          message: error.message,\n          debug: JSON.stringify(error)\n        };\n      }\n      return normalizedError;\n    }\n\n    async login() {\n        try {\n          // Login via popup\n          await this.userAgentApplication.loginPopup(\n              {\n                scopes: config.scopes,\n                prompt: \"select_account\"\n            });\n          // After login, get the user's profile\n          await this.getUserProfile();\n        }\n        catch(err) {\n          this.setState({\n            isAuthenticated: false,\n            user: {},\n            error: this.normalizeError(err)\n          });\n        }\n      }\n\n\n      logout() {\n        this.userAgentApplication.logout();\n      }\n\n\n      async getUserProfile() {\n        try {\n          var accessToken = await this.userAgentApplication.acquireTokenSilent({\n              scopes: config.scopes\n          });\n  \n          if (accessToken) {\n              var user = await getUserDetails(accessToken);\n            // TEMPORARY: Display the token in the error flash\n            this.setState({\n              isAuthenticated: true,\n              user: {\n                  displayName: user.displayName,\n                  email: user.email || user.userPrincipalName\n              },\n              error: null\n            });\n          }\n        }\n        catch(err) {\n          this.setState({\n            isAuthenticated: false,\n            user: {},\n            error: this.normalizeError(err)\n          });\n        }\n      }\n\n\n      async getFoldersCatch() {\n        try {\n          var accessToken = await window.msal.acquireTokenSilent({\n              scopes: config.scopes\n          });\n  \n          if (accessToken) {\n              var folders = await getFolders(accessToken);\n            // TEMPORARY: Display the token in the error flash\n          }\n        }\n        catch(err) {\n          console.log(err)\n        }\n      }\n    render() {\n        return (\n            <AuthNavItem\n                  isAuthenticated={this.state.isAuthenticated}\n                  user = {this.state.user}\n                  authButtonMethod = {this.state.isAuthenticated ? this.logout.bind(this) : this.login.bind(this)}\n            />\n        )\n    }\n}","import React from 'react'\r\nimport store from '../../../store/';\r\n\r\nimport $ from 'jquery';\r\nimport ScrollButton from 'react-scroll-button'\r\nimport ScrollToBottom from 'react-scroll-to-bottom';\r\n\r\n\r\nconst SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition\r\nconst recognition = new SpeechRecognition()\r\n\r\nrecognition.lang = 'en-US'\r\nrecognition.continuous = false\r\nrecognition.interimResults = true\r\n\r\n// In this document, a 'line' is more like a sentence.\r\n// this.state.line is like a buffer of text held at the end of the page. When the line\r\n// is finished, the buffer is flushed: a new div is appended to the 'out' div and\r\n// this.state.line is reset for the next line.\r\n\r\n\r\n\r\n\r\nexport class Recognition extends React.PureComponent {\r\n     constructor() {\r\n       console.log(\"Constructor\")\r\n\r\n          super()\r\n          this.state = {\r\n               line: '',\r\n               targetID: 'curr'\r\n               //recording: true\r\n          }\r\n          this.appendLine = this.appendLine.bind(this)\r\n          this.start = this.start.bind(this)\r\n          this.stop = this.stop.bind(this)\r\n     }\r\n\r\n     componentDidMount() {\r\n       console.log(\"Component did MOUNT\")\r\n\r\n        if (store.desiredAPI == 'azure') {\r\n          this.stop()\r\n        }  else {\r\n          this.start()\r\n        }\r\n     }\r\n\r\n     // Global state 'recording' is passed as a prop. componentDidUpdate is invoked\r\n     // when props change, therefore also when 'recording' changes.\r\n     componentDidUpdate(prevProps, prevState) {\r\n       console.log(\"Component Did Update\")\r\n\r\n          if (prevProps.isRecording === this.props.isRecording)\r\n               return\r\n          if (this.props.isRecording)\r\n               this.start()\r\n          else {\r\n              this.stop()\r\n          }\r\n     }\r\n\r\n     start() {\r\n          console.log(\"START\")\r\n          recognition.start()\r\n          // Map the complex recognition result object to a string. You can explore\r\n          // the full object with console.log(e).\r\n          recognition.onresult = (e) => {\r\n               let words = Array.from(e.results)\r\n                 .map(result => result[0])\r\n                 .map(result => result.transcript)\r\n                 .join('');\r\n               words = words.charAt(0).toUpperCase() + words.slice(1)\r\n               if (e.results[0].isFinal) // if line is final\r\n                    this.appendLine(words + '.') // flush buffer\r\n               else this.updateCurrentLine(words) // update state\r\n          }\r\n          // By default, recognition stops when it gets a final result.\r\n          recognition.onend = recognition.start // override this behavior\r\n     }\r\n\r\n     downloadTxtFile = () => {\r\n       const element = document.createElement(\"a\");\r\n       var results = [];\r\n       results.push(\"transcript History \\n\\n\\n\\n\");\r\n       var searchEles = document.getElementById(\"out\").children;\r\n       console.log(searchEles);\r\n\r\n       for(var i = 0; i < searchEles.length; i++) {\r\n         console.log(searchEles[i].innerHTML[1,searchEles[i].innerHTML.length-2]);\r\n         results.push(searchEles[i].innerHTML + '\\n');\r\n       }\r\n\r\n       // const file = new Blob([document.getElementById('out').value],\r\n       //             {type: 'text/plain;charset=utf-8'});\r\n       const file = new Blob([results],\r\n                   {type: 'text/plain;charset=utf-8'});\r\n       element.href = URL.createObjectURL(file);\r\n       element.download = \"Script.txt\";\r\n       document.body.appendChild(element);\r\n       element.click();\r\n     }\r\n\r\n     stop() {\r\n       console.log(\"STOP\")\r\n\r\n          recognition.onresult = () => {} // do nothing with results\r\n          recognition.onend = () => {} // don't restart when ending\r\n          recognition.stop()\r\n     }\r\n\r\n     updateCurrentLine(str) {\r\n       console.log(\"Update Current Line\")\r\n\r\n          const capts = document.getElementById('captionsSpace')\r\n          var isScrolledToBottom = capts.scrollHeight - capts.clientHeight <= capts.scrollTop + 1\r\n          this.setState({ line: str })\r\n          if (isScrolledToBottom)\r\n               capts.scrollTop = capts.scrollHeight - capts.clientHeight\r\n     }\r\n\r\n     appendLine(str) {\r\n       console.log(\"Append Line\")\r\n\r\n          const capts = document.getElementById('captionsSpace')\r\n          const out = document.getElementById('out')\r\n          var isScrolledToBottom = capts.scrollHeight - capts.clientHeight <= capts.scrollTop + 1\r\n          var div = document.createElement('div') // create new div\r\n          div.textContent = str // set new div's text to the updated current line\r\n          out.appendChild(div) // add the new div to the document inside 'out' element\r\n          this.setState({ line: '' }) // reset line\r\n          if (isScrolledToBottom)\r\n               capts.scrollTop = capts.scrollHeight - capts.clientHeight // scroll to bottom\r\n     }\r\n\r\n     scrollBottom() {\r\n       var element = document.getElementById(\"curr\");\r\n       element.scrollIntoView({behavior: \"smooth\"});\r\n     }\r\n\r\n     render() {\r\n          // out holds all past lines. curr holds the current line.\r\n          return (\r\n               <div>\r\n                    <div id='out'></div>\r\n                    <div id='curr'>{this.state.line}</div>\r\n               </div>\r\n          )\r\n     }\r\n}\r\n\r\nexport default Recognition\r\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {connect} from 'react-redux';\nimport store from '../../../../store/';\nimport { flip_entered_key, azure_key } from '../../../../redux/actions'\nimport './index.css'\n\n\nclass UserInput extends React.Component {\n\n\n  constructor(props) {\n\n    super(props);\n    var temp_azure_key = localStorage.getItem('azure_subscription_key');\n    if (store.azureKeyReducer == undefined) {\n    this.state = {value: temp_azure_key};\n    } else {\n      if (store.azureKeyReducer != 'incorrect' && store.azureKeyReducer != 'empty') {\n      var temp = store.azureKeyReducer;\n      var astr_str ='';\n      if (temp.length > 5) {\n      temp = temp.substr(temp.length - 4);\n      astr_str = new Array(store.azureKeyReducer.length - 4).join( '*' );\n    }\n      }\n      this.state = {value: astr_str + temp};\n    }\n    if (this.state != undefined) {\n      if (this.state.value != undefined && this.state.value != \"\") {\n        store.azureKeyReducer = this.state.value;\n      }\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n\n  }\n  handleChange(event) {\n    this.setState({value: event.target.value});\n    store.azureKeyReducer = event.target.value;\n    event.preventDefault();\n    localStorage.setItem('azure_subscription_key', event.target.value);\n  }\n\n\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          <div className = \"keytext\">\n            Enter Azure Key:\n          </div>\n\n          <div className = \"keybox\">\n            <input id= \"azure_key_value\" type=\"text\" placeholder= \"Azure Subscription Key\" value={this.state.value} onChange={this.handleChange} />\n          </div>\n\n        </label>\n\n      </form>\n    );\n  }\n}\nexport default UserInput;\n","import React from 'react'\nimport { isPureish } from '@babel/types';\nimport * as SpeechSDK from 'microsoft-cognitiveservices-speech-sdk'\nimport AzureKey from '../../AzureTopSpace/AzureOptions/Key';\nimport store from '../../../store/';\nimport swal from 'sweetalert';\n\nimport $ from 'jquery';\nimport ScrollButton from 'react-scroll-button'\nimport ScrollToBottom from 'react-scroll-to-bottom';\n\nimport {useSelector, connect} from 'react-redux'\nimport {bindActionCreators} from \"redux\"\nvar key = 'empty';\nvar regionOption = 'northcentralus';\nvar tempKey = 'empty';\nvar lang = 'en-US';\nvar targetLang = 'en';\nvar speechConfig = null;\nconst audioConfig = SpeechSDK.AudioConfig.fromDefaultMicrophoneInput();\nvar reco = null;\nexport class AzureRecognition extends React.PureComponent {\n    constructor() {\n        super()\n        this.state = {\n           line: '',\n           targetID: 'azureCurr',\n        }\n        this.appendLine = this.appendLine.bind(this)\n        this.start = this.start.bind(this)\n        this.stop = this.stop.bind(this)\n    }\n\n    componentDidMount() {\n        if (store.desiredAPI == 'webspeech') {\n          this.stop();\n        } else {\n          this.start();\n        }\n    }\n    scrollBottom() {\n      var element = document.getElementById(\"azureCurr\");\n      element.scrollIntoView({behavior: \"smooth\"});\n    }\n\n    downloadTxtFile = () => {\n      const element = document.createElement(\"a\");\n      var results = [];\n      results.push(\"transcript History \\n\\n\\n\\n\");\n      var searchEles = document.getElementById(\"out\");\n      results.push(searchEles.innerHTML);\n      const file = new Blob([results], {type: 'text/plain;charset=utf-8'});\n      element.href = URL.createObjectURL(file);\n      element.download = \"Script.txt\";\n      document.body.appendChild(element);\n      element.click();\n    }\n\n\n    appendLine(str) {\n     const capts = document.getElementById('captionsSpace')\n     const out = document.getElementById('out')\n     var isScrolledToBottom = capts.scrollHeight - capts.clientHeight <= capts.scrollTop + 1\n     var div = document.createElement('div') // create new div\n     div.textContent = str // set new div's text to the updated current line\n     out.appendChild(div) // add the new div to the document inside 'out' element\n     this.setState({ line: '' }) // reset line\n     if (isScrolledToBottom)\n          capts.scrollTop = capts.scrollHeight - capts.clientHeight // scroll to bottom\n}\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.isRecording === this.props.isRecording)\n             return\n        if (this.props.isRecording)\n             this.start()\n        else this.stop()\n   }\n    start() {\n        if (store.isSuccessReducer != 'success') {\n          store.isSuccessReducer = 'inProgress';\n        if (store.azureKeyReducer == undefined || store.azureRegionOptionsReducer == undefined || store.azureKeyReducer == '' || store.azureRegionOptionsReducer == '') {\n          store.azureKeyReducer = 'empty'\n          store.azureRegionOptionsReducer = 'empty'\n        } else {\n          key = store.azureKeyReducer;\n          regionOption = store.azureRegionOptionsReducer;\n        }\n      }\n          speechConfig = SpeechSDK.SpeechTranslationConfig.fromSubscription(key, regionOption);\n          lang = store.currentLanguageReducer;\n          targetLang = store.targetLanguageReducer;\n          speechConfig.speechRecognitionLanguage = lang;\n          speechConfig.addTargetLanguage(targetLang);\n          //allow all profanity (raw);\n          speechConfig.setProfanity(2);\n\n          reco = new SpeechSDK.TranslationRecognizer(speechConfig, audioConfig);\n\n        var out = document.getElementById('out');\n        var lastRecognized = out.innerHTML;\n        reco.sessionStarted = function(s,e) {\n          if (store.isSuccessReducer != 'success') {\n          store.isSuccessReducer = 'success';\n          swal({\n            title: \"Success!\",\n            text: \"Connected to Azure Speech Recognition!\",\n            icon: \"success\",\n            timer: 2000,\n          })\n        }\n      }\n\n        reco.recognizing = function(s, e) {\n            var language = targetLang;\n            out.innerHTML = lastRecognized + e.result.translations.get(language);\n            const capts = document.getElementById('captionsSpace')\n            capts.scrollTop = capts.scrollHeight - capts.clientHeight // scroll to bottom\n        }\n\n        reco.recognized = function (s,e) {\n            window.console.log(e);\n            var language = targetLang;\n            lastRecognized += e.result.translations.get(language) + \"\\r\\n\";\n            out.innerHTML = lastRecognized;\n        }\n        reco.canceled = function (s, e) {\n          store.isSuccessReducer = 'failure'\n          store.azureRegionOptionsReducer = 'incorrect'\n          store.azureKeyReducer = 'incorrect'\n          swal({\n              title: \"Warning!\",\n              text: \"Wrong key or region!\",\n              icon: \"warning\",\n            })\n            this.stop()\n        };\n        reco.startContinuousRecognitionAsync();\n    }\n    stop() {\n        reco.stopContinuousRecognitionAsync(\n            function() {\n                reco.close();\n                reco = undefined;\n            },\n            function (err) {\n                reco.close();\n                reco = undefined;\n            }\n        );\n    }\n    render() {\n        return (\n             <div>\n                  <div contenteditable = \"true\" id='out'></div>\n                    <div id='azureCurr'>{this.props.key}</div>\n             </div>\n        )\n   }\n}\nexport default AzureRecognition\n","import React, { useState } from 'react';\nimport onClickOutside from 'react-onclickoutside';\nimport store from '../../../../store/';\nimport './index.css'\n\nexport default function RegionOptions(props) {\n\n    return (\n        <div className = \"regionSelect\">\n            <select id=\"regionOptions\">\n                        <option value=\"westus\">US West</option>\n                        <option value=\"westus2\">US West 2</option>\n                        <option value=\"ussouthcentral\">US South Central</option>\n                        <option value=\"northcentralus\" selected=\"selected\">US West Central</option>\n                        <option value=\"useast\">US East</option>\n                        <option value=\"useast2\">US East 2</option>\n                        <option value=\"europewest\">Europe West</option>\n                        <option value=\"europenorth\">Europe North</option>\n                        <option value=\"brazilsouth\">South Brazil</option>\n                        <option value=\"australiaeast\">East Australia</option>\n                        <option value=\"asiasoutheast\">Asia Southeast</option>\n                        <option value=\"asiaeast\">Asia East</option>\n                    </select>\n        </div>\n    )\n}\n","import React, { useState } from 'react';\nimport onClickOutside from 'react-onclickoutside';\nimport store from '../../../../store/';\nimport './index.css'\n\nexport default function LanguageOptions(props) {\n\n    return (\n        <div className = \"languageSelect\">\n            <select id=\"languageOptions\">\n                        <option value=\"ar-EG\">Arabic - EG</option>\n                        <option value=\"ca-ES\">Catalan - ES</option>\n                        <option value=\"da-DK\">Danish - DK</option>\n                        <option value=\"da-DK\">Danish - DK</option>\n                        <option value=\"de-DE\">German - DE</option>\n                        <option value=\"en-AU\">English - AU</option>\n                        <option value=\"en-CA\">English - CA</option>\n                        <option value=\"en-GB\">English - GB</option>\n                        <option value=\"en-IN\">English - IN</option>\n                        <option value=\"en-NZ\">English - NZ</option>\n                        <option value=\"en-US\" selected=\"selected\">English - US</option>\n                        <option value=\"es-ES\">Spanish - ES</option>\n                        <option value=\"es-MX\">Spanish - MX</option>\n                        <option value=\"fi-FI\">Finnish - FI</option>\n                        <option value=\"fr-CA\">French - CA</option>\n                        <option value=\"fr-FR\">French - FR</option>\n                        <option value=\"hi-IN\">Hindi - IN</option>\n                        <option value=\"it-IT\">Italian - IT</option>\n                        <option value=\"ja-JP\">Japanese - JP</option>\n                        <option value=\"ko-KR\">Korean - KR</option>\n                        <option value=\"nb-NO\">Norwegian - NO</option>\n                        <option value=\"nl-NL\">Dutch - NL</option>\n                        <option value=\"pl-PL\">Polish - PL</option>\n                        <option value=\"pt-BR\">Portuguese - BR</option>\n                        <option value=\"pt-PT\">Portuguese - PT</option>\n                        <option value=\"ru-RU\">Russian - RU</option>\n                        <option value=\"sv-SE\">Swedish - SE</option>\n                        <option value=\"zh-CN\">Chinese - CN</option>\n                        <option value=\"zh-HK\">Chinese - HK</option>\n                        <option value=\"zh-TW\">Chinese - TW</option>\n\n                    </select>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport './index.css'\nimport store from '../../../../store/';\nimport { flip_entered_key} from '../../../../redux/actions'\nimport { Button } from \"@material-ui/core\"\nimport '../Language'\n\n\n// This code only works if the initial state is Off. It's surprisingly way harder\n// to get this to work if you want the inital state of the checkbox to be checked.\n\nexport default function EnterButton(props) {\n    const dispatch = useDispatch()\n    var s = document.getElementById(\"languageOptions\");\n    var t = document.getElementById(\"targetlanguageoptions\");\n    var r = document.getElementById(\"regionOptions\");\n    if (s != null) {\n      store.currentLanguageReducer = s.options[s.selectedIndex].value;\n    } else {\n      store.currentLanguageReducer = 'en-US';\n    }\n\n    if (t != null) {\n      store.targetLanguageReducer = t.options[t.selectedIndex].value;\n    } else {\n      store.targetLanguageReducer = 'en';\n    }\n\n    if (r != null) {\n      store.azureRegionOptionsReducer = r.options[r.selectedIndex].value;\n    } else {\n      store.azureRegionOptionsReducer = 'northcentralus';\n    }\n\n    // flip recording when space bar is pressed\n\n     //const setting = useSelector(props.setting)\n     // useDispatch returns the state modifying function, invoked below.\n\n     return (\n          <div>\n               <div className=\"setting-wrapper\">\n                    <div className = \"setting-wrapper2\">\n                        <Button className=\"enter\"\n                        onClick={() => dispatch(flip_entered_key())} >\n                            <div id = \"entertext\">\n                                Enter\n                            </div>\n                        </Button>\n                    </div>\n               </div>\n          </div>\n     )\n}\n","import React, { useState } from 'react';\nimport onClickOutside from 'react-onclickoutside';\nimport store from '../../../../store/';\nimport './index.css'\n\nexport default function TargetLanguage(props) {\n\n    return (\n        <div className = \"targetLanguageSelect\">\n            <select id=\"targetlanguageoptions\">\n                        <option value=\"ar-\">TESTINGTESTSSS</option>\n                        <option value=\"ca\">Catalan - ES</option>\n                        <option value=\"da\">Danish - DK</option>\n                        <option value=\"da\">Danish - DK</option>\n                        <option value=\"de\">German - DE</option>\n                        <option value=\"en\">English - AU</option>\n                        <option value=\"en\">English - CA</option>\n                        <option value=\"en\">English - GB</option>\n                        <option value=\"en\">English - IN</option>\n                        <option value=\"en\">English - NZ</option>\n                        <option value=\"en\" selected=\"selected\">English - US</option>\n                        <option value=\"es\">Spanish - ES</option>\n                        <option value=\"es\">Spanish - MX</option>\n                        <option value=\"fi\">Finnish - FI</option>\n                        <option value=\"fr\">French - CA</option>\n                        <option value=\"fr\">French - FR</option>\n                        <option value=\"hi\">Hindi - IN</option>\n                        <option value=\"it\">Italian - IT</option>\n                        <option value=\"ja\">Japanese - JP</option>\n                        <option value=\"ko\">Korean - KR</option>\n                        <option value=\"nb\">Norwegian - NO</option>\n                        <option value=\"nl\">Dutch - NL</option>\n                        <option value=\"pl\">Polish - PL</option>\n                        <option value=\"pt\">Portuguese - BR</option>\n                        <option value=\"pt\">Portuguese - PT</option>\n                        <option value=\"ru\">Russian - RU</option>\n                        <option value=\"sv\">Swedish - SE</option>\n                        <option value=\"zh\">Chinese - CN</option>\n                        <option value=\"zh\">Chinese - HK</option>\n                        <option value=\"zh\">Chinese - TW</option>\n                    </select>\n        </div>\n    )\n}\n","import React from 'react'\nimport UserInput from './Key'\nimport Dropdown from './Region'\nimport AzureRecord from './AzureRecord'\nimport EnterButton from './EnterButton'\nimport { Divider } from '@material-ui/core';\nimport {\n     flip_switchMenus,\n     flip_invertColors,\n     flip_micVisual,\n     increment_textSize,\n     decrement_textSize,\n     increment_lineWidth,\n     decrement_lineWidth,\n     increment_numLines,\n     decrement_numLines\n} from '../../../redux/actions'\n\nimport store from '../../../store/';\nimport LanguageOptions from './Language'\nimport TargetLanguage from './TargetLanguage'\n\n\n\nexport default function AzureOptions() {\n    // These are functions that take an object and return an element of the object.\n    // They are passed to useSelector, which feeds the global state object into them.\n    return (\n\n         <div className=\"AzureOptions\" id=\"azure-options-space\">\n                  <h2 style = {{fontFamily:\"Arial\"}}>AZURE LOGIN</h2>\n\n               <div className=\"item-wrapper\">\n                    <UserInput store ={store}/>\n               </div>\n\n               <br></br> <br></br><br></br><br></br>\n               <div>\n                 <div className = \"regionText\">\n                     Region:\n                 </div>\n                 <Dropdown/>\n               </div>\n              <div className=\"item-wrapper\">\n                   <EnterButton />\n              </div>\n              <div>\n                <div className = \"languageText\">\n                    Source Lang:\n                </div>\n                <LanguageOptions/>\n              </div>\n              <div>\n                <div className = \"transLanguageText\">\n                    Translational Lang:\n                </div>\n                <TargetLanguage/>\n              </div>\n\n         </div>\n    );\n}\n","import React from 'react'\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport {IconButton} from '@material-ui/core'\nimport {useDispatch} from 'react-redux'\nimport {prev_page, next_page} from '../../../redux/actions'\n\nexport default function MenuSwitch(props){\n    const dispatch = useDispatch()\n    return (\n        <div>\n            <IconButton color = 'inherit' onClick = {()=>(dispatch(prev_page()))}>\n                <ArrowBackIosIcon />\n            </IconButton>\n            {props.title}\n            <IconButton color = 'inherit' onClick = {()=>(dispatch(next_page()))}>\n                <ArrowForwardIosIcon />\n            </IconButton>\n        </div>\n    )\n}","import React,{ useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { flip_menuhide } from '../../../redux/actions'\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport LockIcon from '@material-ui/icons/Lock';\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\nexport default function MenuHider(props){\n    const meh = (state) => state.meh;\n    const setting = useSelector(meh);\n    const dispatch = useDispatch();\n    // useEffect(() => {\n    //     const timer = setTimeout(() => {\n    //         dispatch(flip_menuhide())\n    //     }, 10000);\n    //     return () => clearTimeout(timer);\n    // }, []);\n\n    function handleAgain(){\n        dispatch(flip_menuhide())\n        // const timerr = setTimeout(() => {\n        //     dispatch(flip_menuhide())\n        // }, 10000);\n        // return () => clearTimeout(timerr)\n    }\n\n    if (setting == 0){\n        return (\n            <div>\n                <IconButton className = \"c2\" color = \"inherit\" onClick = {()=>dispatch(flip_menuhide())}>\n                    <LockIcon className = 'c3' />\n                </IconButton>\n            </div>\n        )\n    }else{\n        return (\n            <div>\n                <IconButton className = \"c2\" color = \"inherit\" onClick = {()=>handleAgain()}>\n                    <LockOpenIcon className = 'c3' />\n                </IconButton>\n            </div>\n        )\n    }\n\n}\n","import React from 'react'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {mono_line, mono_spectrum, mono_circular} from '../../../../redux/actions'\nimport {IconButton, FormControlLabel} from \"@material-ui/core\"\nimport ShowChartSharpIcon from '@material-ui/icons/ShowChartSharp';\nimport RadioButtonUncheckedOutlinedIcon from '@material-ui/icons/RadioButtonUncheckedOutlined';\nimport BarChartSharpIcon from '@material-ui/icons/BarChartSharp';\n\n\n\nexport default function Micvisual(props) {\n\n    // useDispatch returns the state modifying function, invoked below.\n    const setting = useSelector((state) => state.mic)\n    const dispatch = useDispatch()\n\n    let color = {\n        lineColor: 'inherit',\n        spectrumColor: 'inherit',\n        circularColor: 'inherit',\n    }\n\n    if(setting == 0 || setting > 3){\n        color.lineColor = 'inherit';\n        color.circularColor = 'inherit';\n        color.spectrumColor = 'inherit';\n    }else if (setting == 1){\n        color.lineColor = 'primary';\n        color.spectrumColor = 'inherit';\n        color.circularColor = 'inherit';\n    }else if (setting == 2){\n        color.lineColor = 'inherit';\n        color.spectrumColor = 'primary';\n        color.circularColor = 'inherit';\n    }else if (setting == 3){\n        color.lineColor = 'inherit';\n        color.spectrumColor = 'inherit';\n        color.circularColor = 'primary';\n    }\n\n    if(setting != 0 && setting < 4){\n        localStorage.setItem('mic',setting);\n    }\n\n    return (\n        <div>\n            <FormControlLabel\n                value=\"Line\"\n                control={<IconButton color={color.lineColor} onClick={() => (dispatch(mono_line()))}>\n                    <ShowChartSharpIcon fontSize=\"large\"/>\n                </IconButton>}\n                label=\"Line\"\n                labelPlacement=\"bottom\"\n            />\n\n            <FormControlLabel\n                value=\"Spectrum\"\n                control={<IconButton color={color.spectrumColor} onClick={() => (dispatch(mono_spectrum()))}>\n                    <BarChartSharpIcon fontSize=\"large\"/>\n                </IconButton>}\n                label=\"Spectrum\"\n                labelPlacement=\"bottom\"\n            />\n\n            <FormControlLabel\n                value=\"Circular\"\n                control={<IconButton color={color.circularColor} onClick={() => (dispatch(mono_circular()))}>\n                    <RadioButtonUncheckedOutlinedIcon fontSize=\"large\"/>\n                </IconButton>}\n                label=\"Circular\"\n                labelPlacement=\"bottom\"\n            />\n\n\n        </div>\n\n    )\n}\n","import React from 'react'\nimport {useSelector, useDispatch} from 'react-redux'\n\nimport {\n    stereo_circular,\n    stereo_rectangular,\n    stereo_spectrum,\n\n} from '../../../../redux/actions'\nimport {FormControlLabel, IconButton} from \"@material-ui/core\"\nimport RadioButtonUncheckedOutlinedIcon from '@material-ui/icons/RadioButtonUncheckedOutlined';\nimport BarChartSharpIcon from '@material-ui/icons/BarChartSharp';\nimport Crop169Icon from '@material-ui/icons/Crop169';\n\n\nexport default function Stereovisual(props) {\n\n    // useDispatch returns the state modifying function, invoked below.\n    const dispatch = useDispatch()\n    const setting = useSelector((state) => state.mic)\n\n    let color = {\n        circularColor: 'inherit',\n        barColor: 'inherit',\n        spectrumColor: 'inheirt',\n    }\n\n    if (setting == 0 || setting < 4) {\n        color.circularColor = 'inherit';\n        color.barColor = 'inherit';\n        color.spectrumColor = 'inherit';\n    } else if (setting == 4) {\n        color.circularColor = 'primary';\n        color.barColor = 'inherit';\n        color.spectrumColor = 'inherit';\n    } else if (setting == 5) {\n        color.circularColor = 'inherit';\n        color.barColor = 'primary';\n        color.spectrumColor = 'inherit';\n    } else if (setting == 6) {\n        color.circularColor = 'inherit';\n        color.barColor = 'inherit';\n        color.spectrumColor = 'primary';\n    }\n\n    if(setting != 0 && setting > 3){\n        localStorage.setItem('mic',setting);\n    }\n\n    return (\n        <div>\n            <FormControlLabel\n                value=\"Circular\"\n                control={<IconButton color={color.circularColor} onClick={() => (dispatch(stereo_circular()))}>\n                    <RadioButtonUncheckedOutlinedIcon fontSize=\"large\"/>\n                </IconButton>}\n                label=\"Circular\"\n                labelPlacement=\"bottom\"\n            />\n            <FormControlLabel\n                value=\"Bar\"\n                control={<IconButton color={color.barColor} onClick={() => (dispatch(stereo_rectangular()))}>\n                    <Crop169Icon fontSize=\"large\"/>\n                </IconButton>}\n                label=\"Bar\"\n                labelPlacement=\"bottom\"\n            />\n            <FormControlLabel\n                value=\"Spectrum\"\n                control={<IconButton color={color.spectrumColor} onClick={() => (dispatch(stereo_spectrum()))}>\n                    <BarChartSharpIcon fontSize=\"large\"/>\n                </IconButton>}\n                label=\"Spectrum\"\n                labelPlacement=\"bottom\"\n            />\n\n\n        </div>\n\n    )\n}\n","import React from 'react';\nimport PlusMinus from \"../../TopSpace/Options/PlusMinus\";\nimport {\n    decrease_sensitivity,\n    increase_sensitivity,\n} from \"../../../redux/actions\";\n\nexport default function AdvanceMicSetting() {\n   const sens = (state) => state.sens;\n\n    return (\n        <div className=\"item-wrapper\">\n            <PlusMinus item=\"Sensitivity\" setting={sens}\n                       increment={increase_sensitivity}\n                       decrement={decrease_sensitivity}/>\n        </div>\n    )\n}","import React from 'react';\n\nimport Micvisual from '../TopSpace/Options/Micvisual';\nimport Stereovisual from '../TopSpace/Options/Stereo';\nimport Divider from '@material-ui/core/Divider';\nimport {Button, IconButton} from \"@material-ui/core\"\nimport { useSelector, useDispatch } from 'react-redux'\nimport {audiovis_off} from '../../redux/actions'\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\nimport AdvanceMicSetting from './AdvanceMicSetting/index.js'\n\nimport '../TopSpace/Options/index.css'\n\nexport default function AudioOption (props){\n\n    const dispatch = useDispatch()\n    \n    return (\n        <div>\n            <h2>Audio Setting</h2>\n            <Divider />\n            <div className=\"off_wrapper\">\n            <IconButton color='inherit' onClick={()=>(dispatch(audiovis_off()))}>\n               <NotInterestedIcon fontSize=\"large\"/>\n            </IconButton>\n                Turn Off Visualization\n            </div>\n            <h3>Mono</h3>\n              <Divider/>\n              <div className=\"item-wrapper\">\n             <Micvisual />\n              </div>\n              <h3>Stereo</h3>\n            <Divider/>\n            <div className=\"item-wrapper\">\n            <Stereovisual/>\n            </div>\n            <h3>Setting</h3>\n            <Divider/>\n            <div className=\"item-wrapper\">\n               <AdvanceMicSetting/>\n            </div>\n            {/*<h3>Setting</h3>*/}\n            {/*<Divider/>*/}\n            {/*<div className=\"item-wrapper\">*/}\n            {/*    Sensitivity*/}\n            {/*</div>*/}\n        </div>\n\n\n    )\n}","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport Options from \"../TopSpace/Options\";\nimport {ThemeProvider} from \"@material-ui/core/styles\";\nimport mytheme from './theme'\nimport blue from \"@material-ui/core/colors/blue\"\nimport orange from \"@material-ui/core/colors/orange\"\nimport ButtomNavi from '../ButtomNavi'\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport {useSelector,useDispatch} from 'react-redux';\nimport ShareIcon from '@material-ui/icons/Share';\nimport {EmailShareButton} from 'react-share';\nimport {EmailIcon} from \"react-share\";\nimport Fade from '@material-ui/core/Fade';\nimport SaveIcon from '@material-ui/icons/SaveSharp';\nimport LogIn from \"../LogIn/LogIn\";\nimport MailIcon from '@material-ui/icons/Mail';\nimport PopMenu from '../PopMenu'\nimport store from '../../store'\nimport { Button, Tooltip } from \"@material-ui/core\"\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\nimport Recognition from \"../Captions/Recognition\"\nimport AzureRecognition from \"../AzureCaptions/AzureRecognition\"\nimport AzureOption from '../AzureTopSpace/AzureOptions'\nimport MenuSwitch from '../PopMenu/MenuSwitch'\nimport MenuHider from '../PlaceHolder/MenuHider'\nimport './index.css'\nimport {prev_page, next_page} from '../../redux/actions'\nimport AudioOption from '../AudioOption';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\n\n\n\nconst drawerWidth = '21vw';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  show: {\n    display: 'block',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaperO: {\n    width: drawerWidth,\n    background: orange[800],\n  },\n  drawerPaperB: {\n    width: drawerWidth,\n    background: blue[800],\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n}));\n\nexport default function PersistentDrawerLeft(props) {\n  const submenu = (state) => state.submenu;\n  const menuhide = (state) => state.meh;\n  const onWebspeech = (state) => state.onWebspeech;\n  const dispatch = useDispatch();\n  const setting = useSelector(submenu);\n  const shouldShow = useSelector(menuhide);\n  const wantsWebspeech = useSelector(onWebspeech);\n  var hiddenText = ''\n  var pick = \"detail_wrap\"\n  if (shouldShow == 0){\n    pick += '.active'\n    hiddenText = 'visible'\n  }else{\n    pick = 'detail_wrap'\n    hiddenText = 'auto-hide'\n  }\n\n  var hiddenTextDownload = 'Download Text'\n\n\n  const classes = useStyles();\n  const theme = useTheme();\n  var bgColor = props.color;\n  var choice = \"primary\";\n  if (bgColor == \"black\"){\n    choice = \"primary\";\n  }else{\n    choice = \"secondary\";\n  }\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClick = (event) => {\n  setAnchorEl(event.currentTarget);\n};\n\nconst handleClose = () => {\n  setAnchorEl(null);\n};\n  if (wantsWebspeech) {\n  if (setting == 1){\n    return (\n        <div className={classes.root}>\n          <CssBaseline />\n          <ThemeProvider theme = {mytheme}>\n          <div className = {pick} >\n            <AppBar\n              position=\"fixed\"\n              className={clsx(classes.appBar, {\n                [classes.appBarShift]: open,\n              }\n              )}\n              color = {choice}\n            >\n              <Toolbar >\n                <IconButton\n                  color=\"inherit\"\n                  aria-label=\"open drawer\"\n                  onClick={handleDrawerOpen}\n                  edge=\"start\"\n                  className={clsx(classes.menuButton, open && classes.hide)}\n                >\n                  <MenuIcon />\n                </IconButton>\n                <div class=\"border d-table w-100\">\n      <h2 class=\"d-table-cell tar2\">ScribeAR</h2>\n          {/* <Welcome\n          isAuthenticated={isAuthenticated}\n          user = {user}\n          /> */}\n      <div class=\"d-table-cell tar\">\n          <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" variant=\"contained\" variant=\"text\" color=\"inherit\" onClick={handleClick} startIcon={<ShareIcon/>}>Share</Button>\n          <Menu\n            id=\"simple-menu\"\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={handleClose}\n          >\n            <Tooltip TransitionComponent={Fade} title=\"Share through emails\" arrow>\n            <MenuItem onClick={handleClose}>\n              <EmailShareButton subject=\"Transcript History\">\n                <Button startIcon={<MailIcon/>}> EMAIL</Button>\n              </EmailShareButton>\n            </MenuItem>\n            </Tooltip>\n            <Tooltip TransitionComponent={Fade} title=\"Download the transcript as a .txt file\" arrow>\n            <MenuItem onClick={handleClose}>\n              <Button variant=\"contained\" variant=\"text\" onClick={new Recognition().downloadTxtFile} startIcon={<SaveIcon fontSize='large'/>}>Download</Button>\n            </MenuItem>\n            </Tooltip>\n            {/* <Tooltip TransitionComponent={Fade} title=\"Upload the transcript to OneDrive\" arrow> */}\n            {/* <MenuItem onClick={handleClose}>\n              <Upload/>\n            </MenuItem> */}\n            {/* <MenuItem onClick={handleClose}>\n              <Folders/>\n            </MenuItem> */}\n            {/* </Tooltip> */}\n          </Menu>\n\n          </div>\n          <div className='lock-wrap'>\n            <MenuHider />\n\n          </div>\n    </div>\n  </Toolbar>\n</AppBar>\n          </div>\n          <Drawer\n            className={classes.drawer}\n            width = \"50%\"\n            variant=\"persistent\"\n            anchor=\"left\"\n            open={open}\n            classes = {{paper:classes.drawerPaper}}\n          >\n          <div className={classes.drawerHeader}>\n          <MenuSwitch title = 'Main Menu' left = {prev_page} right={next_page} submenu = 'true'/>\n                <IconButton onClick={handleDrawerClose} color = \"inherit\">\n                  {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n                </IconButton>\n\n            </div>\n            <Options />\n          </Drawer>\n          <main\n            className={clsx(classes.content, {\n              [classes.contentShift]: open,\n            })}\n          >\n            <div className={classes.drawerHeader} />\n\n          </main>\n          </ThemeProvider>\n        </div>\n    );\n  }else if (setting == 2){\n    return (\n        <div className={classes.root}>\n        <CssBaseline />\n        <ThemeProvider theme = {mytheme}>\n        <div className = {pick}>\n          <AppBar\n            position=\"fixed\"\n            className={clsx(classes.appBar, {\n              [classes.appBarShift]: open,\n            })}\n            color = {choice}\n          >\n          <Toolbar >\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={handleDrawerOpen}\n              edge=\"start\"\n              className={clsx(classes.menuButton, open && classes.hide)}\n            >\n              <MenuIcon />\n            </IconButton>\n            <div class=\"border d-table w-100\">\n  <h2 class=\"d-table-cell tar2\">Welcome to ScribeAR</h2>\n      {/* <Welcome\n      isAuthenticated={isAuthenticated}\n      user = {user}\n      /> */}\n  <div class=\"d-table-cell tar\">\n      <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" variant=\"contained\" variant=\"text\" color=\"inherit\" onClick={handleClick} startIcon={<ShareIcon/>}>Share</Button>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <Tooltip TransitionComponent={Fade} title=\"Share through emails\" arrow>\n        <MenuItem onClick={handleClose}>\n          <EmailShareButton subject=\"Transcript History\">\n            <Button startIcon={<MailIcon/>}> EMAIL</Button>\n          </EmailShareButton>\n        </MenuItem>\n        </Tooltip>\n        <Tooltip TransitionComponent={Fade} title=\"Download the transcript as a .txt file\" arrow>\n        <MenuItem onClick={handleClose}>\n        <Button variant=\"contained\" variant=\"text\" onClick={new Recognition().downloadTxtFile} startIcon={<SaveIcon fontSize='large'/>}>Download</Button>\n        </MenuItem>\n        </Tooltip>\n        {/* <Tooltip TransitionComponent={Fade} title=\"Upload the transcript to OneDrive\" arrow> */}\n        {/* <MenuItem onClick={handleClose}>\n          <Upload/>\n        </MenuItem> */}\n        {/* <MenuItem onClick={handleClose}>\n          <Folders/>\n        </MenuItem> */}\n        {/* </Tooltip> */}\n      </Menu>\n\n      </div>\n      <div className='lock-wrap'>\n        <MenuHider />\n\n      </div>\n</div>\n</Toolbar>\n          </AppBar>\n        </div>\n\n        <Drawer\n          className={classes.drawer}\n          width = \"50%\"\n          variant=\"persistent\"\n          anchor=\"left\"\n          open={open}\n          classes = {{paper:classes.drawerPaper}}\n        >\n        <div className={classes.drawerHeader}>\n        <MenuSwitch title = 'Source' left = {prev_page} right={next_page} submenu = 'true'/>\n                <IconButton onClick={handleDrawerClose} color = \"inherit\">\n                  {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n                </IconButton>\n          </div>\n          <AzureOption />\n        </Drawer>\n        <main\n          className={clsx(classes.content, {\n            [classes.contentShift]: open,\n          })}\n        >\n          <div className={classes.drawerHeader} />\n\n        </main>\n        </ThemeProvider>\n        </div>\n    )\n  } else{\n    return (\n        <div className={classes.root}>\n        <CssBaseline />\n        <ThemeProvider theme = {mytheme}>\n        <div className = {pick}>\n          <AppBar\n            position=\"fixed\"\n            className={clsx(classes.appBar, {\n              [classes.appBarShift]: open,\n            })}\n            color = {choice}\n          >\n          <Toolbar >\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={handleDrawerOpen}\n              edge=\"start\"\n              className={clsx(classes.menuButton, open && classes.hide)}\n            >\n              <MenuIcon />\n            </IconButton>\n            <div class=\"border d-table w-100\">\n  <h2 class=\"d-table-cell tar2\">Welcome to ScribeAR</h2>\n      {/* <Welcome\n      isAuthenticated={isAuthenticated}\n      user = {user}\n      /> */}\n  <div class=\"d-table-cell tar\">\n      <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" variant=\"contained\" variant=\"text\" color=\"inherit\" onClick={handleClick} startIcon={<ShareIcon/>}>Share</Button>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <Tooltip TransitionComponent={Fade} title=\"Share through emails\" arrow>\n        <MenuItem onClick={handleClose}>\n          <EmailShareButton subject=\"Transcript History\">\n            <Button startIcon={<MailIcon/>}> EMAIL</Button>\n          </EmailShareButton>\n        </MenuItem>\n        </Tooltip>\n        <Tooltip TransitionComponent={Fade} title=\"Download the transcript as a .txt file\" arrow>\n        <MenuItem onClick={handleClose}>\n        <Button variant=\"contained\" variant=\"text\" onClick={new Recognition().downloadTxtFile} startIcon={<SaveIcon fontSize='large'/>}>Download</Button>\n        </MenuItem>\n        </Tooltip>\n        {/* <Tooltip TransitionComponent={Fade} title=\"Upload the transcript to OneDrive\" arrow> */}\n        {/* <MenuItem onClick={handleClose}>\n          <Upload/>\n        </MenuItem> */}\n        {/* <MenuItem onClick={handleClose}>\n          <Folders/>\n        </MenuItem> */}\n        {/* </Tooltip> */}\n      </Menu>\n      </div>\n      <div className='lock-wrap'>\n        <MenuHider />\n\n      </div>\n</div>\n</Toolbar>\n          </AppBar>\n        </div>\n\n        <Drawer\n          className={classes.drawer}\n          width = \"50%\"\n          variant=\"persistent\"\n          anchor=\"left\"\n          open={open}\n          classes = {{paper:classes.drawerPaper}}\n        >\n        <div className={classes.drawerHeader}>\n        <MenuSwitch title = 'Audio Visuals' left = {prev_page} right={next_page} submenu = 'true'/>\n                <IconButton onClick={handleDrawerClose} color = \"inherit\">\n                  {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n                </IconButton>\n          </div>\n          <AudioOption />\n        </Drawer>\n        <main\n          className={clsx(classes.content, {\n            [classes.contentShift]: open,\n          })}\n        >\n          <div className={classes.drawerHeader} />\n\n        </main>\n        </ThemeProvider>\n        </div>\n    )\n  }\n} else {\n  if (setting == 1){\n    return (\n        <div className={classes.root}>\n          <CssBaseline />\n          <ThemeProvider theme = {mytheme}>\n          <div className = {pick} >\n            <AppBar\n              position=\"fixed\"\n              className={clsx(classes.appBar, {\n                [classes.appBarShift]: open,\n              }\n              )}\n              color = {choice}\n            >\n              <Toolbar >\n                <IconButton\n                  color=\"inherit\"\n                  aria-label=\"open drawer\"\n                  onClick={handleDrawerOpen}\n                  edge=\"start\"\n                  className={clsx(classes.menuButton, open && classes.hide)}\n                >\n                  <MenuIcon />\n                </IconButton>\n                <div class=\"border d-table w-100\">\n      <h2 class=\"d-table-cell tar2\">ScribeAR</h2>\n          {/* <Welcome\n          isAuthenticated={isAuthenticated}\n          user = {user}\n          /> */}\n      <div class=\"d-table-cell tar\">\n          <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" variant=\"contained\" variant=\"text\" color=\"inherit\" onClick={handleClick} startIcon={<ShareIcon/>}>Share</Button>\n          <Menu\n            id=\"simple-menu\"\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={handleClose}\n          >\n            <Tooltip TransitionComponent={Fade} title=\"Share through emails\" arrow>\n            <MenuItem onClick={handleClose}>\n              <EmailShareButton subject=\"Transcript History\">\n                <Button startIcon={<MailIcon/>}> EMAIL</Button>\n              </EmailShareButton>\n            </MenuItem>\n            </Tooltip>\n            <Tooltip TransitionComponent={Fade} title=\"Download the transcript as a .txt file\" arrow>\n            <MenuItem onClick={handleClose}>\n              <Button variant=\"contained\" variant=\"text\" onClick={new AzureRecognition().downloadTxtFile} startIcon={<SaveIcon fontSize='large'/>}>Download</Button>\n            </MenuItem>\n            </Tooltip>\n            {/* <Tooltip TransitionComponent={Fade} title=\"Upload the transcript to OneDrive\" arrow> */}\n            {/* <MenuItem onClick={handleClose}>\n              <Upload/>\n            </MenuItem> */}\n            {/* <MenuItem onClick={handleClose}>\n              <Folders/>\n            </MenuItem> */}\n            {/* </Tooltip> */}\n          </Menu>\n\n          </div>\n          <div className='lock-wrap'>\n            <MenuHider />\n\n          </div>\n    </div>\n  </Toolbar>\n</AppBar>\n          </div>\n          <Drawer\n            className={classes.drawer}\n            width = \"50%\"\n            variant=\"persistent\"\n            anchor=\"left\"\n            open={open}\n            classes = {{paper:classes.drawerPaper}}\n          >\n          <div className={classes.drawerHeader}>\n          <MenuSwitch title = 'MainMenu' left = {prev_page} right={next_page} submenu = 'true'/>\n                <IconButton onClick={handleDrawerClose} color = \"inherit\">\n                  {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n                </IconButton>\n\n            </div>\n            <Options />\n          </Drawer>\n          <main\n            className={clsx(classes.content, {\n              [classes.contentShift]: open,\n            })}\n          >\n            <div className={classes.drawerHeader} />\n\n          </main>\n          </ThemeProvider>\n        </div>\n    );\n  }else if (setting == 2){\n    return (\n        <div className={classes.root}>\n        <CssBaseline />\n        <ThemeProvider theme = {mytheme}>\n        <div className = {pick}>\n          <AppBar\n            position=\"fixed\"\n            className={clsx(classes.appBar, {\n              [classes.appBarShift]: open,\n            })}\n            color = {choice}\n          >\n          <Toolbar >\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={handleDrawerOpen}\n              edge=\"start\"\n              className={clsx(classes.menuButton, open && classes.hide)}\n            >\n              <MenuIcon />\n            </IconButton>\n            <div class=\"border d-table w-100\">\n  <h2 class=\"d-table-cell tar2\">ScribeAR</h2>\n      {/* <Welcome\n      isAuthenticated={isAuthenticated}\n      user = {user}\n      /> */}\n  <div class=\"d-table-cell tar\">\n      <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" variant=\"contained\" variant=\"text\" color=\"inherit\" onClick={handleClick} startIcon={<ShareIcon/>}>Share</Button>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <Tooltip TransitionComponent={Fade} title=\"Share through emails\" arrow>\n        <MenuItem onClick={handleClose}>\n          <EmailShareButton subject=\"Transcript History\">\n            <Button startIcon={<MailIcon/>}> EMAIL</Button>\n          </EmailShareButton>\n        </MenuItem>\n        </Tooltip>\n        <Tooltip TransitionComponent={Fade} title=\"Download the transcript as a .txt file\" arrow>\n        <MenuItem onClick={handleClose}>\n          <Button variant=\"contained\" variant=\"text\" onClick={new AzureRecognition().downloadTxtFile} startIcon={<SaveIcon fontSize='large'/>}>Download</Button>\n        </MenuItem>\n        </Tooltip>\n        {/* <Tooltip TransitionComponent={Fade} title=\"Upload the transcript to OneDrive\" arrow> */}\n        {/* <MenuItem onClick={handleClose}>\n          <Upload/>\n        </MenuItem> */}\n        {/* <MenuItem onClick={handleClose}>\n          <Folders/>\n        </MenuItem> */}\n        {/* </Tooltip> */}\n      </Menu>\n\n      </div>\n      <div className='lock-wrap'>\n        <MenuHider />\n\n      </div>\n</div>\n</Toolbar>\n          </AppBar>\n        </div>\n\n        <Drawer\n          className={classes.drawer}\n          width = \"50%\"\n          variant=\"persistent\"\n          anchor=\"left\"\n          open={open}\n          classes = {{paper:classes.drawerPaper}}\n        >\n        <div className={classes.drawerHeader}>\n        <MenuSwitch title = 'Source' left = {prev_page} right={next_page} submenu = 'true'/>\n                <IconButton onClick={handleDrawerClose} color = \"inherit\">\n                  {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n                </IconButton>\n          </div>\n          <AzureOption />\n        </Drawer>\n        <main\n          className={clsx(classes.content, {\n            [classes.contentShift]: open,\n          })}\n        >\n          <div className={classes.drawerHeader} />\n\n        </main>\n        </ThemeProvider>\n        </div>\n    )\n  } else{\n    return (\n        <div className={classes.root}>\n        <CssBaseline />\n        <ThemeProvider theme = {mytheme}>\n        <div className = {pick}>\n          <AppBar\n            position=\"fixed\"\n            className={clsx(classes.appBar, {\n              [classes.appBarShift]: open,\n            })}\n            color = {choice}\n          >\n          <Toolbar >\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={handleDrawerOpen}\n              edge=\"start\"\n              className={clsx(classes.menuButton, open && classes.hide)}\n            >\n              <MenuIcon />\n            </IconButton>\n            <div class=\"border d-table w-100\">\n  <h2 class=\"d-table-cell tar2\">Welcome to ScribeAR</h2>\n      {/* <Welcome\n      isAuthenticated={isAuthenticated}\n      user = {user}\n      /> */}\n  <div class=\"d-table-cell tar\">\n      <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" variant=\"contained\" variant=\"text\" color=\"inherit\" onClick={handleClick} startIcon={<ShareIcon/>}>Share</Button>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <Tooltip TransitionComponent={Fade} title=\"Share through emails\" arrow>\n        <MenuItem onClick={handleClose}>\n          <EmailShareButton subject=\"Transcript History\">\n            <Button startIcon={<MailIcon/>}> EMAIL</Button>\n          </EmailShareButton>\n        </MenuItem>\n        </Tooltip>\n        <Tooltip TransitionComponent={Fade} title=\"Download the transcript as a .txt file\" arrow>\n        <MenuItem onClick={handleClose}>\n          <Button variant=\"contained\" variant=\"text\" onClick={new AzureRecognition().downloadTxtFile} startIcon={<SaveIcon fontSize='large'/>}>Download</Button>\n        </MenuItem>\n        </Tooltip>\n        {/* <Tooltip TransitionComponent={Fade} title=\"Upload the transcript to OneDrive\" arrow> */}\n        {/* <MenuItem onClick={handleClose}>\n          <Upload/>\n        </MenuItem> */}\n        {/* <MenuItem onClick={handleClose}>\n          <Folders/>\n        </MenuItem> */}\n        {/* </Tooltip> */}\n      </Menu>\n\n      </div>\n      <div className='lock-wrap'>\n        <MenuHider />\n\n      </div>\n</div>\n</Toolbar>\n          </AppBar>\n        </div>\n\n        <Drawer\n          className={classes.drawer}\n          width = \"50%\"\n          variant=\"persistent\"\n          anchor=\"left\"\n          open={open}\n          classes = {{paper:classes.drawerPaper}}\n        >\n        <div className={classes.drawerHeader}>\n        <MenuSwitch title = 'Audio Visuals' left = {prev_page} right={next_page} submenu = 'true'/>\n                <IconButton onClick={handleDrawerClose} color = \"inherit\">\n                  {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n                </IconButton>\n          </div>\n          <AudioOption />\n        </Drawer>\n        <main\n          className={clsx(classes.content, {\n            [classes.contentShift]: open,\n          })}\n        >\n          <div className={classes.drawerHeader} />\n\n        </main>\n        </ThemeProvider>\n        </div>\n    )\n  }\n}\n}\n","import React from 'react'\r\nimport './index.css'\r\nimport '../MiddleSpace/index.css'\r\nimport PersistentDrawerLeft from '../newDrawer'\r\nimport {useSelector} from 'react-redux'\r\n\r\n// JavaScript functions used: setTimeout, clearTimeout, bind, getElementById,\r\n// addEventListener, removeEventListener\r\n// React functions used: constructor, setState, componentDidMount, render\r\nexport default function TopSpace(props){\r\n\r\n          var h = props.height; // I don't remember why I set the height like this.\r\n          // The Options component takes a function as a prop.\r\n          const meh = (state) => state.meh\r\n          const setting = useSelector(meh)\r\n          var choice = setting ? \"none\" : \"block\"\r\n          return (\r\n               <div className=\"TopSpace\" id=\"outer\" style={{ height: h}}>\r\n                    <div >\r\n                          <div className=\"item-wrapper\" >\r\n                              <PersistentDrawerLeft color = {props.color}/>\r\n                         </div>\r\n\r\n                    </div>\r\n               </div>\r\n          )\r\n}\r\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport { green } from '@material-ui/core/colors';\nimport Options from \"../AzureTopSpace/AzureOptions\"\n\nconst drawerWidth = '22vw';//drawer width\nconst useStyles = makeStyles({\n  list: {\n    width: drawerWidth,\n  },\n  fullList: {\n    width: 'auto',\n  },\n});\n\nexport default function SwipeableTemporaryDrawer() {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    left: false,\n  });\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state, [anchor]: open });\n  };\n\n  const list = (anchor) => (\n    <div\n      className={clsx(classes.list, {\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\n      })}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, true)}\n    >\n      <List>\n        {/* {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))} */}\n        <Options />\n\n      </List>\n      <Divider />\n      <List>\n        {/* {['All mail', 'Trash', 'Spam'].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))} */}\n      </List>\n    </div>\n  );\n  return (\n    <div>\n      {['Try Out Azure'].map((anchor) => (\n        <React.Fragment key={anchor}>\n          <Button onClick={toggleDrawer(anchor, true)} color = \"primary\">{anchor}</Button>\n          <SwipeableDrawer\n            anchor={anchor}\n            open={state[anchor]}\n            onClose={toggleDrawer(anchor, false)}\n            onOpen={toggleDrawer(anchor, true)}\n          >\n            {list(anchor)}\n          </SwipeableDrawer>\n        </React.Fragment>\n      ))}\n    </div>\n  );\n}\n","import React from 'react'\nimport './index.css'\nimport Options from './AzureOptions'\nimport SwipeableTemporaryDrawer from '../../components/AzureDrawer'\n\n\n// JavaScript functions used: setTimeout, clearTimeout, bind, getElementById,\n// addEventListener, removeEventListener\n// React functions used: constructor, setState, componentDidMount, render\nclass AzureTopSpace extends React.Component {\n     // // When options are shown:\n     //      // Clicking in the optionsSpace triggers show() then resetTimeout().\n     //      // Clicking in the hideSpace triggers hide().\n     // // When options are not shown:\n     //      // Clicking anywhere in the outer div triggers show().\n     // // Event listeners enforce these rules in outer and optionsSpace elements.\n     // // hideSpace uses a simple onClick, which only works when the element is shown.\n     //\n     // constructor(props) {\n     //      super(props)\n     //      this.state = {\n     //           shown: true, // Whether the options area is shown. Used in JSX.\n     //           // Set 15 second timeout and when it expires, run this.hide.\n     //           // Immediately store the returned id for later use.\n     //           timeoutId: setTimeout(this.hide.bind(this), 15000)\n     //      }\n     //      // Bind functions so we can use the keyword 'this' inside them.\n     //      this.hide = this.hide.bind(this)\n     //      this.show = this.show.bind(this)\n     //      this.resetTimeout = this.resetTimeout.bind(this)\n     // }\n     //\n     // hide() { // Hide the options area from view.\n     //      this.setState({ shown: false })\n     //      document.getElementById('outer').addEventListener('click', this.show)\n     // }\n     //\n     // show() { // Show the options area. If already shown, just reset timeout.\n     //      this.setState({ shown: true })\n     //      document.getElementById('outer').removeEventListener('click', this.show)\n     //      this.resetTimeout()\n     // }\n     //\n     // resetTimeout() { // Reset the 15 second timer for hiding the options.\n     //      clearTimeout(this.state.timeoutId) // Cancel the timeout set earlier.\n     //      var toId = setTimeout(this.hide, 15000) // Set a new 15 second timeout.\n     //      this.setState({timeoutId: toId}) // Store the id of the new timeout.\n     // }\n     // // The first time the component mounts, add an event listener to the options\n     // // space, so whenever it's clicked, it shows.\n     // componentDidMount() {\n     //      document.getElementById('optionsSpace').addEventListener('click', this.show)\n     // }\n\n     render() {\n          var h = '32vh'; // I don't remember why I set the height like this.\n          // The Options component takes a function as a prop.\n          return (\n               <div className=\"AzureTopSpace\" id=\"outer\" style={{ height: h }}>\n                     <div >\n                    <div className=\"item-wrapper\">\n                        <SwipeableTemporaryDrawer color = \"secondary\"/>\n                    </div>\n                    </div>\n               </div>\n          )\n     }\n}\n\nexport default AzureTopSpace;\n","import React from 'react'\nimport {IconButton} from '@material-ui/core'\nimport { useSelector, useDispatch } from 'react-redux'\n// import ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\n// import ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport ExpandLessSharpIcon from '@material-ui/icons/ExpandLessSharp';\nimport ExpandMoreSharpIcon from '@material-ui/icons/ExpandMoreSharp';\n\nexport default function Extender(props){\n    const dispatch = useDispatch()\n    return (\n          <div style = {{\n              bottom:0,\n          }}>\n                <IconButton color = 'inherit' onClick={() => dispatch(props.increment())}>\n                    <ExpandLessSharpIcon />\n                </IconButton>\n                <IconButton color = 'inherit' onClick={() => dispatch(props.decrement())}>\n                    <ExpandMoreSharpIcon />\n                </IconButton>\n            </div>\n    )\n}","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport './index.css'\nimport AzureRecognition from './AzureRecognition'\nimport Extender from './Extender'\nimport { Button } from \"@material-ui/core\"\nimport ScrollButton from 'react-scroll-button'\nimport store from '../../store'\nimport keys from '../AzureTopSpace/AzureOptions/Key'\nimport { increment_numLines,\ndecrement_numLines, flip_correct_azureKey, flip_check_azureKey } from '../../redux/actions'\n\n\n\nexport default function AzureCaptions(props) {\n     const dispatch = useDispatch()\n     const lineWidth = useSelector((state) => state.lineWidth)\n     const numLines = useSelector((state) => state.numLines)\n     const recording = useSelector((state) => state.recordingAzure)\n     const checkAzureKey = useSelector((state) => state.checkAzureKey)\n     const correctAzureKey = useSelector((state) => state.correctAzureKey)\n     // Sloppy styling. Please change.\n     var paddingString = (11 - lineWidth) * 3 + 'vw'\n     var h = numLines + 'vh'\n     var resH = (43 - numLines) + 'vh'\n     var sz = props.textSize\n     if (props.wantWebspeech == true && store.isSuccessReducer == 'success') {\n       store.desiredAPI = 'webspeech';\n       return (\n         <div>\n            <AzureRecognition switchOffAzure = {true} />\n         </div>\n        )\n     } else {\n       store.desiredAPI = 'azure';\n       return ( <div>\n                      <div style = {{\n                           height : resH,\n                           margin : '0.5vh',\n                      }}>\n                      <Extender\n                                          increment={increment_numLines}\n                                          decrement={decrement_numLines}  />\n                      </div>\n                      <Button className=\"scroll\" position=\"fixed\" variant=\"outlined\" onClick= {new AzureRecognition().scrollBottom} color=\"secondary\">Scroll to Bottom</Button>\n                      <div className=\"captionsSpace\" id=\"captionsSpace\"\n                      style={{\n                      fontSize: sz,\n                      height: h,\n                      width: \"100vw\",\n                      overflow: \"auto\",\n                      paddingLeft: paddingString,\n                      paddingRight: paddingString }}>\n\n                           <AzureRecognition isRecording = {recording} isCrorrect = {correctAzureKey} checkKey = {checkAzureKey}\n                            key = {store.azureKeyReducer} region = {store.azureRegionOptionsReducer} switchOffAzure = {false} />\n                      </div>\n                </div> )\n        }\n}\n","import React, {useState} from 'react'\r\nimport { useSelector , useDispatch} from 'react-redux'\r\nimport './index.css'\r\nimport Recognition from './Recognition'\r\n\r\nimport { Button, IconButton } from \"@material-ui/core\"\r\nimport store from '../../store'\r\nimport mytheme from '../newDrawer/theme'\r\nimport Extender from './Extender'\r\nimport DoubleArrowIcon from '@material-ui/icons/DoubleArrow';\r\nimport {ThemeProvider} from \"@material-ui/core/styles\";\r\nimport {\r\n     increment_numLines,\r\n     decrement_numLines,\r\n} from '../../redux/actions'\r\n\r\n\r\nexport default function Captions(props) {\r\n     const lineWidth = useSelector((state) => state.lineWidth)\r\n     const numLines = useSelector((state) => state.numLines)\r\n     const recording = useSelector((state) => state.recording)\r\n     const [maxHeight, setMaxHeight] = useState(64)\r\n     const [visible, setVisible] = useState(false)\r\n     const correctAzureKey = useSelector((state) => state.correctAzureKey)\r\n     var isCorrectKey = correctAzureKey ? true : false\r\n     // Sloppy styling. Please change.\r\n\r\n     var paddingString = (11 - lineWidth) * 3 + 'vw'\r\n     var h = numLines + 'vh'\r\n     var resH = (43 - numLines) + 'vh'\r\n     var sz = props.textSize\r\n     const DisTop = () => {\r\n       if (document.getElementById(\"captionsSpace\").scrollTop >= maxHeight) {\r\n          setMaxHeight(document.getElementById(\"captionsSpace\").scrollTop);\r\n       }\r\n       if (maxHeight - document.getElementById(\"captionsSpace\").scrollTop > 10) {\r\n         setVisible(true);\r\n       } else {\r\n         setVisible(false);\r\n       }\r\n       // console.log(maxHeight);\r\n       // console.log(document.getElementById(\"captionsSpace\").scrollTop);\r\n       // console.log(visible);\r\n     };\r\n     if (props.azureCaptionSuccess == false) {\r\n      return (\r\n        <div>\r\n           <Recognition isRecording={false} />\r\n        </div>\r\n       )\r\n    } else {\r\n      if (visible) {\r\n        return (\r\n          <ThemeProvider theme = {mytheme}>\r\n          <div>\r\n            <IconButton className=\"scroll\"  color='inherit' variant=\"outlined\" onClick= {new Recognition().scrollBottom}>\r\n                 <DoubleArrowIcon fontSize=\"large\"/>\r\n          </IconButton>\r\n            <div onScroll={DisTop} className=\"captionsSpace\" id=\"captionsSpace\"\r\n             style={{\r\n               fontSize: sz,\r\n               height: h,\r\n               width: \"100vw\",\r\n               overflow: \"auto\",\r\n               paddingLeft: paddingString,\r\n               paddingRight: paddingString }}>\r\n                  <Recognition isRecording={recording} />\r\n                </div>\r\n           </div>\r\n           </ThemeProvider>\r\n         )\r\n      } else {\r\n        return (\r\n          <ThemeProvider theme = {mytheme}>\r\n          <div>\r\n          <IconButton className=\"scroll-hidden\" color='inherit'  onClick= {new Recognition().scrollBottom}>\r\n             <DoubleArrowIcon fontSize=\"large\"/>\r\n          </IconButton>\r\n            <div onScroll={DisTop} className=\"captionsSpace\" id=\"captionsSpace\"\r\n             style={{\r\n               fontSize: sz,\r\n               height: h,\r\n               width: \"100vw\",\r\n               overflow: \"auto\",\r\n               paddingLeft: paddingString,\r\n               paddingRight: paddingString }}>\r\n                  <Recognition isRecording={recording} />\r\n                </div>\r\n           </div>\r\n           </ThemeProvider>\r\n         )\r\n      }\r\n    }\r\n}\r\n","import React, {Component} from 'react';\nimport {connect} from \"react-redux\";\nimport {\n    decrease_sensitivity,\n    increase_sensitivity,\n} from \"../../../redux/actions\";\n\nclass AudioVisualiser extends Component {\n\n    constructor(props) {\n        super(props);\n        this.canvas = React.createRef();\n    }\n\n    draw() {\n        // console.log(\"drawing\")\n        const {audioData} = this.props;\n        const canvas = this.canvas.current;\n        const height = canvas.height;\n        const width = canvas.width;\n        const context = canvas.getContext('2d');\n        context.clearRect(0, 0, width, height);\n        if (this.props.mic == 1) { // Line visualization\n            this.drawLine(audioData, context, height, width, this.props.sens);\n        } else if (this.props.mic == 2) {// Spectrum visualization\n            this.drawSpectrum(audioData, context, height, width, this.props.sens);\n        } else if (this.props.mic == 3) {// Circular visualization\n            this.drawCircular(audioData, context, height, width, this.props.sens);\n        }\n\n\n    }\n\n    drawLine(audioData, context, height, width,sens) {\n        let x = 0;\n        // console.log(\"drawing line\")\n\n        const sliceWidth = (width * 1.0) / audioData.length;\n        context.lineWidth = 2;\n        context.beginPath();\n        context.moveTo(0, height / 2);\n        for (const item of audioData) {\n            const y = (item / 255.0) * height * (1/sens); // positive value\n            context.lineTo(x, y);\n            x += sliceWidth;\n        }\n        context.lineTo(x, height / 2);\n        context.strokeStyle = this.props.iscolor ? '#000000' : '#F8F8FF';\n        context.stroke();\n    }\n\n    drawSpectrum(audioData, context, height, width, sens) {\n        let x = 0;\n        const barWidth = (width / audioData.length) * 2.5;\n        let barHeight;\n        for (const item of audioData) {\n            barHeight = item / (2 / sens); // 2 takes any positive value\n            context.fillStyle = this.props.iscolor ? '#000000' : '#F8F8FF';\n            context.fillRect(x, height / 2 - barHeight / 2, barWidth, barHeight);\n            x += barWidth + 1;\n        }\n\n    }\n\n    drawCircular(audioData, context, height, width, sens) {\n        const RADIUS = 80;\n        const POINTS = 360;\n        let sum = audioData.reduce((previous, current) => current += previous);\n        let avg = sum / audioData.length;\n\n        for (let i = 0; i < POINTS; i++) {\n            let rel = ~~(i * (POINTS / audioData.length));\n            let x = width / 2 + RADIUS * Math.cos((i * 2 * Math.PI) / POINTS);\n            let y = height / 2 + RADIUS * -Math.sin((i * 2 * Math.PI) / POINTS);\n            let x_2 = x + (audioData[rel] / (8 / sens)) * Math.cos((i * 2 * Math.PI) / POINTS); // 8 takes any positive value\n            let y_2 = y + (audioData[rel] / (8 / sens)) * -Math.sin((i * 2 * Math.PI) / POINTS);// 8 takes any positive value\n            let x_3 = width / 2 + (sens) * avg * Math.cos((i * 2 * Math.PI) / POINTS);// 1 takes any positive value\n            let y_3 = height / 2 + (sens) * avg * -Math.sin((i * 2 * Math.PI) / POINTS); // 1 takes any positive value\n            let x_4 = x_3 - 0.5 * avg * Math.cos((i * 2 * Math.PI) / POINTS);\n            let y_4 = y_3 - 0.5 * avg * -Math.sin((i * 2 * Math.PI) / POINTS);\n            let x_5 = x - 0.3 * Math.cos((i * 2 * Math.PI) / POINTS);\n            let y_5 = y - 0.3 * -Math.sin((i * 2 * Math.PI) / POINTS);\n            //draw the circular spectrum\n            context.beginPath();\n            context.moveTo(x, y);\n            context.lineTo(x_2, y_2);\n            context.strokeStyle = this.props.iscolor ? '#000000' : '#F8F8FF';\n            context.stroke();\n            //draw the margin circle\n            context.beginPath();\n            context.moveTo(x, y);\n            context.lineTo(x_5, y_5);\n            context.stroke();\n            //draw the inner circle\n            context.beginPath();\n            context.moveTo(x_4, y_4);\n            context.lineTo(x_3, y_3);\n            if (y_4 - y_3 > 10) {\n                context.strokeStyle = '#ff0000';\n            }\n            context.stroke();\n        }\n\n    }\n\n    componentDidUpdate() {\n        console.log(\"update\")\n        this.draw();\n    }\n\n    render() {\n        let width = \"1700vw\"\n        if (this.props.mic == 1) {\n            width = \"1800vw\"\n        } else if (this.props.mic == 2) {\n            width = \"1600vw\"\n        } else if (this.props.mic == 3) {\n            width = \"400vw\"\n\n        }\n\n        return <canvas width={width} height=\"300vh\" ref={this.canvas}/>;\n    }\n\n}\n// const mapStateToProps = state => ({\n//   sens: state.sens\n// });\n// const mapDispatchToProps = () => {\n//   return {\n//     decrease_sensitivity, increase_sensitivity\n//\n//   };\n// };\n//\n// export default connect(\n//   mapStateToProps,\n//   mapDispatchToProps()\n// )(AudioVisualiser);\n\nexport default AudioVisualiser;\n","import React, {Component} from 'react';\nimport AudioVisualiser from './AudioVisualiser'\nimport {connect} from \"react-redux\";\n\n\n\n\nclass AudioAnalyser extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            audioData: new Uint8Array(0)\n        };\n        this.tick = this.tick.bind(this);\n    }\n\n    componentDidMount() {\n\n        this.audioContext = new (window.AudioContext ||\n            window.webkitAudioContext)();\n        this.analyser = this.audioContext.createAnalyser();\n        this.dataArray = new Uint8Array(this.analyser.frequencyBinCount);\n        this.source = this.audioContext.createMediaStreamSource(this.props.audio);\n        this.source.connect(this.analyser);\n        this.rafId = requestAnimationFrame(this.tick);\n    }\n\n    tick() {\n        if (this.props.mic == 1) {\n            this.analyser.getByteTimeDomainData(this.dataArray);\n        } else if (this.props.mic == 2) {\n            this.analyser.getByteFrequencyData(this.dataArray);\n        } else if (this.props.mic == 3) {\n            this.analyser.getByteFrequencyData(this.dataArray);\n        }\n        this.setState({audioData: this.dataArray});\n        this.rafId = requestAnimationFrame(this.tick);\n    }\n\n    componentWillUnmount() {\n\n        cancelAnimationFrame(this.rafId);\n        this.analyser.disconnect();\n        this.source.disconnect();\n    }\n\n    render() {\n        return <AudioVisualiser audioData={this.state.audioData} iscolor={this.props.iscolor} mic={this.props.mic} sens={this.props.sens}/>;\n    }\n\n\n}\nconst mapStateToProps = state => ({\n  sens: state.sens\n});\n\n\nexport default connect(\n  mapStateToProps,\n\n)(AudioAnalyser);\n// export default AudioAnalyser;\n","import React from 'react';\nimport AudioAnalyser from './AudioAnalyser';\n\n\nclass Index extends React.PureComponent {\n    constructor() {\n        super()\n        this.state = {\n            audio: null\n        };\n\n\n        this.stopMicrophone = this.stopMicrophone.bind(this);\n        this.getMicrophone = this.getMicrophone.bind(this);\n    }\n\n    componentDidMount() {\n        this.getMicrophone()\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.ismic === this.props.ismic)\n            return\n        if (this.props.ismic > 0 && this.props.ismic < 4) {\n            this.getMicrophone()\n        } else this.stopMicrophone()\n    }\n\n    async getMicrophone() {\n        const audio = await navigator.mediaDevices.getUserMedia({\n            audio: true,\n            video: false\n        });\n        this.setState({audio});\n    }\n\n    stopMicrophone() {\n        this.state.audio.getTracks().forEach(track => track.stop());\n        this.setState({audio: null});\n    }\n\n\n    render() {\n        return (\n\n            <div className=\"controls\">\n                {this.state.audio ?\n                    <AudioAnalyser audio={this.state.audio} iscolor={this.props.iscolor} mic={this.props.ismic}/> : ''}\n            </div>\n\n        );\n    }\n}\n\nexport default Index;\n\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class Draggable extends React.Component{\n\n    drag = (e) => {\n        e.dataTransfer.setData('transfer',e.target.id);\n    }\n\n    noAllowDrop = (e) => {\n        e.stopPropagation();\n    }\n\n    render(){\n        return (\n            <div id= {this.props.id} draggable = \"true\" onDragStart={this.drag} \n            onDragOver= {this.noAllowDrop} style = {this.props.style}>\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nDraggable.propTypes = {\n    id : PropTypes.string,\n    style: PropTypes.object,\n    children: PropTypes.node,\n}","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class Droppable extends React.Component{\n    drop = (e) =>{\n        e.preventDefault();\n        const data = e.dataTransfer.getData('transfer');\n        e.target.appendChild(document.getElementById(data));\n    }\n\n    allowDrop = (e) =>{\n        e.preventDefault();\n    }\n\n    render(){\n        return (\n            <div id = {this.props.id} onDrop = {this.drop} onDragOver = {this.allowDrop} style = {this.props.style}>\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nDroppable.propTypes = {\n    id : PropTypes.string,\n    style: PropTypes.object,\n    children: PropTypes.node,\n}","import React, {Component} from 'react';\nimport {connect} from \"react-redux\";\n\n\nclass StereoVisualiser extends Component {\n\n    constructor(props) {\n        super(props);\n        this.canvas = React.createRef();\n\n    }\n\n\n    draw() {\n        const canvas = this.canvas.current;\n        const audioDataL = this.props.audioDataL;\n        const audioDataR = this.props.audioDataR;\n        const height = canvas.height;\n        const width = canvas.width;\n        const context = canvas.getContext('2d');\n        context.clearRect(0, 0, width, height);\n        if (this.props.mic == 4) { // circular Visualization\n            this.drawCircular(audioDataL, context, height, width, 1, this.props.sens);\n            this.drawCircular(audioDataR, context, height, width, -1, this.props.sens);\n        } else if (this.props.mic == 5) {// Rectangular\n            this.drawRectangle(audioDataL, audioDataR, context, height, width, this.props.sens);\n        } else if (this.props.mic == 6) {// Double Spectrum\n            this.drawDoubleSpectrum(audioDataL, audioDataR, context, height, width, this.props.sens);\n        }\n\n\n    }\n\n    drawDoubleSpectrum(audioDataL, audioDataR, context, height, width, sens) {\n        const RADIUS = 200;\n        const POINTS = 360;\n\n        for (let i = POINTS / 8; i < POINTS + POINTS / 8; i++) {\n            //left spectrum\n            let rel = ~~(i * (POINTS / audioDataL.length));\n            let x = width / 8 + RADIUS * -Math.cos((i * 0.5 * Math.PI) / POINTS);\n            let y = height / 2 + RADIUS * -Math.sin((i * 0.5 * Math.PI) / POINTS);\n            // console.log(\"sens at this point is \"+ sens);\n            let x_2 = x + (audioDataL[rel] / (4/sens) ) * -Math.cos((i * 0.5 * Math.PI) / POINTS); // 4 any positive value\n            let y_2 = y + (audioDataL[rel] / (4/sens) ) * -Math.sin((i * 0.5 * Math.PI) / POINTS); // 4 any positive value\n            let x_5 = x - 0.3 * Math.cos((i * 0.5 * Math.PI) / POINTS);\n            let y_5 = y - 0.3 * Math.sin((i * 0.5 * Math.PI) / POINTS);\n            //draw the circular spectrum\n            context.beginPath();\n            context.moveTo(x, y);\n            context.lineTo(x_2, y_2);\n            context.strokeStyle = this.props.iscolor ? '#000000' : '#F8F8FF';\n            context.stroke();\n            //draw the margin circle\n            context.beginPath();\n            context.moveTo(x, y);\n            context.lineTo(x_5, y_5);\n            context.stroke();\n\n            //right spectrum\n            rel = ~~(i * (POINTS / audioDataR.length));\n            x = 3 * width / 4 + RADIUS * Math.cos((i * 0.5 * Math.PI) / POINTS);\n            y = height / 2 + RADIUS * -Math.sin((i * 0.5 * Math.PI) / POINTS);\n            x_2 = x + (audioDataR[rel] / (4/sens) ) * Math.cos((i * 0.5 * Math.PI) / POINTS); // 4 any positive value\n            y_2 = y + (audioDataR[rel] / (4/sens) ) * -Math.sin((i * 0.5 * Math.PI) / POINTS); // 4 any positive value\n            x_5 = x - 0.3 * Math.cos((i * 0.5 * Math.PI) / POINTS);\n            y_5 = y - 0.3 * Math.sin((i * 0.5 * Math.PI) / POINTS);\n            //draw the circular spectrum\n            context.beginPath();\n            context.moveTo(x, y);\n            context.lineTo(x_2, y_2);\n            context.strokeStyle = this.props.iscolor ? '#000000' : '#F8F8FF';\n            context.stroke();\n            //draw the margin circle\n            context.beginPath();\n            context.moveTo(x, y);\n            context.lineTo(x_5, y_5);\n            context.stroke();\n        }\n\n\n    }\n\n\n    drawRectangle(audioDataL, audioDataR, context, height, width, sens) {\n        let sumL = audioDataL.reduce((previous, current) => current += previous);\n        let avgL = sumL / audioDataL.length;\n        let sumR = audioDataR.reduce((previous, current) => current += previous);\n        let avgR = sumR / audioDataR.length;\n\n        //background\n        context.fillStyle = '#B6E1A5';\n        context.fillRect(width / 2, height / 4, 80, 50)\n        context.fillStyle = '#E1AAA5';\n        context.fillRect(width / 2, height / 4, -80, 50)\n\n        let RightVal = avgR * sens; // any positive value\n        let LeftVal = avgL * sens; // any positive value\n        //right\n        context.fillStyle = '#5BDA2B';\n        if (RightVal > 80) {\n            context.fillRect(width / 2, height / 4, 80, 50)\n        } else {\n            context.fillRect(width / 2, height / 4, RightVal, 50)\n        }\n\n        //left\n        context.fillStyle = '#ff0000';\n        if (LeftVal > 80) {\n            context.fillRect(width / 2, height / 4, -80, 50)\n        } else {\n            context.fillRect(width / 2, height / 4, -LeftVal, 50)\n        }\n\n        //indicator line\n        context.lineWidth = 2;\n        context.beginPath();\n        context.moveTo(width / 2, height / 4);\n        context.lineTo(width / 2, height / 4 + 50);\n        context.strokeStyle = this.props.iscolor ? '#000000' : '#F8F8FF';\n        context.stroke();\n    }\n\n\n    drawCircular(audioData, context, height, width, cir, sens) {\n        const RADIUS = 80;\n        const POINTS = 360;\n        let sum = audioData.reduce((previous, current) => current += previous);\n        let avg = sum / audioData.length;\n\n        for (let i = POINTS / 2; i < POINTS + POINTS / 2; i++) {\n            let rel = ~~(i * (POINTS / audioData.length));\n            let x = width / 2 + cir * RADIUS * Math.cos((i * 1 * Math.PI) / POINTS);\n            let y = height / 2 + RADIUS * Math.sin((i * 1 * Math.PI) / POINTS);\n            let x_2 = x + cir * (audioData[rel] / (4 /sens )) * Math.cos((i * 1 * Math.PI) / POINTS); // 4 takes any positive value\n            let y_2 = y + (audioData[rel] / (4 /sens )) * Math.sin((i * 1 * Math.PI) / POINTS); // 4 takes any positive value\n            let x_3 = width / 2 + (sens) * avg * cir * Math.cos((i * 1 * Math.PI) / POINTS); // 1 takes any positive value\n            let y_3 = height / 2 + (sens) * avg * -cir * Math.sin((i * 1 * Math.PI) / POINTS); // 1 takes any positive value\n            let x_4 = x_3 - 0.5 * avg * cir * Math.cos((i * 1 * Math.PI) / POINTS);\n            let y_4 = y_3 - 0.5 * avg * -cir * Math.sin((i * 1 * Math.PI) / POINTS);\n            let x_5 = x - 0.3 * cir * Math.cos((i * 1 * Math.PI) / POINTS);\n            let y_5 = y - 0.3 * -cir * Math.sin((i * 1 * Math.PI) / POINTS);\n            //draw the circular spectrum\n            context.beginPath();\n            context.moveTo(x, y);\n            context.lineTo(x_2, y_2);\n            if (cir == 1) {\n                context.strokeStyle = '#E1AAA5';\n            } else {\n                context.strokeStyle = '#B6E1A5';\n            }\n            context.stroke();\n            //draw the margin circle\n            context.beginPath();\n            context.moveTo(x, y);\n            context.lineTo(x_5, y_5);\n            context.stroke();\n            //draw the inner circle\n            context.beginPath();\n            context.moveTo(x_4, y_4);\n            context.lineTo(x_3, y_3);\n            if (y_4 - y_3 > 10) {\n                if (cir == 1) {\n                    context.strokeStyle = '#ff0000';\n                } else {\n                    context.strokeStyle = '#5BDA2B';\n                }\n\n            }\n            context.stroke();\n        }\n\n    }\n\n    componentDidUpdate() {\n        this.draw();\n    }\n\n    render() {\n        let width = \"1700vw\"\n        if (this.props.mic == 4) {\n            width = \"400vw\"\n        } else if (this.props.mic == 5) {\n            width = \"400vw\"\n        } else if (this.props.mic == 6) {\n            width = \"1800vw\"\n        }\n\n        return <canvas width={width} height=\"300vh\" ref={this.canvas}/>;\n    }\n\n}\n\n// const mapStateToProps = state => ({\n//   sens: state.sens\n// });\n//\n// export default connect (\n//       mapStateToProps,\n// )\n// (StereoVisualiser);\n\nexport default  StereoVisualiser;\n\n","import React, {Component} from 'react';\nimport StereoVisualiser from './StereoVisualiser'\nimport {connect} from \"react-redux\";\n\n\nclass StereoAnalyser extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            audioDataL: new Uint8Array(0),\n            audioDataR: new Uint8Array(0)\n        };\n        this.tick = this.tick.bind(this);\n    }\n\n    componentDidMount() {\n\n        this.audioContext = new (window.AudioContext ||\n            window.webkitAudioContext)();\n\n\n        // this.source = this.audioContext.createMediaStreamSource(this.props.audio);\n        this.source = this.audioContext.createMediaElementSource(this.props.audio);\n\n        this.splitter = this.audioContext.createChannelSplitter(2);\n        this.analyserL = this.audioContext.createAnalyser();\n        this.analyserR = this.audioContext.createAnalyser();\n\n        this.source.connect(this.splitter);\n        this.splitter.connect(this.analyserL, 0, 0);\n        this.splitter.connect(this.analyserR, 1, 0);\n        this.dataArrayL = new Uint8Array(this.analyserL.frequencyBinCount);\n        this.dataArrayR = new Uint8Array(this.analyserR.frequencyBinCount);\n        //this.source.connect(this.analyserL);\n        //this.source.connect(this.analyserR);\n\n        //     this.source.connect(this.audioContext.destination);\n        this.rafId = requestAnimationFrame(this.tick);\n    }\n\n    tick() {\n        if (this.props.mic == 4 || this.props.mic == 5 || this.props.mic == 6) {\n            this.analyserL.getByteFrequencyData(this.dataArrayL);\n            this.analyserR.getByteFrequencyData(this.dataArrayR);\n        }\n\n\n        this.setState({audioDataL: this.dataArrayL, audioDataR: this.dataArrayR});\n        this.rafId = requestAnimationFrame(this.tick);\n    }\n\n    componentWillUnmount() {\n\n        cancelAnimationFrame(this.rafId);\n        this.analyserL.disconnect();\n        this.analyserR.disconnect();\n        this.source.disconnect();\n    }\n\n    render() {\n\n        return (\n            <div>\n\n                <StereoVisualiser audioDataL={this.state.audioDataL} audioDataR={this.state.audioDataR}\n                                  iscolor={this.props.iscolor} mic={this.props.mic} sens={this.props.sens}/>\n            </div>);\n    }\n\n\n}\nconst mapStateToProps = state => ({\n  sens: state.sens\n});\n\n\nexport default connect(\n  mapStateToProps,\n\n)(StereoAnalyser);\n// export default StereoAnalyser;","import React from 'react';\nimport StereoAnalyser from './StereoAnalyser';\n\n\nclass Stereo extends React.PureComponent {\n    constructor() {\n        super()\n        this.state = {\n            audio: null\n        };\n\n        //this.toggleMicrophone = this.toggleMicrophone.bind(this);\n        this.stopMicrophone = this.stopMicrophone.bind(this);\n        this.getMicrophone = this.getMicrophone.bind(this);\n    }\n\n    componentDidMount() {\n        this.getMicrophone()\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.ismic === this.props.ismic)\n            return\n        if (this.props.ismic > 3) {\n            this.getMicrophone()\n        } else this.stopMicrophone()\n    }\n\n    async getMicrophone() {\n        const audio = document.querySelector('audio');\n        this.setState({audio});\n\n        // const audio = await navigator.mediaDevices.getUserMedia({\n        //   audio: { mandatory: { echoCancellation: false}},\n        //   video: false\n        // });\n        // this.setState({ audio });\n    }\n\n    stopMicrophone() {\n        this.state.audio.getTracks().forEach(track => track.stop());\n               this.audio.autoplay = true;\n        this.setState({audio: null});\n    }\n\n\n    render() {\n        return (\n\n            <div className=\"controls\">\n                <audio src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/858/outfoxing.mp3\"\n                       crossOrigin=\"anonymous\" controls={true}>\n                </audio>\n                {this.state.audio ?\n                    <StereoAnalyser audio={this.state.audio} iscolor={this.props.iscolor} mic={this.props.ismic}/> : ''}\n                {/*  {<StereoAnalyser  iscolor = {this.props.iscolor}  mic = {this.props.ismic}/>}*/}\n            </div>\n\n        );\n    }\n}\n\nexport default Stereo;","import React from 'react'\nimport Index from './Loudness/index'\nimport './index.css'\nimport { useSelector } from 'react-redux'\nimport styled from 'styled-components'\nimport Draggable from '../DnD/Draggable'\nimport Droppable from '../DnD/Droppable'\nimport './index.css'\n\nimport Stereo from \"./Stereo/index\"\n\n\nconst Wrapper = styled.div`\n    width:100%;\n    padding:2px;\n    display:flex;\n    justify-content: center;\n`;\n\n\nconst droppableStyle = {\n    backgroundColor: '#555',\n    width:'50vw',\n    height: '32vh',\n    margin: '0px'\n};\n \nexport default function MiddleSpace(props) {\n  var h = props.height\n  const mic = useSelector((state) => state.mic)\n  // const stereoMic = useSelector((state) => state.steromic)\n  const color = useSelector((state) => state.invertColors)\n  // const isstereo = useSelector((state) => state.stereo)\n\n    if (mic < 4){//mono\n        if (props.color == 'black'){\n            return ( <div className=\"MiddleSpace\" style = {{height:h}}>\n            <Wrapper>\n                  <Droppable className = \"d1\" id = \"dr1\" style = {{\n                    width:'25vw',\n                    height: '34vh',\n                    margin: '1px'}}>\n                    <div className = \"show1\">\n                      <Draggable id = \"item1\" style = {{margin:'0.5px'}}>\n                          {/* change Index to Stereo for test purpose*/}\n                          <Index ismic = {mic} iscolor = {color} style={{\n                          position:\"relative\",\n                          }}/>\n\n                      </Draggable>\n                      </div>\n                  </Droppable>\n                  <Droppable className = \"d1\" id = \"dr2\" style = {{\n                    width:'25vw',\n                    height: '34vh',\n                    margin: '1px'}}>\n                      <div className = \"show1\"></div>\n                  </Droppable>\n                  <Droppable className = \"d1\" id = \"dr2\" style = {{\n                    width:'25vw',\n                    height: '34vh',\n                    margin: '1px'}}>\n                      <div className = \"show1\"></div>\n                  </Droppable>\n                  <Droppable className = \"d1\" id = \"dr2\" style = {{\n                    width:'25vw',\n                    height: '34vh',\n                    margin: '1px'}}>\n                      <div className = \"show1\"></div>\n                  </Droppable>\n\n              </Wrapper>\n          </div> )\n  }else{\n    return ( <div className=\"MiddleSpace\" style = {{height:h}}>\n            <Wrapper>\n                  <Droppable className = \"d2\" id = \"dr1\" style = {{\n                    width:'25vw',\n                    height: '34vh',\n                    margin: '1px'}}>\n                    <div className = \"show1\">\n                      {/* change Index to Stereo for test purpose*/}\n                      <Draggable id = \"item1\" style = {{margin:'0.5px'}}><Index ismic = {mic} iscolor = {color} style={{\n                        position:\"relative\",\n                      }}/>\n                    </Draggable>\n                    </div>\n                  </Droppable>\n                  <Droppable className = \"d2\" id = \"dr2\" style = {{\n                    width:'25vw',\n                    height: '34vh',\n                    margin: '1px'}}>\n                      <div className = \"show1\"></div>\n                  </Droppable>\n                  <Droppable className = \"d2\" id = \"dr2\" style = {{\n                    width:'25vw',\n                    height: '34vh',\n                    margin: '1px'}}>\n                      <div className = \"show1\"></div>\n                  </Droppable>\n                  <Droppable className = \"d2\" id = \"dr2\" style = {{\n                    width:'25vw',\n                    height: '34vh',\n                    margin: '1px'}}>\n                      <div className = \"show1\"></div>\n                  </Droppable>\n\n              </Wrapper>\n          </div> )\n  }\n    }else{\n        if (props.color == 'black'){\n      return ( <div className=\"MiddleSpace\" style = {{height:h}}>\n            <Wrapper>\n                  <Droppable className = \"d1\" id = \"dr1\" style = {{\n                    width:'25vw',\n                    height: '34vh',\n                    margin: '1px'}}>\n                    <div className = \"show1\">\n                      <Draggable id = \"item1\" style = {{margin:'0.5px'}}>\n                          {/* change Index to Stereo for test purpose*/}\n                          < Stereo ismic = {mic} iscolor = {color} style={{\n                          position:\"relative\",\n                          }}/>\n\n                      </Draggable>\n                      </div>\n                  </Droppable>\n                  <Droppable className = \"d1\" id = \"dr2\" style = {{\n                    width:'25vw',\n                    height: '34vh',\n                    margin: '1px'}}>\n                      <div className = \"show1\"></div>\n                  </Droppable>\n                  <Droppable className = \"d1\" id = \"dr2\" style = {{\n                    width:'25vw',\n                    height: '34vh',\n                    margin: '1px'}}>\n                      <div className = \"show1\"></div>\n                  </Droppable>\n                  <Droppable className = \"d1\" id = \"dr2\" style = {{\n                    width:'25vw',\n                    height: '34vh',\n                    margin: '1px'}}>\n                      <div className = \"show1\"></div>\n                  </Droppable>\n\n              </Wrapper>\n          </div> )\n  }else{\n    return ( <div className=\"MiddleSpace\" style = {{height:h}}>\n            <Wrapper>\n                  <Droppable className = \"d2\" id = \"dr1\" style = {{\n                    width:'25vw',\n                    height: '34vh',\n                    margin: '1px'}}>\n                    <div className = \"show1\">\n                      {/* change Index to Stereo for test purpose*/}\n                      <Draggable id = \"item1\" style = {{margin:'0.5px'}}><Stereo ismic = {mic} iscolor = {color} style={{\n                        position:\"relative\",\n                      }}/>\n                    </Draggable>\n                    </div>\n                  </Droppable>\n                  <Droppable className = \"d2\" id = \"dr2\" style = {{\n                    width:'25vw',\n                    height: '34vh',\n                    margin: '1px'}}>\n                      <div className = \"show1\"></div>\n                  </Droppable>\n                  <Droppable className = \"d2\" id = \"dr2\" style = {{\n                    width:'25vw',\n                    height: '34vh',\n                    margin: '1px'}}>\n                      <div className = \"show1\"></div>\n                  </Droppable>\n                  <Droppable className = \"d2\" id = \"dr2\" style = {{\n                    width:'25vw',\n                    height: '34vh',\n                    margin: '1px'}}>\n                      <div className = \"show1\"></div>\n                  </Droppable>\n\n              </Wrapper>\n          </div> )\n  }\n\n    }\n\n\n}\n","import React from 'react'\nimport './index.css'\nimport MenuHider from './MenuHider'\nimport {useSelector} from 'react-redux'\n\n\n\nexport default function PlaceHolder(props){\n        var sz = props.textSize;\n        const meh = (state) => state.meh\n        const setting = useSelector(meh)\n        // var h = setting ? '23vh' : '14vh';\n        var h = props.height\n        return <div className = \"PlaceHolder\" style = {\n            {\n                // fontSize:sz,\n                height:h,\n            }\n        }>\n      \n        </div>\n}","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport TopSpace from './components/TopSpace'\nimport AzureTopSpace from './components/AzureTopSpace'\nimport AzureCaptions from './components/AzureCaptions'\nimport Captions from './components/Captions'\nimport MiddleSpace from './components/MiddleSpace'\nimport PlaceHolder from \"./components/PlaceHolder\"\nimport { flip_recording, flip_switch_to_azure,\n         flip_switchMenus, flip_entered_key,\n         flip_correct_azureKey, flip_on_webspeech,\n         flip_check_azureKey,\n         flip_entered_region } from './redux/actions'\nimport store from './store'\nimport './App.css'\nimport swal from 'sweetalert';\nimport { resetWarningCache } from 'prop-types';\n\n\nexport default function App() {\n     const dispatch = useDispatch()\n     const onWebspeech = useSelector((state) => state.onWebspeech)\n  const enteredKey = useSelector((state) => state.enteredKey)\n  const enteredRegion = useSelector((state) => state.enteredRegion)\n  const correctAzureKey = useSelector((state) => state.correctAzureKey)\n  const checkAzureKey = useSelector((state) => state.checkAzureKey)\n  // Get global state from Redux. See the React Redux tutorial.\n  const textSize = useSelector((state) => state.textSize)\n  const recording = useSelector((state) => state.recording)\n  const numLines = useSelector((state) => state.numLines)\n  const invertColors = useSelector((state) => state.invertColors)\n  const switchMenus = useSelector((state)=> state.switchMenus)\n  const switchToAzure = useSelector((state) => state.switchToAzure)\n  const bot_mode = useSelector((state)=>state.botsize)\n  // Convert variables to CSS-friendly strings.\n  var sizeString = textSize + 'vh'\n  // Size of bottom space (text area) relative to text size and number of lines.\n  var botHeight = 50 + 'vh'\n  var topHeight = 14 + 'vh'\n  var placeHeight = 2 + 'vh'\n  var midHeight = 40 + 'vh'\n  if (bot_mode === 0){\n    botHeight = 84 + 'vh'\n    midHeight = 0 + 'vh'\n  }else if (bot_mode === 1){\n    botHeight = 50 + 'vh'\n    midHeight = 34 + 'vh'\n  }else if (bot_mode === 2){\n    botHeight = 16 + 'vh'\n    midHeight = 68 + 'vh'\n  }\n    //-----------------------\n    //checks how often user is still on browser\n    //currently set to checking every 1 hour(s)\n    var timerCheck = 600000;\n     //----------------------\n     // var topHeight = 9 + 'vh'\n     // var placeHeight = 5 + 'vh'\n     // var midHeight = 34 + 'vh'\n     //-----------------------\n     // topHeight + botHeight should always = 100vh because we don't want the full\n     // page to scroll (we only want the individual areas to scroll).\n     //------------------------\n     //checkAzureKey is changed changed HERE in normal return\n     //isCorrectKey is done in AzureCaptions\n     //azureKeyEntered is done in enter button\n\n     var isRecording = recording ? true : false\n     var switchmenus = switchMenus ? false : true\n     var isEnteredKey = enteredKey ? true : false\n     var isEnteredRegion = enteredRegion ? true : false\n     var isCorrectKey = correctAzureKey ? true : false\n     var isChecking = checkAzureKey ? true : false\n     var wantsWebspeech = onWebspeech ? true : false\n     var bgColor = invertColors ? 'white': 'black'\n     var color = invertColors ? 'black' : 'white'\n     if (store.azureKeyReducer == 'incorrect' && checkAzureKey == true) {\n       store.azureKeyReducer = 'empty'\n       dispatch(flip_entered_key())\n       dispatch(flip_entered_region())\n       dispatch(flip_check_azureKey())\n     }\n     if (store.isSuccessReducer == 'success' && isCorrectKey == false) {\n       dispatch(flip_correct_azureKey())\n     }\n     if (checkAzureKey == true || isCorrectKey == true) {\n       if (isRecording == true) {\n         dispatch(flip_recording());\n       }\n       if (isCorrectKey == false && wantsWebspeech == true) {\n         dispatch(flip_on_webspeech())\n       }\n      setInterval(checkIfStillHere, timerCheck);\n      if (bgColor == 'black') {\n         return (\n              <div className=\"App-1\" style={{\n                   backgroundColor: 'black',\n                   color: 'white',\n                   overflow: 'hidden',\n                   position: 'fixed',\n                  }}>\n                  <TopSpace color = {bgColor} />\n                  <PlaceHolder height = {placeHeight}  color = {bgColor} textSize = {sizeString}/>\n                  <MiddleSpace height = {midHeight} color = {bgColor}/>\n                   <AzureCaptions textSize={sizeString} wantWebspeech={wantsWebspeech}/>\n                   <Captions textSize={sizeString} azureCaptionSuccess={wantsWebspeech} />\n              </div>\n         )\n      } else {\n        return (\n             <div className=\"App-2\" style={{\n                  backgroundColor: 'white',\n                  color: 'black',\n                  overflow: 'hidden',\n                  position: 'fixed',\n                 }}>\n                 <TopSpace color = {bgColor} />\n                 <PlaceHolder height = {placeHeight}  color = {bgColor} textSize = {sizeString}/>\n                 <MiddleSpace height = {midHeight} color = {bgColor}/>\n                  <AzureCaptions textSize={sizeString} wantWebspeech={wantsWebspeech}/>\n                  <Captions textSize={sizeString} azureCaptionSuccess={wantsWebspeech} />\n                  {/* <DNDTest /> */}\n             </div>\n        )\n     }\n   }\n      // cases where azureKey is false but isrecording is not????\n\n      if (bgColor == 'black') {\n        if (isEnteredKey == true || isEnteredRegion == true) {\n          dispatch(flip_check_azureKey())\n          if (isRecording == true) {\n            dispatch(flip_recording())\n          }\n        }\n        return (\n            <div className=\"App-1\" style={{\n                 backgroundColor: 'black',\n                 color: 'white',\n                 overflow: 'hidden',\n                 position: 'fixed',\n                }}>\n                 <TopSpace color = {bgColor}/>\n                 <PlaceHolder height = {placeHeight}  color = {bgColor} textSize = {sizeString}/>\n                 <MiddleSpace height = {midHeight} color = {bgColor}/>\n                 <Captions textSize={sizeString} azureCaptionSuccess={true}/>\n\n\n                 {/* <DNDTest /> */}\n            </div>\n       )\n     } else {\n       if (isEnteredKey == true || isEnteredRegion == true) {\n         dispatch(flip_check_azureKey())\n         if (isRecording == true) {\n           dispatch(flip_recording())\n         }\n       }\n       return (\n            <div className=\"App-2\" style={{\n                 backgroundColor: 'white',\n                 color: 'black',\n                 overflow: 'hidden',\n                 position: 'fixed',\n                }}>\n                 <TopSpace color = {bgColor} />\n                 <PlaceHolder height = {placeHeight} color = {bgColor} textSize = {sizeString}/>\n                 <MiddleSpace height = {midHeight} color = {bgColor}/>\n                 <Captions  textSize={sizeString}  textSize={sizeString} azureCaptionSuccess={true}/>\n                 {/* <DNDTest /> */}\n            </div>\n       )\n     }\n     // You can't comment in JSX.\n     // The style tag is the easiest way to set style based on JS variables.\n\n}\n\nvar timer = 30\n,isTimerStarted = false;\nvar myTime;\nfunction checkIfStillHere() {\n  swal({\n    title: 'Are you still here?',\n    confirmButtonText: \"OK\",\n    icon: 'warning',\n    text: 'If you want to continue using Azure Recogition click ok.  \\n You have ' + timer + ' seconds.',\n    timer: !isTimerStarted ? timer * 1000 : undefined,\n\n  }\n  ).then(function(isConfirm) {\n    if (isConfirm) {\n      swal({\n        title: 'Continue using Azure Recogition.',\n        icon: 'success',\n        timer: 2000,\n        buttons: false,\n      });\n      timer = 30;\n      clearTimeout(myTime);\n    }\n  });\n\n  isTimerStarted = true;\n    if(timer) {\n        timer--;\n        myTime = setTimeout(checkIfStillHere, 1000);\n    } else {\n      swal ({\n        title: \"Reloading...\",\n        icon: 'error',\n        timer: 3000,\n        buttons: false,\n      });\n      window.location.reload(true);\n    }\n\n}\n","// THIS ENTIRE FILE, INCLUDING COMMENTS EXCEPT FOR THIS ONE, IS AUTOMATICALLY PROVIDED BY NPX\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\r\n\r\nvar savedTextSize = localStorage.getItem('text')\r\nvar savedColor = localStorage.getItem('color')\r\nvar savedMic = localStorage.getItem('mic')\r\nvar savedBox = localStorage.getItem('box')\r\nvar savedMeh = localStorage.getItem('meh')\r\nvar choiceColor = 0//0 = black; 1 = white\r\n\r\n// var choiceColor = false\r\nvar choiceMeh = 0\r\n// var choiceMic = 0\r\nvar choiceBox = 40\r\nvar choiceTextSize = 6\r\nif (savedTextSize != null){\r\n     choiceTextSize = savedTextSize\r\n}\r\nif (savedMeh != null){\r\n     choiceMeh = savedMeh\r\n}\r\nif (savedBox != null){\r\n     choiceBox = savedBox\r\n}\r\n// if (savedMic != null){\r\n//      choiceMic = savedMic\r\n// }\r\n\r\nconst audioVisualiser = (state = 0, action) => {\r\n    switch (action.type) {\r\n        case 'AUDIOVIS_FLIP':\r\n            if (state != 0) {\r\n                state = 0;\r\n            } else if (localStorage.getItem('mic') != null && state == 0) {\r\n                state = localStorage.getItem('mic');\r\n            } else if (localStorage.getItem('mic') == null) {\r\n                state = 1;\r\n            }\r\n            return state;\r\n        case 'AUDIOVIS_OFF':\r\n            state = 0;\r\n            return state;\r\n        case 'MONO_LINE':\r\n            state = 1;\r\n            return state;\r\n        case 'MONO_SPECTRUM':\r\n            state = 2\r\n            return state;\r\n        case 'MONO_CIRCULAR':\r\n            state = 3;\r\n            return state;\r\n        case 'STEREO_CIRCULAR':\r\n            state = 4;\r\n            return state;\r\n        case 'STEREO_RECTANGULAR':\r\n            state = 5;\r\n            return state;\r\n        case 'STEREO_SPECTRUM':\r\n            state = 6;\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst submenuReducer = (state = 1, action) => {\r\n    switch (action.type) {\r\n        case 'SUBMENU_1':\r\n            return 1;\r\n        case 'SUBMENU_2':\r\n            return 2;\r\n        case 'SUBMENU_3' :\r\n            return 3;\r\n        case 'NEXT_PAGE':\r\n            if (state + 1 > 3) {\r\n                return 1\r\n            } else {\r\n                return state + 1;\r\n            }\r\n        case 'PREV_PAGE':\r\n            if (state - 1 < 1) {\r\n                return 3\r\n            } else {\r\n                return state - 1;\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst onWebspeechReducer = (state = true, action) =>{\r\n     if (action.type == 'FLIP_ON_WEBSPEECH')\r\n          return !state\r\n     else return state\r\n}\r\n\r\nconst textSizeReducer = (state = choiceTextSize, action) => {\r\n     switch (action.type) {\r\n          case 'INCREMENT_TEXTSIZE':\r\n               return state%12 + 1;\r\n          case 'DECREMENT_TEXTSIZE':\r\n               return Math.max(1, state - 1);\r\n          default:\r\n               return state;\r\n     }\r\n}\r\n\r\nconst lineWidthReducer = (state = 10, action) => {\r\n     switch (action.type) {\r\n          case 'INCREMENT_LINEWIDTH':\r\n               return Math.min(10, state + 1)\r\n          case 'DECREMENT_LINEWIDTH':\r\n               return Math.max(1, state - 1);\r\n          default:\r\n               return state;\r\n     }\r\n}\r\n\r\nconst numLinesReducer = (state = choiceBox, action) => {\r\n     switch (action.type) {\r\n          case 'INCREMENT_NUMLINES':\r\n               return Math.min(state + 1,50);\r\n          case 'DECREMENT_NUMLINES':\r\n               return Math.max(1, state - 1);\r\n          default:\r\n               return state;\r\n     }\r\n}\r\n\r\nconst lockScreenReducer = (state = false, action) => {\r\n     if (action.type === 'FLIP_LOCKSCREEN')\r\n          return !state;\r\n     else return state;\r\n}\r\n\r\n\r\n\r\nconst switchMenusReducer = (state = false, action) => {\r\n     if (action.type === 'FLIP_SWITCHMENUS')\r\n          return !state;\r\n     else return state;\r\n}\r\n\r\nconst recordingReducer = (state = true, action) => {\r\n     if (action.type === 'FLIP_RECORDING')\r\n          return !state\r\n     else return state\r\n}\r\n\r\nconst recordingAzureReducer = (state = true, action) =>{\r\n     if (action.type == 'FLIP_RECORDING_AZURE')\r\n          return !state\r\n     else return state\r\n}\r\n\r\nconst switchToAzureReducer = (state = false, action) => {\r\n     if (action.type == 'SWITCH_TO_AZURE_REDUCER')\r\n          return !state\r\n     else return state\r\n}\r\n\r\nconst enteredKeyReducer = (state = false, action) =>{\r\n     if (action.type == 'FLIP_ENTERED_KEY')\r\n          return !state\r\n     else return state\r\n}\r\n\r\nconst correctAzureKeyReducer = (state = false, action) =>{\r\n     if (action.type == 'FLIP_CORRECT_AZUREKEY')\r\n          return !state\r\n     else return state\r\n}\r\n\r\nconst checkAzureKeyReducer = (state = false, action) =>{\r\n     if (action.type == 'FLIP_CHECK_AZUREKEY')\r\n          return !state\r\n     else return state\r\n}\r\n\r\n\r\nconst enteredRegionReducer = (state = false, action) =>{\r\n     if (action.type == 'FLIP_ENTERED_REGION')\r\n          return !state\r\n     else return state\r\n}\r\n\r\nconst instructionsReducer = (state = false, action) => {\r\n     if (action.type == 'FLIP_INSTRUCTIONS')\r\n          return !state\r\n     else return state\r\n}\r\n\r\nconst menuhideReducer = (state = choiceMeh, action) => {\r\n     if (action.type == 'FLIP_MENUHIDE')\r\n          return (state+1)%2\r\n     else return state\r\n}\r\n\r\nconst invertStereo = (state = 0, action) =>{\r\n     if(action.type === 'FLIP_STEREO')\r\n          return !state;\r\n     else return state;\r\n}\r\n\r\nconst invertStereoVisualReducer = (state = 0, action) =>{\r\n     switch (action.type) {\r\n          case 'FORWARD_STEREOVISUAL':\r\n              return (state + 1)%4;\r\n          case 'BACKWARD_STEREOVISUAL':\r\n               state = state -1;\r\n               if(state < 0){\r\n                    state = 3\r\n               }\r\n               return state;\r\n           default:\r\n                return state;\r\n     }\r\n}\r\n\r\nconst invertMicVisualReducer = (state = 0, action) => {\r\n     switch (action.type) {\r\n          case 'FORWARD_MICVISUAL':\r\n              return (state + 1)%4;\r\n          case 'BACKWARD_MICVISUAL':\r\n               state = state -1;\r\n               if(state < 0){\r\n                    state = 3\r\n               }\r\n               return state;\r\n           default:\r\n                return state;\r\n     }\r\n}\r\n\r\nconst buttomSizeReducer = (state = 1, action) => {\r\n    switch (action.type) {\r\n        case 'BOT_1':\r\n            state = 0;\r\n            return state;\r\n        case 'BOT_2':\r\n            state = 1;\r\n            return state;\r\n        case 'BOT_3':\r\n            state = 2;\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst visulizationSensitivityController = (state = 1.0, action) => {\r\n    switch (action.type) {\r\n        case 'INCREASE_SENSITIVITY':\r\n            state += 0.1;\r\n            return state;\r\n        case 'DECREASE_SENSITIVITY':\r\n            state -= 0.1;\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\nconst azureSwitchReducer = (state = 1, action) => {\r\n    switch (action.type) {\r\n        case 'NEXT_AZURE':\r\n            return Math.min(2, state + 1);\r\n        case 'PREV_AZURE':\r\n            return Math.max(1, state - 1);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst invertColorsReducer = (state = choiceColor, action) => {\r\n    if (action.type === 'FLIP_INVERTCOLORS') {\r\n        state = (state + 1) % 2\r\n        localStorage.setItem('color', state)\r\n        return state;\r\n    }\r\n    if (action.type === 'PICK_BLACK') {\r\n        state = 0;\r\n        localStorage.setItem('color', 0)\r\n        return state;\r\n    }\r\n    if (action.type === 'PICK_WHITE') {\r\n        localStorage.setItem('color', 1)\r\n        return 1;\r\n    } else return state;\r\n}\r\n\r\nconst allReducers = combineReducers({\r\n     onWebspeech: onWebspeechReducer,\r\n     switchToAzure: switchToAzureReducer,\r\n     checkAzureKey: checkAzureKeyReducer,\r\n     correctAzureKey: correctAzureKeyReducer,\r\n     enteredRegion: enteredRegionReducer,\r\n     enteredKey: enteredKeyReducer,\r\n     textSize: textSizeReducer,\r\n     lineWidth: lineWidthReducer,\r\n     numLines: numLinesReducer,\r\n     lockScreen: lockScreenReducer,\r\n     invertColors: invertColorsReducer,\r\n     recording: recordingReducer,\r\n     mic: audioVisualiser,\r\n     switchMenus: switchMenusReducer,\r\n     recordingAzure: recordingAzureReducer,\r\n     ins: instructionsReducer,\r\n     meh: menuhideReducer,\r\n     submenu: submenuReducer,\r\n     azuresw: azureSwitchReducer,\r\n     botsize: buttomSizeReducer,\r\n     sens: visulizationSensitivityController\r\n});\r\n\r\nexport default allReducers;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport allReducers from './redux/reducers';\nimport { Provider } from 'react-redux';\n\nconst store = createStore(allReducers);\n\nReactDOM.render(\n     <Provider store={store}>\n          <App />\n     </Provider>,\n     document.getElementById('root')\n);\n\n// AUTOMATIC COMMENT PROVIDED BY NPX:\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}