{"version":3,"sources":["components/sidebar/STT/phraseList.tsx","components/theme.tsx","components/sidebar/STT/listening.tsx","components/sidebar/display/textSize.tsx","components/sidebar/display/themeOption.tsx","components/sidebar/display/themeDropdown.tsx","components/sidebar/STT/speechLanguage.tsx","components/sidebar/STT/textLanguage.tsx","components/sidebar/sidebar.tsx","components/topbar/fullScreen.tsx","components/topbar/menuHider.tsx","components/api/azure/AzureDropdown.tsx","components/api/pickApi.tsx","components/api/azure/azureRecognition.tsx","components/topbar/ApiDropdown.tsx","components/topbar/topbar.tsx","components/api/webspeech/recognition.tsx","components/api/recogComponent.tsx","mode/desktop/Desktop.tsx","App.tsx","redux/reducers/displayReducers.tsx","redux/reducers/apiReducers.tsx","redux/reducers/controlReducers.tsx","store.tsx","reportWebVitals.ts","index.tsx"],"names":["AzureDropdown","props","dispatch","useDispatch","React","phrase","state","setState","toggleEnter","a","type","payload","List","component","disablePadding","ListItem","sx","pl","Box","mr","width","noValidate","autoComplete","TextField","onChange","event","target","value","label","variant","Button","ListItemText","primary","onClick","Theme","displayStatus","useSelector","DisplayReducer","myTheme","createTheme","palette","main","secondaryColor","secondary","primaryColor","CustomizedMenus","controlStatus","ControlReducer","ThemeProvider","theme","id","disableElevation","listening","height","useStyles","makeStyles","slider","marginLeft","textBox","valuetext","PlusMinus","textS","styles","className","Typography","gutterBottom","Grid","container","spacing","alignItems","item","xs","Slider","style","color","defaultValue","textSize","getAriaValueText","aria-labelledby","valueLabelDisplay","e","val","copyStatus","Object","assign","handleInputChangeSlider","step","marks","min","max","Input","margin","Number","onBlur","inputProps","colors","hex","rgb","text","changeTheme","copy","JSON","parse","display","flexWrap","marginBottom","Array","from","map","_","xIndex","yIndex","marginRight","transform","transition","tabIndex","stringify","background","cursor","borderStyle","position","borderColor","borderRadius","borderWidth","outline","boxShadow","AccountMenu","anchorEl","setAnchorEl","open","Boolean","textAlign","currentTarget","Menu","onClose","PaperProps","elevation","filter","boxSizing","transformOrigin","horizontal","vertical","anchorOrigin","languages","StyledMenu","styled","marginTop","mode","grey","fontSize","innerHeight","outerHeight","backgroundColor","alpha","action","selectedOpacity","control","language","speechLanguage","handleClickItem","aria-controls","aria-haspopup","aria-expanded","undefined","padding","MenuListProps","index","MenuItem","disableRipple","textLanguages","textLanguage","STT","stt","visualization","toggleDrawer","head","bgcolor","ListItemIcon","IconButton","Collapse","in","timeout","unmountOnExit","mb","isRecording","Divider","pt","currTheme","Fullscreen","isFullScreen","elem","document","documentElement","exitFullscreen","requestFullscreen","MenuHider","menuVisible","STATUS","pog","test","useCallback","azureStatus","Promise","resolve","reject","azureSpeech","speechSDK","fromSubscription","azureKey","azureRegion","speechRecognitionLanguage","addTargetLanguage","azureAudioConfig","fromDefaultMicrophoneInput","reco","canceled","sessionStarted","recognizeOnceAsync","error","useMemo","GetAzureRecognition","openAzure","AzureReducer","apiStatus","handleChangeKey","then","response","localStorage","setItem","swal","title","icon","timer","buttons","no","currentAPI","pr","success","warning","IconStatus","NULL","AVAILABLE","UNAVAILABLE","streamTextStatus","webspeechStatus","APIStatusReducer","apiStat","api","isArrow","apiName","ListItemButton","streamtextStatus","Tooltip","size","ml","overflow","mt","content","top","right","zIndex","TemporaryDrawer","isOpen","AppBar","onMouseOut","topbarID","getElementById","opacity","onMouseOver","Toolbar","Drawer","left","paddingLeft","getSpeechRecognition","window","webkitSpeechRecognition","Error","speechRecognition","continuous","interimResults","transcriptsFull","desiredAPI","WebRecognitionExample","console","log","webspeechHandler","azureHandler","addEventListener","Swal","fire","allowOutsideClick","showDenyButton","confirmButtonText","result","isConfirmed","textSizeA","transcript","azureTranscripts","setTranscripts","azureListen","lastStartedAt","Date","getTime","current","setProfanity","phraseList","fromRecognizer","i","phrases","length","addPhrase","lastRecognized","startContinuousRecognitionAsync","recognizing","s","stopContinuousRecognitionAsync","translations","get","recognized","sessionStopped","timeSinceStart","AzureRecognition","finalTranscript","transcripts","listen","onresult","stop","finalResult","results","join","onend","start","useRecognition","stateRefControl","stateRefAzure","stateCurrentAPI","fullTranscripts","capts","scrollHeight","clientHeight","scrollTop","paddingRight","overflowY","textColor","Desktop","App","COLOR","APIS","initialState","saveLocally","varName","getLocalState","name","checkNull","getItem","initialAPIStatusState","WEBSPEECH","initialAzureState","initialStreamtextState","key","initialControlState","rootReducer","combineReducers","push","StreamtextReducer","store","createStore","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.87e23cbd.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport List from '@mui/material/List';\r\nimport Button from \"@mui/material/Button\";\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nexport default function AzureDropdown(props) {\r\n    const dispatch = useDispatch()\r\n\r\n    const [state, setState] = React.useState({\r\n        phrase: \"\" \r\n    });\r\n    const handleChangeKey = (event) => {\r\n        setState({\r\n            ...state, \r\n            phrase: event.target.value});\r\n    } \r\n    const toggleEnter = async () => {\r\n        dispatch({type: 'FLIP_RECORDING_PHRASE', payload: false})\r\n        dispatch({type: 'ADD_PHRASE', payload: state.phrase})\r\n        setState({\r\n            ...state, \r\n            phrase: \"\"});\r\n\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n                <List component=\"div\" disablePadding>\r\n                    <ListItem sx={{ pl: 4 }}>\r\n                        <Box\r\n                            component=\"form\"\r\n                            sx={{\r\n                                '& > :not(style)': { mr: '1vw', width: '15vw' },\r\n                            }}\r\n                            noValidate\r\n                            autoComplete=\"off\"\r\n                        ><TextField onChange={handleChangeKey} value={state.phrase} label=\"Phrases\" variant=\"outlined\" /></Box>\r\n                    </ListItem>\r\n                    <Button sx={{ pl: 4 }}>\r\n                        <ListItemText primary=\"Enter\" onClick={toggleEnter}/>\r\n                    </Button>\r\n                </List>\r\n        </div>\r\n    );\r\n}","import { createTheme } from '@mui/material/styles';\r\nimport { RootState, DisplayStatus } from '../redux/types';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport default function Theme() {\r\nconst displayStatus = useSelector((state: RootState) => {\r\n    return state.DisplayReducer as DisplayStatus;\r\n})\r\nconst myTheme = createTheme\r\n    ({\r\n        palette: {\r\n            primary: {\r\n                main: displayStatus.secondaryColor\r\n            },\r\n            secondary: {\r\n                main: displayStatus.primaryColor\r\n            }\r\n            \r\n        },\r\n    });\r\n    return{myTheme}\r\n}","import PlayArrowIcon from '@mui/icons-material/PlayArrow';\r\nimport { RootState } from '../../../store';\r\nimport PauseIcon from '@mui/icons-material/Pause';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { ControlStatus } from '../../../redux/types';\r\nimport Theme from '../../theme'\r\nimport * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\n\r\n   export default function CustomizedMenus(props) {\r\n     const dispatch = useDispatch()\r\n     let controlStatus = useSelector((state: RootState) => {\r\n          return state.ControlReducer as ControlStatus;\r\n     });\r\n\r\n     const toggleDrawer = (event: React.KeyboardEvent | React.MouseEvent) => {\r\n          controlStatus.listening = !controlStatus.listening\r\n          dispatch({type: 'FLIP_RECORDING', payload: controlStatus})\r\n     }\r\n     const {myTheme} = Theme()\r\n\r\n     return (\r\n       <div>\r\n        <ThemeProvider theme={myTheme}>\r\n         <Button\r\n           id=\"demo-customized-button\"\r\n           variant=\"contained\"\r\n           disableElevation\r\n           onClick={toggleDrawer}\r\n           sx={{ width: 50, height:30}}\r\n         >\r\n          {controlStatus.listening === false ? <PlayArrowIcon /> : <PauseIcon />}\r\n         </Button>\r\n         </ThemeProvider>\r\n\r\n       </div>\r\n     );\r\n   }\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Input from '@material-ui/core/Input';\r\nimport { RootState, DisplayStatus } from '../../../redux/types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nconst useStyles = makeStyles({\r\n  slider: {\r\n    width: '16vw',\r\n    marginLeft: '2vw',\r\n  },\r\n  textBox: {\r\n    width: '2.5vw',\r\n    marginLeft: '1vw'\r\n  }\r\n});\r\nfunction valuetext(value) {\r\n  return `${value}`;\r\n}\r\nexport default function PlusMinus(props) {\r\n  const dispatch = useDispatch()\r\n  const textS = useSelector((state: RootState) => {\r\n    return state.DisplayReducer as DisplayStatus;\r\n  });\r\n\r\n  const handleInputChangeInput = (event) => {\r\n    let copyStatus = Object.assign({}, textS);\r\n    copyStatus.textSize = Number(event.target.value)\r\n    dispatch({ type: 'SET_TEXT', payload: copyStatus })\r\n  }\r\n  const handleInputChangeSlider = (event) => {\r\n    let copyStatus = Object.assign({}, textS);\r\n    copyStatus.textSize = event\r\n    dispatch({ type: 'SET_TEXT', payload: copyStatus })\r\n  }\r\n  const styles = useStyles()\r\n  const handleBlur = () => {\r\n    let copyStatus = Object.assign({}, textS);\r\n    if (textS.textSize < 1) {\r\n      copyStatus.textSize = 1\r\n    } else if (textS.textSize > 15) {\r\n      copyStatus.textSize = 1\r\n    }\r\n    dispatch({ type: 'SET_TEXT', payload: copyStatus })\r\n  };\r\n  return (\r\n    <div className={styles.slider}>\r\n        <Typography gutterBottom>\r\n        </Typography>\r\n        <Grid container spacing={2} alignItems=\"center\">\r\n          <Grid item xs>\r\n            <Slider\r\n              style={{ color: textS.secondaryColor }}\r\n              defaultValue={textS.textSize}\r\n              getAriaValueText={valuetext}\r\n              aria-labelledby=\"discrete-slider\"\r\n              valueLabelDisplay=\"auto\"\r\n              onChange={(e, val) => { handleInputChangeSlider(val) }}\r\n              step={1}\r\n              marks\r\n              min={1}\r\n              max={15}\r\n            />\r\n          </Grid>\r\n          <div className={styles.textBox}>\r\n            <Grid item>\r\n              <Input\r\n                value={textS.textSize}\r\n                margin=\"dense\"\r\n                onChange={handleInputChangeInput}\r\n                onBlur={handleBlur}\r\n                inputProps={{\r\n                  step: 1,\r\n                  min: 1,\r\n                  max: 15,\r\n                  type: 'number',\r\n                  'aria-labelledby': 'input-slider',\r\n                }}\r\n              />\r\n            </Grid>\r\n          </div>\r\n        </Grid>\r\n    </div>\r\n  )\r\n}","import { useDispatch } from 'react-redux';\r\nexport default function Theme(props) {\r\n    const dispatch = useDispatch()\r\n    type color = {\r\n        hex: string\r\n        rgb: string\r\n        text: number\r\n    }\r\n    \r\n    let colors: color[][] = [\r\n        [\r\n            {hex: '#000000', rgb: '#466636', text: 0},\r\n            {hex: '#000000', rgb: '#995262', text: 0},\r\n            {hex: '#000000', rgb: '#527399', text: 1},\r\n            {hex: '#000000', rgb: '#705299', text: 1},\r\n        ],\r\n        [    \r\n            {hex: '#0f0f0f', rgb:  '#292929', text: 0},\r\n            {hex: '#5c5c5c', rgb: '#1f1f1f', text: 0},\r\n            {hex: '#c2c2c2', rgb: '#5c5c5c', text: 0},\r\n            {hex: '#ebebeb', rgb: '#858585', text: 0},\r\n        ],\r\n        //Dark\r\n        [\r\n            {hex: '#23331b', rgb: '#466636', text: 1},\r\n            {hex: '#331b21', rgb: '#995262', text: 1},\r\n            {hex: '#1b2633', rgb: '#527399', text: 1},\r\n            {hex: '#251b33', rgb: '#705299', text: 1},\r\n        ],\r\n        //Light\r\n        [\r\n            {hex: '#d7ffc4', rgb: '#689952', text: 0},\r\n            {hex: '#ffc4d1', rgb: '#b35f72', text: 0},\r\n            {hex: '#c4dfff', rgb: '#5f86b3', text: 0},\r\n            {hex: '#ddc4ff', rgb: '#835fb3', text: 0},\r\n        ],\r\n        //Light\r\n        [   \r\n            {hex: '#f7fff3', rgb: '#8bcc6d', text: 0},\r\n            {hex: '#fff3f6', rgb: '#ff88a3', text: 0},\r\n            {hex: '#f3f9ff', rgb: '#88bfff', text: 0},\r\n            {hex: '#f8f3ff', rgb: '#bb88ff', text: 0},\r\n        ],\r\n        \r\n    ]\r\n    const changeTheme = (event) =>\r\n    {\r\n        let copy = JSON.parse(event.target.value)\r\n        if (copy.text == 0) {\r\n            copy.text = '#000000'\r\n        } else {\r\n            copy.text = '#FFFFFF'\r\n        }\r\n        dispatch({type: 'CHANGE_PRIMARY_THEME', payload: copy.hex})\r\n        dispatch({type: 'CHANGE_SECONDARY_THEME', payload: copy.rgb})\r\n        dispatch({type: 'CHANGE_TEXT_COLOR', payload: copy.text})\r\n    }\r\n    return (\r\n        <div className=\"circle-picker \" style={{display: 'flex', flexWrap: 'wrap', marginBottom: '-2vw', marginLeft: '.8vw' }}>\r\n                <table>\r\n                {Array.from(Array(5)).map((_, xIndex) => (\r\n                    <tr>\r\n                        {colors[xIndex].map((colors: color, yIndex) =>\r\n                            <th>\r\n                                <div style={{ width: '1.5vw', height: '1.5vw', marginRight: '.8vw', marginBottom: '.8vw', transform: 'scale(1)', transition: 'transform 100ms ease 0s' }}>\r\n                                    <span>\r\n                                        <button tabIndex={0} value = {JSON.stringify(colors)} onClick={changeTheme} style={{\r\n                                            background: 'transparent',\r\n                                            height: '100%',\r\n                                            width: '100%',\r\n                                            cursor: 'pointer',\r\n                                            borderStyle: 'solid',\r\n                                            position: 'relative',\r\n                                            borderColor: colors.rgb,\r\n                                            borderRadius: '30%',\r\n                                            borderWidth: 'thick',\r\n                                            outline: 'none',\r\n                                            boxShadow: colors.hex + ' 0px 0px 0px 15px inset',\r\n                                            transition: 'box-shadow 100ms ease 0s'\r\n                                        }} />\r\n                                    </span>\r\n                                </div>\r\n                            </th>\r\n                        )}\r\n                    </tr>\r\n                     ))}\r\n                </table>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\n            ","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Menu from '@mui/material/Menu';\r\nimport Button from '@mui/material/Button';\r\nimport PaletteIcon from '@mui/icons-material/Palette';\r\nimport ThemeOption from './themeOption'\r\nimport { ThemeProvider } from '@mui/material/styles';\r\nimport Theme from './../../theme'\r\n\r\nexport default function AccountMenu() {\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const open = Boolean(anchorEl);\r\n  const { myTheme } = Theme()\r\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Box sx={{ display: 'flex', alignItems: 'center', textAlign: 'center' }}>\r\n        <ThemeProvider theme={myTheme}>\r\n\r\n          <Button\r\n            id=\"demo-customized-button\"\r\n            variant=\"contained\"\r\n            disableElevation\r\n            onClick={handleClick}\r\n            sx={{ width: 50, height: 30 }}\r\n          >\r\n            {<PaletteIcon />}\r\n\r\n          </Button>\r\n        </ThemeProvider>\r\n      </Box>\r\n      <Menu\r\n        anchorEl={anchorEl}\r\n        open={open}\r\n        onClose={handleClose}\r\n        PaperProps={{\r\n          elevation: 0,\r\n          sx: {\r\n            height: '14vw',\r\n            filter: 'drop-shadow(0px 2px 8px rgba(0,0,0,0.32))',\r\n            '& .MuiAvatar-root': {\r\n              boxSizing: \"border-box\",\r\n              mr: 1,\r\n            },\r\n\r\n          },\r\n        }}\r\n        transformOrigin={{ horizontal: 'left', vertical: 'center' }}\r\n        anchorOrigin={{ horizontal: 'center', vertical: 'center' }}\r\n      >\r\n        <ThemeOption />\r\n      </Menu>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport { styled, alpha } from '@mui/material/styles';\r\nimport Button from '@mui/material/Button';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport Theme from '../../theme'\r\nimport { RootState, ControlStatus } from '../../../redux/types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Menu, { MenuProps } from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\n/* todo:\r\n  1   Make language bar a fixed height so that it can only display ~8 languages \r\n      and not take up the whole screen\r\n  2   Change language lists to a 2d array that so we can display the countries name\r\n      and save the shortened title in RootState\r\n*/\r\nconst languages = [\r\n  \"ar-EG\",\r\n  \"ca-ES\",\r\n  \"da-DK\",\r\n  \"da-DK\",\r\n  \"de-DE\",\r\n  \"en-AU\",\r\n  \"en-CA\",\r\n  \"en-GB\",\r\n  \"en-IN\",\r\n  \"en-NZ\",\r\n  \"en-US\",\r\n  \"es-ES\",\r\n  \"es-MX\",\r\n  \"fi-FI\",\r\n  \"fr-CA\",\r\n  \"fr-FR\",\r\n  \"hi-IN\",\r\n  \"it-IT\",\r\n  \"ja-JP\",\r\n  \"ko-KR\",\r\n  \"nb-NO\",\r\n  \"nl-NL\",\r\n  \"pl-PL\",\r\n  \"pt-BR\",\r\n  \"pt-PT\",\r\n  \"ru-RU\",\r\n  \"sv-SE\",\r\n  \"zh-CN\",\r\n  \"zh-HK\",\r\n  \"zh-TW\",]\r\n\r\nconst StyledMenu = styled((props: MenuProps) => (\r\n  <Menu\r\n    elevation={0}\r\n    anchorOrigin={{\r\n      vertical: 'bottom',\r\n      horizontal: 'right',\r\n    }}\r\n    transformOrigin={{\r\n      vertical: 'top',\r\n      horizontal: 'right',\r\n    }}\r\n    {...props}\r\n  />\r\n))(({ theme }) => ({\r\n  '& .MuiPaper-root': {\r\n    borderRadius: 6,\r\n    marginTop: theme.spacing(1),\r\n    color:\r\n      theme.palette.mode === 'light' ? 'rgb(55, 65, 81)' : theme.palette.grey[300],\r\n\r\n    '& .MuiMenuItem-root': {\r\n      '& .MuiSvgIcon-root': {\r\n        fontSize: 10,\r\n        color: theme.palette.text.secondary,\r\n        marginRight: theme.spacing(1.5),\r\n        innerHeight: 40,\r\n        outerHeight: 40,\r\n      },\r\n      '&:active': {\r\n        backgroundColor: alpha(\r\n          theme.palette.primary.main,\r\n          theme.palette.action.selectedOpacity,\r\n        ),\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function CustomizedMenus() {\r\n  const dispatch = useDispatch();\r\n  const control = useSelector((state: RootState) => {\r\n    return state.ControlReducer as ControlStatus;\r\n  });\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const [state, setState] = React.useState({\r\n    language: control.speechLanguage,\r\n  });\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n\r\n  };\r\n  const handleClickItem = (event) => {\r\n    setState({ ...state, language: event.target.id })\r\n    dispatch({type: 'SET_SPEECH_LANGUAGE', payload: event.target.id})\r\n    setAnchorEl(null);\r\n  }\r\n\r\n  const {myTheme} = Theme()\r\n\r\n\r\n  return (\r\n    <div>\r\n                              <ThemeProvider theme={myTheme}>\r\n\r\n      <Button\r\n        id=\"demo-customized-button\"\r\n        aria-controls=\"demo-customized-menu\"\r\n        aria-haspopup=\"true\"\r\n        aria-expanded={open ? 'true' : undefined}\r\n        variant=\"contained\"\r\n        disableElevation\r\n        onClick={handleClick}  \r\n        sx={{ width: '2vw', height:30, padding: 0}}\r\n      >\r\n          \r\n        <h2 className=\"tryout\" style={{fontSize: '12px'}}>{state.language}</h2> \r\n        </Button>\r\n      <StyledMenu\r\n        id=\"demo-customized-menu\"\r\n        MenuListProps={{\r\n          'aria-labelledby': 'demo-customized-button',\r\n        }}\r\n        anchorEl={anchorEl}\r\n        open={open}\r\n        onClose={handleClose}\r\n      >\r\n          {languages.map((language : string, index) =>\r\n            <MenuItem id = {language} onClick={handleClickItem} disableRipple>\r\n                {language}\r\n            </MenuItem>\r\n          )}          \r\n      </StyledMenu>\r\n      </ThemeProvider>\r\n\r\n    </div>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport { styled, alpha } from '@mui/material/styles';\r\nimport Button from '@mui/material/Button';\r\nimport { RootState, ControlStatus } from '../../../redux/types';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport Theme from '../../theme'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Menu, { MenuProps } from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\n/* todo:\r\n  1   Make language bar a fixed height so that it can only display ~8 languages \r\n      and not take up the whole screen\r\n  2   Change language lists to a 2d array that so we can display the countries name\r\n      and save the shortened title in RootState\r\n*/\r\n\r\n  const textLanguages = [\r\n    \"ar\",\r\n    \"da\",\r\n    \"de\",\r\n    \"en\",\r\n    \"es\",\r\n    \"fi\",\r\n    \"fr\",\r\n    \"hi\",\r\n    \"it\",\r\n    \"ja\",\r\n    \"ko\",\r\n    \"nb\",\r\n    \"nl\",\r\n    \"pl\",\r\n    \"pt\",\r\n    \"ru\",\r\n    \"sv\",\r\n    \"zh\",]\r\n\r\nconst StyledMenu = styled((props: MenuProps) => (\r\n  <Menu\r\n    elevation={0}\r\n    anchorOrigin={{\r\n      vertical: 'bottom',\r\n      horizontal: 'right',\r\n    }}\r\n    transformOrigin={{\r\n      vertical: 'top',\r\n      horizontal: 'right',\r\n    }}\r\n    {...props}\r\n  />\r\n))(({ theme }) => ({\r\n  '& .MuiPaper-root': {\r\n    borderRadius: 6,\r\n    marginTop: theme.spacing(1),\r\n    color:\r\n      theme.palette.mode === 'light' ? 'rgb(55, 65, 81)' : theme.palette.grey[300],\r\n\r\n    '& .MuiMenuItem-root': {\r\n      '& .MuiSvgIcon-root': {\r\n        fontSize: 10,\r\n        color: theme.palette.text.secondary,\r\n        marginRight: theme.spacing(1.5),\r\n        innerHeight: 40,\r\n        outerHeight: 40,\r\n      },\r\n      '&:active': {\r\n        backgroundColor: alpha(\r\n          theme.palette.primary.main,\r\n          theme.palette.action.selectedOpacity,\r\n        ),\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function CustomizedMenus() {\r\n  const {myTheme} = Theme()\r\n\r\n  const dispatch = useDispatch();\r\n  const control = useSelector((state: RootState) => {\r\n    return state.ControlReducer as ControlStatus;\r\n  });\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const [state, setState] = React.useState({\r\n    language: control.textLanguage,\r\n  });\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n\r\n  };\r\n  const handleClickItem = (event) => {\r\n    setState({ ...state, language: event.target.id })\r\n    dispatch({type: 'SET_TEXT_LANGUAGE', payload: event.target.id})\r\n    setAnchorEl(null);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n        <ThemeProvider theme={myTheme}>\r\n\r\n      <Button\r\n        id=\"demo-customized-button\"\r\n        aria-controls=\"demo-customized-menu\"\r\n        aria-haspopup=\"true\"\r\n        aria-expanded={open ? 'true' : undefined}\r\n        variant=\"contained\"\r\n        disableElevation\r\n        onClick={handleClick}  \r\n        sx={{ width: '2vw', height:30, padding: 0}}\r\n      >\r\n          \r\n        <h2 className=\"tryout\" style={{fontSize: '12px'}}>{state.language}</h2> \r\n        </Button>\r\n      <StyledMenu\r\n        id=\"demo-customized-menu\"\r\n        MenuListProps={{\r\n          'aria-labelledby': 'demo-customized-button',\r\n        }}\r\n        anchorEl={anchorEl}\r\n        open={open}\r\n        onClose={handleClose}\r\n      >\r\n          {textLanguages.map((language : string, index) =>\r\n            <MenuItem id = {language} onClick={handleClickItem} disableRipple>\r\n                {language}\r\n            </MenuItem>\r\n          )}          \r\n      </StyledMenu>\r\n      </ThemeProvider>\r\n\r\n    </div>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport List from '@mui/material/List';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport ArchitectureIcon from '@mui/icons-material/Architecture';\r\nimport PhraseList from './STT/phraseList'\r\nimport EqualizerIcon from '@mui/icons-material/Equalizer';\r\nimport ExpandLess from '@mui/icons-material/ExpandLess';\r\nimport Listening from './STT/listening'\r\nimport ExpandMore from '@mui/icons-material/ExpandMore';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport Divider from '@mui/material/Divider';\r\nimport TextSize from './display/textSize'\r\nimport ThemeDropdown from './display/themeDropdown'\r\nimport MessageIcon from '@mui/icons-material/Message';\r\nimport SpeechLanguage from './STT/speechLanguage'\r\nimport TextLanguage from './STT/textLanguage'\r\n\r\n\r\n/* todo:\r\n      create listItem shell so that we can simply run a loop to render all of them\r\n      this should help readability and also make adding ListItems in the future easier\r\n*/\r\nexport default function STT(props) {\r\n  const [state, setState] = React.useState({\r\n    display: true,\r\n    stt: true,\r\n    visualization: true,\r\n  });\r\n\r\n  const toggleDrawer =\r\n    (head: string) =>\r\n      (event: React.KeyboardEvent | React.MouseEvent) => {\r\n        setState({ ...state, [head]: !state[head] })\r\n      }\r\n  return (\r\n    <div>\r\n      <h3>Menu</h3>\r\n      <List\r\n        sx={{ width: '20vw', bgcolor: 'background.paper' }}\r\n        component=\"nav\"\r\n        aria-labelledby=\"nested-list-subheader\"\r\n      >\r\n        <ListItem>\r\n          <ListItemIcon>\r\n            <MessageIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Speech To Text\" />\r\n          <IconButton onClick={toggleDrawer(\"stt\")} >\r\n            {state.stt ? <ExpandLess /> : <ExpandMore />}\r\n          </IconButton>\r\n        </ListItem>\r\n        <Collapse in={state.stt} timeout=\"auto\" unmountOnExit>\r\n          <List component=\"div\" disablePadding>\r\n            <ListItem sx={{ pl: 4, mb: 1}}>\r\n              <ListItemText primary=\"Listening\" />\r\n              <Listening isRecording = {props.isRecording}/>\r\n            </ListItem>\r\n            <ListItem sx={{ pl: 4, mb: 1}}>\r\n              <ListItemText primary=\"Speech Language\" />\r\n              <SpeechLanguage/>\r\n            </ListItem>\r\n            <ListItem sx={{ pl: 4, mb: 2 }}>\r\n              <ListItemText primary=\"Text Language\" />\r\n              <TextLanguage/>\r\n            </ListItem>\r\n            <ListItem sx={{ pl: 4, mb: 2 }}>\r\n              <ListItemText primary=\"Add Phrase\" />\r\n            </ListItem>\r\n            <PhraseList/>\r\n\r\n          </List>\r\n        </Collapse>\r\n        <Divider />\r\n\r\n        <ListItem>\r\n          <ListItemIcon>\r\n            <ArchitectureIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Display\" />\r\n          <IconButton onClick={toggleDrawer(\"display\")} >\r\n            {state.display ? <ExpandLess /> : <ExpandMore />}\r\n          </IconButton>\r\n        </ListItem>\r\n        <Collapse in={state.display} timeout=\"auto\" unmountOnExit>\r\n          <List component=\"div\" disablePadding>\r\n            <ListItem sx={{ pl: 4}}>\r\n              <ListItemText primary=\"Textsize\" />\r\n            </ListItem>\r\n            <TextSize/>\r\n\r\n            <ListItem sx={{ pl: 4, pt: 5}}>\r\n              <ListItemText primary=\"Theme\" />\r\n              <ThemeDropdown/>\r\n            </ListItem>\r\n          </List>\r\n        </Collapse>\r\n        <Divider />\r\n\r\n        <ListItem>\r\n          <ListItemIcon>\r\n            <EqualizerIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Audio Visualization\" />\r\n          <IconButton onClick={toggleDrawer(\"visualization\")} >\r\n            {state.visualization ? <ExpandLess /> : <ExpandMore />}\r\n          </IconButton>\r\n        </ListItem>\r\n        <Collapse in={state.visualization} timeout=\"auto\" unmountOnExit>\r\n          <List component=\"div\" disablePadding>\r\n            <ListItem sx={{ pl: 4 }}>\r\n              <ListItemText primary=\"Visualizing\" />\r\n              <Listening isRecording = {props.isRecording}/>\r\n\r\n            </ListItem>\r\n            <ListItem sx={{ pl: 4 }}>\r\n              <ListItemText primary=\"Design\" />\r\n            </ListItem>\r\n          </List>\r\n        </Collapse>\r\n        <Divider />\r\n      </List>\r\n    </div>\r\n  );\r\n}","import FullscreenIcon from '@mui/icons-material/Fullscreen';\r\nimport FullscreenExitIcon from '@mui/icons-material/FullscreenExit';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport * as React from 'react';\r\n\r\nconst currTheme = createTheme({\r\n    palette: {\r\n        primary: {\r\n            main: '#ffffff'\r\n        }\r\n    },\r\n});\r\n\r\nexport default function Fullscreen(props) {\r\n    const [state, setState] = React.useState({\r\n        isFullScreen: false\r\n    });\r\n\r\n    const toggleDrawer = () => {\r\n        var elem = document.documentElement;\r\n        if (!state.isFullScreen) {\r\n            if (elem.requestFullscreen) {\r\n                elem.requestFullscreen();\r\n            }\r\n        } else {\r\n            if (document.exitFullscreen) {\r\n                document.exitFullscreen();\r\n            }\r\n        }\r\n        setState({ ...state, isFullScreen: !state.isFullScreen })\r\n    }\r\n    \r\n    return (\r\n        <div style ={{position: 'relative'}}>\r\n            <ThemeProvider theme={currTheme}>\r\n                <IconButton onClick={toggleDrawer} color=\"primary\" >\r\n                    {state.isFullScreen ? <FullscreenExitIcon fontSize=\"large\" /> : <FullscreenIcon fontSize=\"large\" />}\r\n                </IconButton>\r\n            </ThemeProvider>\r\n        </div>\r\n    );\r\n}\r\n","import React,{ useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\r\nexport default function MenuHider(props){\r\n    const dispatch = useDispatch();\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <IconButton className = \"c2\" color = \"inherit\" onClick = {()=>dispatch({type: 'HIDE_MENU'})}>\r\n                {props.menuVisible ? <LockIcon/> : <LockOpenIcon/>}\r\n            </IconButton>\r\n        </div>\r\n    )\r\n}\r\n","import * as React from 'react';\r\nimport List from '@mui/material/List';\r\nimport Button from \"@mui/material/Button\";\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport swal from 'sweetalert';\r\nimport { GetAzureRecognition } from './azureRecognition';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport { ApiStatus, AzureStatus, ControlStatus } from '../../../redux/types';\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '../../../store';\r\n\r\n\r\nenum STATUS {\r\n    \"AVAILABLE\",\r\n    \"NULL\",\r\n    \"UNAVAILABLE\",\r\n    \"INPROGRESS\",\r\n    \"ERROR\"\r\n}\r\n\r\nexport default function AzureDropdown(props) {\r\n    const dispatch = useDispatch()\r\n    const { pog, test } = GetAzureRecognition();\r\n\r\n    const [state, setState] = React.useState({\r\n        openAzure: false,\r\n        azureStatus: useSelector((state: RootState) => {\r\n            return state.AzureReducer as AzureStatus;\r\n        }),\r\n        controlStatus: useSelector((state: RootState) => {\r\n            return state.ControlReducer as ControlStatus;\r\n        }),\r\n        apiStatus: props.apiStatus as ApiStatus\r\n    });\r\n    const handleChangeKey = (event) =>\r\n     {\r\n            let copyStatus = Object.assign({}, state.azureStatus);\r\n            copyStatus[event.target.id] = event.target.value;\r\n            setState({\r\n                ...state, \r\n                azureStatus: copyStatus});\r\n            dispatch({type: 'CHANGE_AZURE_LOGIN', payload: copyStatus})\r\n            \r\n    } \r\n\r\n    const toggleEnter = async () => {\r\n        dispatch({type: 'FLIP_RECORDING', payload: state.controlStatus})\r\n          const recognizedMessage = await test(state.controlStatus, state.azureStatus).then(response => {  \r\n            let copyStatus = Object.assign({}, state.apiStatus);\r\n            if (response === true) {\r\n              copyStatus.azureStatus = 0;\r\n              localStorage.setItem(\"azureStatus\", JSON.stringify(state.azureStatus))\r\n              swal({\r\n                title: \"Success!\",\r\n                text: \"Switching to Microsoft Azure\",\r\n                icon: \"success\", \r\n                timer: 1500,\r\n                buttons: {\r\n                  no: {\r\n                    text: \"Cancel\",\r\n                    value: \"no\",\r\n                  },    \r\n                },\r\n              })\r\n              .then((value) => {\r\n                switch (value) {\r\n                  case \"no\":\r\n                    setState({ ...state, openAzure: false })\r\n                    break;\r\n                  default:\r\n                    copyStatus.currentAPI = 1;\r\n                    dispatch({type: 'CHANGE_API_STATUS', payload: copyStatus})\r\n                }\r\n              });\r\n              setState({\r\n                ...state, \r\n                apiStatus: copyStatus});\r\n            } else {\r\n              copyStatus.azureStatus = 2;   \r\n              swal({\r\n                title: \"Warning!\",\r\n                text: \"Wrong key or region!\",\r\n                icon: \"warning\",\r\n              })\r\n              setState({\r\n                ...state, \r\n                apiStatus: copyStatus});     \r\n            }\r\n\r\n            dispatch({type: 'CHANGE_API_STATUS', payload: copyStatus})\r\n    \r\n          }\r\n        );  \r\n        dispatch({type: 'FLIP_RECORDING', payload: state.controlStatus})\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n                <List component=\"div\" disablePadding>\r\n                    <ListItem sx={{ pl: 4 }}>\r\n                        <Box\r\n                            component=\"form\"\r\n                            sx={{\r\n                                '& > :not(style)': { pr: '1vw', width: '15vw' },\r\n                            }}\r\n                            noValidate\r\n                            autoComplete=\"off\"\r\n                        ><TextField onChange={handleChangeKey} value={state.azureStatus.azureKey} id=\"azureKey\" label=\"Key\" variant=\"outlined\" /></Box>\r\n                    </ListItem>\r\n                    <ListItem sx={{ pl: 4 }}>\r\n                        <Box\r\n                            component=\"form\"\r\n                            sx={{\r\n                                '& > :not(style)': { mr: '1vw', width: '15vw' },\r\n                            }}\r\n                            noValidate\r\n                            autoComplete=\"off\"\r\n                        ><TextField onChange={handleChangeKey} value={state.azureStatus.azureRegion} id=\"azureRegion\" label=\"Region\" variant=\"outlined\" /></Box>\r\n                    </ListItem>\r\n                    <Button sx={{ pl: 4 }}>\r\n                        <ListItemText primary=\"Enter\" onClick={toggleEnter}/>\r\n                    </Button>\r\n                </List>\r\n        </div>\r\n    );\r\n}","import * as React from 'react';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport List from '@mui/material/List';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport Button from \"@mui/material/Button\";\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ErrorIcon from '@mui/icons-material/Error';\r\nimport swal from 'sweetalert';\r\nimport { ApiStatus, RootState} from '../../redux/types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ExpandLess from '@mui/icons-material/ExpandLess';\r\nimport ExpandMore from '@mui/icons-material/ExpandMore';\r\nimport CancelIcon from '@mui/icons-material/Cancel';\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\nimport DoNotDisturbOnIcon from '@mui/icons-material/DoNotDisturbOn';\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\nimport AzureDropdown from './azure/AzureDropdown';\r\n\r\nenum STATUS {\r\n    \"AVAILABLE\",\r\n    \"NULL\",\r\n    \"UNAVAILABLE\",\r\n    \"INPROGRESS\",\r\n    \"ERROR\"\r\n}\r\n\r\nconst currTheme = createTheme({\r\n    palette: {\r\n        primary: {\r\n            main: '#ffffff',\r\n        },\r\n        success: {\r\n            main: '#4caf50'\r\n        },\r\n        warning: {\r\n            main: '#f44336'\r\n        }, \r\n        error: {\r\n            main: '#C8C224'\r\n        }\r\n    }\r\n});\r\nconst IconStatus = (currentAPI: any) => {\r\n    const myTheme = currTheme;\r\n    switch (currentAPI.currentAPI) {\r\n        case STATUS.NULL:\r\n            return(\r\n                <ThemeProvider theme={myTheme}>\r\n                    <DoNotDisturbOnIcon/>\r\n                </ThemeProvider>\r\n            )\r\n        \r\n        case STATUS.AVAILABLE:\r\n            return(\r\n                <ThemeProvider theme={myTheme}>\r\n                    <CheckCircleIcon color=\"success\" />\r\n                </ThemeProvider>\r\n            )       \r\n        case STATUS.UNAVAILABLE:\r\n            return (\r\n                <ThemeProvider theme={myTheme}>\r\n                    <CancelIcon color=\"warning\"/>\r\n                </ThemeProvider>\r\n            )\r\n        }\r\n        return (\r\n            <ThemeProvider theme={myTheme}>\r\n                <ErrorIcon color=\"error\"/>\r\n            </ThemeProvider>\r\n        )\r\n}\r\nexport default function STT(props) {\r\n    const dispatch = useDispatch()\r\n    const myTheme = currTheme\r\n\r\n    const [state, setState] = React.useState({\r\n        azureStatus: false,\r\n        streamTextStatus: false,\r\n        webspeechStatus: false,\r\n        apiStatus: useSelector((state: RootState) => {\r\n            return state.APIStatusReducer as ApiStatus;\r\n        })\r\n    });\r\n    const toggleDrawer =\r\n        (apiStat: string, api:number, isArrow:boolean) =>\r\n            (event: React.KeyboardEvent | React.MouseEvent) => {\r\n                if (state.apiStatus.currentAPI !== api) {\r\n                    if (!isArrow && state.apiStatus[apiStat] === 0) {\r\n                        let apiName = \"Webspeech\";\r\n                        if (api == 1) {\r\n                            apiName = \"Microsoft Azure\"\r\n                        } else if (api == 2) {\r\n                            apiName = \"Streamtext\"\r\n                        }\r\n                        swal({\r\n                            title: \"Success!\",\r\n                            text: \"Switching to \" + apiName,\r\n                            icon: \"success\", \r\n                            timer: 2500,\r\n                        \r\n                          })\r\n                        let copyStatus = Object.assign({}, state.apiStatus);\r\n                        copyStatus.currentAPI = api\r\n                        setState({ ...state, apiStatus: copyStatus })\r\n                        dispatch({type: 'CHANGE_API_STATUS', payload: copyStatus})\r\n                    } else {\r\n                        setState({ ...state, [apiStat]: !state[apiStat] })\r\n                    }\r\n                } else if (isArrow) {\r\n                    setState({ ...state, [apiStat]: !state[apiStat] })\r\n                }\r\n            }\r\n    return (\r\n        <div>\r\n            <ListItemButton onClick={toggleDrawer(\"webspeechStatus\", 0, false)}>\r\n                <ThemeProvider theme={myTheme}>\r\n                    <ListItemIcon>\r\n                        <IconStatus{...{currentAPI: state.apiStatus.webspeechStatus}}/>\r\n                    </ListItemIcon>\r\n                </ThemeProvider>\r\n                <ListItemText primary=\"Webspeech\" />\r\n            </ListItemButton>\r\n\r\n            <ListItemButton onClick={toggleDrawer(\"azureStatus\", 1, false)} >\r\n            <ListItemIcon>\r\n                    <IconStatus{...{currentAPI: state.apiStatus.azureStatus}}/>\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Microsoft Azure\" />\r\n                <IconButton onClick={toggleDrawer(\"azureStatus\", 1, true)}>\r\n            {state.streamTextStatus ? <ExpandLess /> : <ExpandMore />}\r\n          </IconButton>\r\n            </ListItemButton>\r\n\r\n            <Collapse in={state.azureStatus} timeout=\"auto\" unmountOnExit>\r\n                <AzureDropdown apiStatus={state.apiStatus}/>\r\n            </Collapse>\r\n\r\n            <ListItemButton onClick={toggleDrawer(\"streamTextStatus\", 2, false)} >\r\n                <ListItemIcon>\r\n                    <IconStatus{...{currentAPI: state.apiStatus.streamtextStatus}}/>\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"StreamText\" />\r\n                <IconButton>\r\n            {state.streamTextStatus ? <ExpandLess /> : <ExpandMore />}\r\n          </IconButton>\r\n            </ListItemButton>\r\n            <Collapse in={state.streamTextStatus} timeout=\"auto\" unmountOnExit>\r\n                <List component=\"div\" disablePadding>\r\n                    <ListItem sx={{ pl: 4 }}>\r\n                        <Box\r\n                            component=\"form\"\r\n                            sx={{\r\n                                '& > :not(style)': { mr: '1vw', width: '15vw' },\r\n                            }}\r\n                            noValidate\r\n                            autoComplete=\"off\"\r\n                        ><TextField id=\"outlined-basic\" label=\"Key\" variant=\"outlined\" /></Box>\r\n                    </ListItem>\r\n                    <Button sx={{ pl: 4 }}>\r\n                        <ListItemText primary=\"Enter\" />\r\n                    </Button>\r\n                </List>\r\n            </Collapse>\r\n        </div>\r\n    );\r\n}","import * as React from 'react';\r\nimport { useCallback, useMemo } from 'react';\r\nimport { ControlStatus, AzureStatus, ApiStatus } from '../../../redux/types';\r\nimport * as speechSDK from 'microsoft-cognitiveservices-speech-sdk'\r\nimport { PhraseListGrammar } from 'microsoft-cognitiveservices-speech-sdk';\r\nexport const GetAzureRecognition = () => {\r\n  const pog = \"hi\"\r\n  const test = useCallback(\r\n    async (control: ControlStatus, azureStatus: AzureStatus) => new Promise((resolve, reject) => {\r\n      try {\r\n        let azureSpeech = speechSDK.SpeechTranslationConfig.fromSubscription(azureStatus.azureKey, azureStatus.azureRegion)\r\n        azureSpeech.speechRecognitionLanguage = control.speechLanguage;\r\n        azureSpeech.addTargetLanguage(control.textLanguage)\r\n        let azureAudioConfig = speechSDK.AudioConfig.fromDefaultMicrophoneInput();\r\n        let reco = new speechSDK.TranslationRecognizer(azureSpeech, azureAudioConfig);\r\n        reco.canceled = () => {\r\n          resolve(false);\r\n        }\r\n        reco.sessionStarted = () => {\r\n          resolve(true);\r\n        }\r\n        reco.recognizeOnceAsync();\r\n      } catch (error) {\r\n        resolve(false)\r\n      }\r\n    }),\r\n    [pog]\r\n  )\r\n  return useMemo(() => ({ pog, test }), [pog]);\r\n};\r\n\r\nexport const AzureRecognition = () => {\r\n  var transcript = \"\"\r\n  const [azureTranscripts, setTranscripts] = React.useState<string[]>([]);\r\n  const azureListen = useCallback(\r\n    async (transcriptsFull: string, control: React.MutableRefObject<ControlStatus>, azureStatus: React.MutableRefObject<AzureStatus>, currentAPI: React.MutableRefObject<ApiStatus>) =>\r\n      new Promise((resolve, reject) => {\r\n        \r\n\r\n        try {\r\n          var lastStartedAt = new Date().getTime();\r\n          let textLanguage = control.current.textLanguage\r\n          let azureSpeech = speechSDK.SpeechTranslationConfig.fromSubscription(azureStatus.current.azureKey, azureStatus.current.azureRegion)\r\n          azureSpeech.speechRecognitionLanguage = control.current.speechLanguage;\r\n          azureSpeech.addTargetLanguage(control.current.textLanguage)\r\n          azureSpeech.setProfanity(2);\r\n          \r\n          let azureAudioConfig = speechSDK.AudioConfig.fromDefaultMicrophoneInput();\r\n          let speechRecognition = new speechSDK.TranslationRecognizer(azureSpeech, azureAudioConfig);\r\n          let phraseList = speechSDK.PhraseListGrammar.fromRecognizer(speechRecognition)\r\n          for (let i = 0; i < azureStatus.current.phrases.length; i++) {\r\n            console.log(azureStatus.current.phrases[i])\r\n            phraseList.addPhrase(azureStatus.current.phrases[i])\r\n          }\r\n          let lastRecognized = \"\"\r\n          speechRecognition.startContinuousRecognitionAsync();\r\n          \r\n          speechRecognition.recognizing = (s, e) => {\r\n            if (control.current.listening == false || currentAPI.current.currentAPI != 1) {\r\n              speechRecognition.stopContinuousRecognitionAsync()\r\n              resolve(transcriptsFull);\r\n            } else {\r\n              \r\n              transcript = lastRecognized + e.result.translations.get(textLanguage);\r\n\r\n              setTranscripts([...azureTranscripts, transcript]);\r\n              transcriptsFull = transcript\r\n            }\r\n          };\r\n          speechRecognition.recognized = (s, e) => {\r\n            if (control.current.listening == false || currentAPI.current.currentAPI != 1) {\r\n              speechRecognition.stopContinuousRecognitionAsync()\r\n              resolve(transcriptsFull);\r\n            } else {\r\n              lastRecognized += e.result.translations.get(textLanguage) + \" \";\r\n              transcript = lastRecognized\r\n              setTranscripts([...azureTranscripts, transcript]);\r\n              transcriptsFull = transcript\r\n            }\r\n          };\r\n          speechRecognition.sessionStopped = (s, e) => {\r\n            var timeSinceStart = new Date().getTime() - lastStartedAt;\r\n            if (control.current.listening == false || currentAPI.current.currentAPI != 1) {\r\n              resolve(transcriptsFull);\r\n            } else if (timeSinceStart > 1000) {\r\n              speechRecognition.startContinuousRecognitionAsync()\r\n            }\r\n          }\r\n        } catch (error) {\r\n          resolve(false)\r\n        }\r\n      }),\r\n    [setTranscripts]\r\n  );\r\n\r\n  return useMemo(() => ({ azureTranscripts, azureListen }), [azureTranscripts]);\r\n};","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Menu from '@mui/material/Menu';\r\nimport MicIcon from '@mui/icons-material/Mic';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport StreamTextLogin from '../api/pickApi'\r\n\r\n\r\nexport default function AccountMenu() {\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Box sx={{ display: 'flex', alignItems: 'center', textAlign: 'center' }}>\r\n        <Tooltip title=\"API choice\">\r\n          <IconButton onClick={handleClick} size=\"small\" sx={{ ml: 2 }}>\r\n            <MicIcon sx={{ width: 32, height: 32, color: 'white'}}>M</MicIcon>\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Box>\r\n      <Menu\r\n        anchorEl={anchorEl}\r\n        open={open}\r\n        onClose={handleClose}\r\n        PaperProps={{\r\n          elevation: 0,\r\n          sx: {\r\n            width: '20vw',\r\n            overflow: 'invisible',\r\n            filter: 'drop-shadow(0px 2px 8px rgba(0,0,0,0.32))',\r\n            mt: 1.5,\r\n            '& .MuiAvatar-root': {\r\n              boxSizing: \"border-box\",\r\n              height: 32,\r\n              ml: -0.5,\r\n              mr: 1,\r\n            },\r\n            '&:before': {\r\n              content: '\"\"',\r\n              display: 'block',\r\n              position: 'absolute',\r\n              top: 0,\r\n              right:'48%',\r\n              width: 10,\r\n              height: 10,\r\n              bgcolor: 'background.paper',\r\n              transform: 'translateY(-50%) rotate(45deg)',\r\n              zIndex: 0,\r\n            },\r\n          },\r\n        }}\r\n        transformOrigin={{ horizontal: 'center', vertical: 'top' }}\r\n        anchorOrigin={{ horizontal: 'center', vertical: 'bottom' }}\r\n      >\r\n        <StreamTextLogin/>\r\n      </Menu>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport SideBar from '../sidebar/sidebar'\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport Fullscreen from './fullScreen'\r\nimport { ApiStatus, RootState, DisplayStatus } from '../../redux/types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport MenuHider from './menuHider';\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport PickApi from './ApiDropdown'\r\nconst currTheme = createTheme({\r\n    palette: {\r\n        primary: {\r\n            main: '#ffffff'\r\n        }\r\n    },\r\n});\r\n\r\nexport default function TemporaryDrawer(props) {\r\n    const [state, setState] = React.useState({\r\n        isOpen: false\r\n    });\r\n    const apiStatus = useSelector((state: RootState) => {\r\n        return state.APIStatusReducer as ApiStatus;\r\n    })\r\n    const displayStatus = useSelector((state: RootState) => {\r\n        return state.DisplayReducer as DisplayStatus;\r\n    })\r\n    let display = \"Webspeech\"\r\n    if (apiStatus.currentAPI == 1) {\r\n        display = \"Azure\"\r\n    } else if (apiStatus.currentAPI == 2) {\r\n        display = \"StreamText\"\r\n    } else {\r\n        display = \"Webspeech\"\r\n    }\r\n    const myTheme = currTheme\r\n    const changeVisibility = () => {\r\n        let topbarID = document.getElementById(\"topbar-wrapper\")\r\n        if (!displayStatus.menuVisible) {\r\n            if (topbarID) {\r\n                topbarID.style.opacity = \"0\"\r\n            }\r\n        } else {\r\n            if (topbarID) {\r\n                topbarID.style.opacity = \"1\"\r\n            }\r\n        }\r\n    }\r\n    const changeVisibilityOver = () => {\r\n        let topbarID = document.getElementById(\"topbar-wrapper\")\r\n        if (topbarID) {\r\n            topbarID.style.opacity = \"1\"\r\n        }\r\n    }\r\n    const toggleDrawer =\r\n        (open: boolean) =>\r\n            (event: React.MouseEvent) => {\r\n                setState({ ...state, isOpen: open });\r\n            };\r\n    return (\r\n        <AppBar position=\"fixed\" id=\"topbar-wrapper\" onMouseOut={changeVisibility} onMouseOver={changeVisibilityOver} style={{ transition: '0.6s', height: '10vh'}}>\r\n            <Toolbar style={{backgroundColor: displayStatus.secondaryColor}}>\r\n                <div className=\"d-table-cell tar\">\r\n                    <IconButton\r\n                        onClick={toggleDrawer(true)}\r\n                    >\r\n                        <ThemeProvider theme={myTheme}>\r\n                            <MenuIcon color=\"primary\" />\r\n                        </ThemeProvider>\r\n                    </IconButton>\r\n                    <Drawer\r\n                        open={state.isOpen}\r\n                        onClose={toggleDrawer(false)}\r\n                    >\r\n                        <SideBar isRecording={props.isRecording}/>\r\n                    </Drawer>\r\n                </div>\r\n                <div className=\"border d-table w-100\">\r\n                    <h2 className=\"d-table-cell tar2\">ScribeAR</h2>\r\n                </div>\r\n                <div  style ={{position: 'relative', left: '62vw'}}>\r\n                <PickApi />\r\n                </div>\r\n                <h3 style ={{position: 'relative', left: '62.5vw'}}> {display} </h3>\r\n                <div  style ={{position: 'absolute', left: '93vw', paddingLeft: '2vw'}}>\r\n\r\n                <Fullscreen/>\r\n                </div>\r\n                <div  style ={{position: 'absolute', left: '90.5vw', paddingLeft: '2vw'}}>\r\n\r\n                    <MenuHider menuVisible={displayStatus.menuVisible}/>\r\n                </div>\r\n\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}","import * as React from 'react';\r\nimport { useCallback, useMemo } from 'react';\r\nimport { ControlStatus, ApiStatus } from '../../../redux/types';\r\n\r\nexport const getSpeechRecognition = () => {\r\n  if (!window || !(window as any).webkitSpeechRecognition) {\r\n    throw new Error('Your browser does not support web speech recognition');\r\n  }\r\n  const speechRecognition = new (window as any).webkitSpeechRecognition();\r\n  speechRecognition.continuous = true;\r\n  speechRecognition.interimResults = true;\r\n  return speechRecognition as SpeechRecognition;\r\n};\r\n\r\nexport const useRecognition = () => {\r\n  var transcript=\"\"\r\n  var finalTranscript=\"\"\r\n  const [transcripts, setTranscripts] = React.useState<string[]>([]);\r\n  const listen = useCallback(\r\n    async (transcriptsFull: string, control: React.MutableRefObject<ControlStatus>,  currentAPI: React.MutableRefObject<ApiStatus>) =>\r\n      new Promise((resolve, reject) => {\r\n        \r\n        var lastStartedAt = new Date().getTime();\r\n\r\n        const speechRecognition = getSpeechRecognition();\r\n        speechRecognition.onresult = (event: SpeechRecognitionEvent) => {\r\n          if (control.current.listening == false || currentAPI.current.currentAPI != 0) {\r\n              speechRecognition.stop()\r\n              resolve(transcriptsFull);   \r\n          } else {\r\n          const finalResult = Array.from(event.results)\r\n          .map(result => result[0])\r\n          .map(result => result.transcript)\r\n          .join('');\r\n          if (finalResult) {\r\n            transcript = finalTranscript + finalResult;\r\n          }    \r\n          setTranscripts([...transcripts, transcript]);\r\n\r\n          transcriptsFull = transcript\r\n        }\r\n        };\r\n  \r\n        speechRecognition.onend = () => { \r\n          var timeSinceStart = new Date().getTime() - lastStartedAt;\r\n          if (control.current.listening && currentAPI.current.currentAPI === 0) {\r\n            finalTranscript = transcript + \" \";\r\n            if (timeSinceStart > 1000) {\r\n\r\n            speechRecognition.start()\r\n            }\r\n          } else {\r\n            resolve(transcriptsFull);   \r\n          }\r\n        \r\n        }\r\n         speechRecognition.start();\r\n      }),\r\n    [setTranscripts]\r\n  );\r\n\r\n  return useMemo(() => ({ transcripts, listen }), [transcripts]);\r\n};","import * as React from 'react';\r\nimport { useRecognition, getSpeechRecognition} from './webspeech/recognition';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { RootState } from '../../store';\r\nimport { AzureRecognition } from './azure/azureRecognition';\r\nimport { DisplayStatus,  AzureStatus, ControlStatus, ApiStatus } from '../../redux/types'\r\n\r\nvar transcriptsFull = \"testing\"\r\nlet desiredAPI = 0;\r\n\r\nexport const WebRecognitionExample: React.FC = (props) => {\r\n  const dispatch = useDispatch()\r\nconst control = useSelector((state: RootState) => {\r\n  return state.ControlReducer as ControlStatus;\r\n});\r\nconst textSize = useSelector((state: RootState) => {\r\n  return state.DisplayReducer as DisplayStatus;\r\n});\r\nconst azureStatus = useSelector((state: RootState) => {\r\n  return state.AzureReducer as AzureStatus\r\n})\r\nconst apiStatus = useSelector((state: RootState) => {\r\n  return state.APIStatusReducer as ApiStatus\r\n})\r\nReact.useEffect(() => {\r\n  console.log(\"USEEFFECT\")\r\n  if (control.listening == true) {\r\n    if (apiStatus.currentAPI == 0) {\r\n      desiredAPI = 0\r\n      webspeechHandler()\r\n    } else if (apiStatus.currentAPI == 1) {\r\n      desiredAPI = 1\r\n      azureHandler()\r\n    }\r\n  } \r\n}, [control.listening, apiStatus.currentAPI]);\r\ndocument.addEventListener(\"DOMContentLoaded\", function(){\r\n  if (apiStatus.currentAPI == 1) {\r\n  Swal.fire({\r\n    title: 'It appears you have a valid Microsoft Azure key, would you like to use Microsoft Azure?',\r\n    icon: 'info',\r\n    allowOutsideClick: false,\r\n    showDenyButton: true,\r\n    confirmButtonText: 'Yes!',\r\n  }).then((result) => {\r\n    if (result.isConfirmed) {\r\n      Swal.fire('Switching to Azure', '', 'success')\r\n      desiredAPI = 1\r\n      azureHandler()\r\n    } else {\r\n      let copyStatus = Object.assign({}, apiStatus);\r\n      copyStatus.currentAPI = 0\r\n      dispatch({type: 'CHANGE_API_STATUS', payload: copyStatus})\r\n      webspeechHandler()\r\n    }\r\n  })\r\n  } \r\n});\r\nconst textSizeA = \"\" + textSize.textSize + \"vh\"\r\nconst { azureTranscripts, azureListen } = AzureRecognition();\r\nconst { transcripts, listen } = useRecognition();\r\n\r\nconst stateRefControl = React.useRef(control)\r\nconst stateRefAzure = React.useRef(azureStatus)\r\nconst stateCurrentAPI = React.useRef(apiStatus)\r\nstateRefControl.current = control\r\nstateRefAzure.current = azureStatus\r\nstateCurrentAPI.current = apiStatus\r\n  const webspeechHandler = async () => {\r\n    const recognizedMessage = await listen(transcriptsFull, stateRefControl, stateCurrentAPI).then(response => {  \r\n      if (stateRefControl.current.listening && stateCurrentAPI.current.currentAPI == 0) {\r\n          transcriptsFull = transcriptsFull + response\r\n          webspeechHandler()\r\n        }\r\n      }\r\n    );\r\n  };\r\n  const azureHandler = async () => {\r\n    const recognizedMessage = await azureListen(transcriptsFull, stateRefControl, stateRefAzure, stateCurrentAPI).then(response => {  \r\n      if (stateRefControl.current.listening && stateCurrentAPI.current.currentAPI == 1) {\r\n          transcriptsFull = transcriptsFull + response\r\n          azureHandler()\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  const  checkNull = async (input: string) => {\r\n    if (input == null || input == \"\" ) {\r\n      input = \"empty\"\r\n    } \r\n  }\r\n  let fullTranscripts;\r\n  if (desiredAPI == 0) {\r\n    fullTranscripts = transcripts\r\n  } else {\r\n    fullTranscripts = azureTranscripts\r\n  }\r\n  const capts = document.getElementById('captionsSpace')\r\n  if (capts != null) {\r\n  var isScrolledToBottom = capts.scrollHeight - capts.clientHeight <= capts.scrollTop + 1\r\n  capts.scrollTop = capts.scrollHeight - capts.clientHeight // scroll to bottom\r\n  }\r\n  return (\r\n    <div>      \r\n      <ul >\r\n        {fullTranscripts.map(transcript => (\r\n          <h3  id = \"captionsSpace\" style ={{position: 'fixed', width: '90%', textAlign: 'left', left: '0', fontSize: textSizeA, paddingLeft: '5%', paddingRight: '60%', overflowY: 'scroll', height: '40%', color: textSize.textColor}}>{transcript}</h3>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};","import './Desktop.css';\r\nimport AppBar from '../../components/topbar/topbar'\r\nimport { RootState } from '../../redux/types';\r\nimport { WebRecognitionExample } from '../../components/api/recogComponent';\r\nimport { Provider, useDispatch, useSelector} from 'react-redux';\r\nimport Theme from '../../components/sidebar/display/themeOption';\r\nimport { store } from '../../store';\r\n\r\n/* todo:\r\n      mui theme file which has every theme and is sent to every styled function\r\n      this will help readability and make custom themes way easier to implement\r\n*/\r\nexport default function Desktop(props) {\r\n   \r\n   const isRecording = useSelector((state: RootState) => {\r\n      return state;\r\n   });   \r\n\r\n\r\n   console.log(isRecording)\r\n   const dispatch = useDispatch()\r\n   return (\r\n     <div>\r\n        <AppBar isRecording={isRecording}/>\r\n        <WebRecognitionExample/>\r\n     </div>\r\n   )\r\n  }\r\n\r\n","import Desktop from './mode/desktop/Desktop';\nimport { Provider, useDispatch, useSelector} from 'react-redux';\nimport { RootState, DisplayStatus } from './redux/types';\n\nimport './App.css';\n\nfunction App() {\n  const display = useSelector((state: RootState) => {\n    return state.DisplayReducer as DisplayStatus;\n }); \n console.log(display)\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\" style = {{ color: '#ffffff', background: display.primaryColor}}>\n        <Desktop/>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import { DisplayStatus } from \"../types\";\r\nenum COLOR {\r\n  \"BLACK\",\r\n  \"WHITE\",\r\n}\r\nconst  initialState : DisplayStatus = {\r\n  textSize: 6,\r\n  primaryColor: '#0f0f0f',\r\n  secondaryColor: \"#292929\",\r\n  textColor: '#FFFFFF',\r\n  menuVisible: true,\r\n}\r\n\r\nconst saveLocally = (varName: string, value: any) => {\r\n  localStorage.setItem(varName, JSON.stringify(value))\r\n}\r\n\r\nconst getLocalState = (name: string) => {\r\n  let checkNull = localStorage.getItem(name)\r\n  if (checkNull) {\r\n    return JSON.parse(checkNull);\r\n  } else {\r\n    return initialState\r\n  }\r\n};\r\n\r\nexport const DisplayReducer = (state = getLocalState(\"displayReducer\"), action) => {\r\n  switch (action.type) {\r\n    case 'CHANGE_PRIMARY_THEME':\r\n      \r\n      return {\r\n        ...state,\r\n        primaryColor: action.payload\r\n      }\r\n    case 'CHANGE_SECONDARY_THEME':\r\n      return {\r\n        ...state,\r\n        secondaryColor: action.payload\r\n      }\r\n    case 'CHANGE_TEXT_COLOR':\r\n      return {\r\n        ...state,\r\n        textColor: action.payload,\r\n      }\r\n    case 'SET_TEXT':\r\n      saveLocally(\"displayReducer\", action.payload)\r\n      return { ...state, ...action.payload };\r\n    case 'HIDE_MENU':\r\n      console.log(\"MENUHIDE\")\r\n      return {\r\n        ...state,\r\n        menuVisible: !state.menuVisible,\r\n        };\r\n    default:\r\n      return state;\r\n  }\r\n}","import { ApiStatus, AzureStatus, StreamtextStatus } from \"../types\";\r\nenum APIS {\r\n    \"WEBSPEECH\",\r\n    \"AZURE\",\r\n    \"STREAMTEXT\"\r\n}\r\nenum STATUS {\r\n    \"AVAILABLE\",\r\n    \"NULL\",\r\n    \"UNAVAILABLE\",\r\n    \"INPROGRESS\",\r\n    \"ERROR\"\r\n}\r\n\r\n\r\nconst initialAPIStatusState : ApiStatus = {\r\n    currentAPI: APIS.WEBSPEECH,\r\n    webspeechStatus: STATUS.AVAILABLE,\r\n    azureStatus: STATUS.NULL,\r\n    streamtextStatus: STATUS.NULL,\r\n}\r\n\r\nconst initialAzureState : AzureStatus = {\r\n    azureKey: \"Enter\",\r\n    azureRegion: \"Enter\",\r\n    phrases: [\"Azure\"],\r\n}\r\n\r\nconst initialStreamtextState : StreamtextStatus = {\r\n    key: \"Enter\"\r\n}\r\n\r\nconst saveLocally = (varName: string, value: any) => {\r\n    localStorage.setItem(varName, JSON.stringify(value))\r\n}\r\n\r\nconst getLocalState = (name: string) => {\r\n    let checkNull = localStorage.getItem(name)\r\n    if (checkNull) {\r\n      return JSON.parse(checkNull);\r\n    } else {\r\n      if (name == \"apiStatus\") {\r\n        return initialAPIStatusState\r\n      } else if (name == \"azureStatus\") {\r\n        return initialAzureState\r\n      }\r\n    }\r\n  };\r\n\r\nexport const APIStatusReducer = (state = getLocalState(\"apiStatus\"), action) => {\r\n    switch (action.type) {\r\n        case 'CHANGE_CURRENT_API':\r\n          return { ...state, ...action.payload};\r\n        case 'CHANGE_API_STATUS':\r\n          if (action.payload.azureStatus == 0 || action.payload.currentAPI !== state.currentAPI) {\r\n            saveLocally(\"apiStatus\", action.payload)\r\n          }\r\n          \r\n\r\n          return { ...state, ...action.payload};\r\n        default:\r\n          return state;\r\n      }\r\n}\r\n\r\nexport const AzureReducer = (state = getLocalState(\"azureStatus\"), action) => {\r\n    switch (action.type) {\r\n        case 'CHANGE_AZURE_LOGIN':\r\n            return {...state, ...action.payload};\r\n        case 'CHANGE_AZURE_STATUS':\r\n            return {...state, ...action.payload};\r\n        case 'ADD_PHRASE':\r\n            state.phrases.push(action.payload)\r\n            return {...state}\r\n        default:\r\n          return state;\r\n      }\r\n}\r\nexport const StreamtextReducer = (state = initialStreamtextState, action) => {\r\n    switch (action.type) {\r\n        case 'FLIP_RECORDING':\r\n          return !state\r\n        default:\r\n          return state;\r\n      }\r\n}\r\n\r\n\r\n\r\n\r\n","import { ControlStatus } from \"../types\";\r\n\r\nconst initialControlState : ControlStatus = {\r\n    listening: true,\r\n    speechLanguage: \"en-US\",\r\n    textLanguage: \"en\"\r\n}\r\n\r\nexport function ControlReducer(state = initialControlState, action) {\r\n  switch (action.type) {\r\n    case 'FLIP_RECORDING':\r\n      return { ...state, ...action.payload};\r\n    case 'FLIP_RECORDING_PHRASE':\r\n      return { ...state,\r\n              listening: action.payload};\r\n    case 'SET_SPEECH_LANGUAGE':\r\n        return {\r\n          ...state,\r\n          speechLanguage: action.payload};\r\n    case 'SET_TEXT_LANGUAGE':\r\n        return {\r\n          ...state,\r\n        speechLanguage: action.payload};\r\n    default:\r\n      return state;\r\n  }\r\n}","import {DisplayReducer} from './redux/reducers/displayReducers'\r\nimport {APIStatusReducer, AzureReducer, StreamtextReducer} from './redux/reducers/apiReducers'\r\nimport {ControlReducer} from './redux/reducers/controlReducers'\r\n\r\nimport { combineReducers, createStore } from 'redux'\r\n\r\nconst rootReducer = combineReducers({\r\n  DisplayReducer,\r\n  APIStatusReducer,\r\n  AzureReducer,\r\n  StreamtextReducer,\r\n  ControlReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer)\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {store} from './store';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <Provider store={store}>\n        <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}